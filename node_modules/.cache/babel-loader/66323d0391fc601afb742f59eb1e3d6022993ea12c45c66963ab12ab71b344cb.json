{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\ChaletMapEmbed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChaletMapEmbed = ({\n  latitude,\n  longitude,\n  title,\n  address,\n  city,\n  canton\n}) => {\n  _s();\n  const [mapSrc, setMapSrc] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Alternative simpler method using the search parameter\n    const buildSimpleMapUrl = () => {\n      let query = '';\n      if (latitude && longitude) {\n        // Use coordinates directly\n        query = `${latitude},${longitude}`;\n        console.log(`Using coordinates for ${title}: ${latitude}, ${longitude}`);\n      } else if (address && city) {\n        // Use full address\n        query = `${address}, ${city}, ${canton || 'Switzerland'}`;\n        console.log(`Using address for ${title}: ${query}`);\n      } else if (city) {\n        // Use city only\n        query = `${city}, ${canton || 'Switzerland'}`;\n        console.log(`Using city for ${title}: ${query}`);\n      } else {\n        // Ultimate fallback\n        query = 'Switzerland';\n        console.log(`Using fallback for ${title}: Switzerland`);\n      }\n      const encodedQuery = encodeURIComponent(query);\n      return `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d50000!2d8.2275!3d46.8182!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2s${encodedQuery}!5e0!3m2!1sen!2s!4v${Date.now()}!5m2!1sen!2s`;\n    };\n    const url = buildSimpleMapUrl();\n    setMapSrc(url);\n    setIsLoading(false);\n  }, [latitude, longitude, address, city, canton, title]);\n  const handleIframeLoad = () => {\n    setIsLoading(false);\n  };\n  const handleIframeError = () => {\n    setIsLoading(false);\n    console.error('Failed to load Google Maps');\n  };\n\n  // Build the Google Maps search URL for the \"Open in Maps\" link\n  const buildMapsUrl = () => {\n    let query = '';\n    if (latitude && longitude) {\n      query = `${latitude},${longitude}`;\n    } else if (address && city) {\n      query = `${address}, ${city}, ${canton || 'Switzerland'}`;\n    } else if (city) {\n      query = `${city}, ${canton || 'Switzerland'}`;\n    } else {\n      query = 'Switzerland';\n    }\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(query)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chalet-map-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: mapSrc,\n      width: \"100%\",\n      height: \"300\",\n      style: {\n        border: 0,\n        borderRadius: '12px',\n        display: isLoading ? 'none' : 'block'\n      },\n      allowFullScreen: \"\",\n      loading: \"lazy\",\n      referrerPolicy: \"no-referrer-when-downgrade\",\n      title: `Map showing location of ${title || 'chalet'}`,\n      onLoad: handleIframeLoad,\n      onError: handleIframeError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-link\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: buildMapsUrl(),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"open-maps-link\",\n        children: \"\\uD83D\\uDCCD Open in Google Maps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChaletMapEmbed, \"B1bEMGh77YjLU2Dp61wAICwYpIc=\");\n_c = ChaletMapEmbed;\nexport default ChaletMapEmbed;\nvar _c;\n$RefreshReg$(_c, \"ChaletMapEmbed\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChaletMapEmbed","latitude","longitude","title","address","city","canton","_s","mapSrc","setMapSrc","isLoading","setIsLoading","buildSimpleMapUrl","query","console","log","encodedQuery","encodeURIComponent","Date","now","url","handleIframeLoad","handleIframeError","error","buildMapsUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","width","height","style","border","borderRadius","display","allowFullScreen","loading","referrerPolicy","onLoad","onError","href","target","rel","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/ChaletMapEmbed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChaletMapEmbed = ({ latitude, longitude, title, address, city, canton }) => {\r\n  const [mapSrc, setMapSrc] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Alternative simpler method using the search parameter\r\n    const buildSimpleMapUrl = () => {\r\n      let query = '';\r\n      \r\n      if (latitude && longitude) {\r\n        // Use coordinates directly\r\n        query = `${latitude},${longitude}`;\r\n        console.log(`Using coordinates for ${title}: ${latitude}, ${longitude}`);\r\n      } else if (address && city) {\r\n        // Use full address\r\n        query = `${address}, ${city}, ${canton || 'Switzerland'}`;\r\n        console.log(`Using address for ${title}: ${query}`);\r\n      } else if (city) {\r\n        // Use city only\r\n        query = `${city}, ${canton || 'Switzerland'}`;\r\n        console.log(`Using city for ${title}: ${query}`);\r\n      } else {\r\n        // Ultimate fallback\r\n        query = 'Switzerland';\r\n        console.log(`Using fallback for ${title}: Switzerland`);\r\n      }\r\n      \r\n      const encodedQuery = encodeURIComponent(query);\r\n      return `https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d50000!2d8.2275!3d46.8182!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2s${encodedQuery}!5e0!3m2!1sen!2s!4v${Date.now()}!5m2!1sen!2s`;\r\n    };\r\n\r\n    const url = buildSimpleMapUrl();\r\n    setMapSrc(url);\r\n    setIsLoading(false);\r\n  }, [latitude, longitude, address, city, canton, title]);\r\n\r\n  const handleIframeLoad = () => {\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleIframeError = () => {\r\n    setIsLoading(false);\r\n    console.error('Failed to load Google Maps');\r\n  };\r\n\r\n  // Build the Google Maps search URL for the \"Open in Maps\" link\r\n  const buildMapsUrl = () => {\r\n    let query = '';\r\n    \r\n    if (latitude && longitude) {\r\n      query = `${latitude},${longitude}`;\r\n    } else if (address && city) {\r\n      query = `${address}, ${city}, ${canton || 'Switzerland'}`;\r\n    } else if (city) {\r\n      query = `${city}, ${canton || 'Switzerland'}`;\r\n    } else {\r\n      query = 'Switzerland';\r\n    }\r\n    \r\n    return `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(query)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"chalet-map-container\">\r\n      {isLoading && (\r\n        <div className=\"map-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Loading map...</p>\r\n        </div>\r\n      )}\r\n      \r\n      <iframe\r\n        src={mapSrc}\r\n        width=\"100%\"\r\n        height=\"300\"\r\n        style={{\r\n          border: 0,\r\n          borderRadius: '12px',\r\n          display: isLoading ? 'none' : 'block'\r\n        }}\r\n        allowFullScreen=\"\"\r\n        loading=\"lazy\"\r\n        referrerPolicy=\"no-referrer-when-downgrade\"\r\n        title={`Map showing location of ${title || 'chalet'}`}\r\n        onLoad={handleIframeLoad}\r\n        onError={handleIframeError}\r\n      />\r\n      \r\n      {/* Link to open in Google Maps */}\r\n      <div className=\"map-link\">\r\n        <a\r\n          href={buildMapsUrl()}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"open-maps-link\"\r\n        >\r\n          üìç Open in Google Maps\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChaletMapEmbed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,KAAK;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIC,KAAK,GAAG,EAAE;MAEd,IAAIZ,QAAQ,IAAIC,SAAS,EAAE;QACzB;QACAW,KAAK,GAAG,GAAGZ,QAAQ,IAAIC,SAAS,EAAE;QAClCY,OAAO,CAACC,GAAG,CAAC,yBAAyBZ,KAAK,KAAKF,QAAQ,KAAKC,SAAS,EAAE,CAAC;MAC1E,CAAC,MAAM,IAAIE,OAAO,IAAIC,IAAI,EAAE;QAC1B;QACAQ,KAAK,GAAG,GAAGT,OAAO,KAAKC,IAAI,KAAKC,MAAM,IAAI,aAAa,EAAE;QACzDQ,OAAO,CAACC,GAAG,CAAC,qBAAqBZ,KAAK,KAAKU,KAAK,EAAE,CAAC;MACrD,CAAC,MAAM,IAAIR,IAAI,EAAE;QACf;QACAQ,KAAK,GAAG,GAAGR,IAAI,KAAKC,MAAM,IAAI,aAAa,EAAE;QAC7CQ,OAAO,CAACC,GAAG,CAAC,kBAAkBZ,KAAK,KAAKU,KAAK,EAAE,CAAC;MAClD,CAAC,MAAM;QACL;QACAA,KAAK,GAAG,aAAa;QACrBC,OAAO,CAACC,GAAG,CAAC,sBAAsBZ,KAAK,eAAe,CAAC;MACzD;MAEA,MAAMa,YAAY,GAAGC,kBAAkB,CAACJ,KAAK,CAAC;MAC9C,OAAO,gJAAgJG,YAAY,sBAAsBE,IAAI,CAACC,GAAG,CAAC,CAAC,cAAc;IACnN,CAAC;IAED,MAAMC,GAAG,GAAGR,iBAAiB,CAAC,CAAC;IAC/BH,SAAS,CAACW,GAAG,CAAC;IACdT,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACV,QAAQ,EAAEC,SAAS,EAAEE,OAAO,EAAEC,IAAI,EAAEC,MAAM,EAAEH,KAAK,CAAC,CAAC;EAEvD,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BV,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BX,YAAY,CAAC,KAAK,CAAC;IACnBG,OAAO,CAACS,KAAK,CAAC,4BAA4B,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIX,KAAK,GAAG,EAAE;IAEd,IAAIZ,QAAQ,IAAIC,SAAS,EAAE;MACzBW,KAAK,GAAG,GAAGZ,QAAQ,IAAIC,SAAS,EAAE;IACpC,CAAC,MAAM,IAAIE,OAAO,IAAIC,IAAI,EAAE;MAC1BQ,KAAK,GAAG,GAAGT,OAAO,KAAKC,IAAI,KAAKC,MAAM,IAAI,aAAa,EAAE;IAC3D,CAAC,MAAM,IAAID,IAAI,EAAE;MACfQ,KAAK,GAAG,GAAGR,IAAI,KAAKC,MAAM,IAAI,aAAa,EAAE;IAC/C,CAAC,MAAM;MACLO,KAAK,GAAG,aAAa;IACvB;IAEA,OAAO,mDAAmDI,kBAAkB,CAACJ,KAAK,CAAC,EAAE;EACvF,CAAC;EAED,oBACEd,OAAA;IAAK0B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,GAClChB,SAAS,iBACRX,OAAA;MAAK0B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B3B,OAAA;QAAK0B,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC/B,OAAA;QAAA2B,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACN,eAED/B,OAAA;MACEgC,GAAG,EAAEvB,MAAO;MACZwB,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,KAAK;MACZC,KAAK,EAAE;QACLC,MAAM,EAAE,CAAC;QACTC,YAAY,EAAE,MAAM;QACpBC,OAAO,EAAE3B,SAAS,GAAG,MAAM,GAAG;MAChC,CAAE;MACF4B,eAAe,EAAC,EAAE;MAClBC,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,4BAA4B;MAC3CrC,KAAK,EAAE,2BAA2BA,KAAK,IAAI,QAAQ,EAAG;MACtDsC,MAAM,EAAEpB,gBAAiB;MACzBqB,OAAO,EAAEpB;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eAGF/B,OAAA;MAAK0B,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvB3B,OAAA;QACE4C,IAAI,EAAEnB,YAAY,CAAC,CAAE;QACrBoB,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QACzBpB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC3B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CArGIP,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AAuGpB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}