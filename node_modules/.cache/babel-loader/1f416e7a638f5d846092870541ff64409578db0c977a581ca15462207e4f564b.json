{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\pages\\\\AllPropertiesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Property from '../components/Property';\nimport '../styles/AllPropertypage.css';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport SearchFilter from '../components/SearchFilter';\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPropertiesPage = () => {\n  _s();\n  const location = useLocation();\n  const [properties, setProperties] = useState([]);\n  const [filteredProperties, setFilteredProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\n\n  // Reference to track component mounting state\n  const isMounted = useRef(true);\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [propertiesPerPage] = useState(8);\n\n  // Use callback for updateFilteredProperties to avoid recreation on every render\n  const updateFilteredProperties = useCallback(newFiltered => {\n    setFilteredProperties(newFiltered);\n    setCurrentPage(1); // Reset to first page whenever filters are applied\n  }, []);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    // Get search term from URL parameters\n    const queryParams = new URLSearchParams(location.search);\n    const searchParam = queryParams.get('search');\n    if (searchParam) {\n      setInitialSearchTerm(searchParam);\n    }\n  }, [location.search]);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        setLoading(true);\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          if (isMounted.current) {\n            setProperties(data);\n\n            // If there's an initial search term, filter the properties accordingly\n            if (initialSearchTerm) {\n              const searchLower = initialSearchTerm.toLowerCase();\n              const filtered = data.filter(property => {\n                var _property$title, _property$location, _property$description;\n                return ((_property$title = property.title) === null || _property$title === void 0 ? void 0 : _property$title.toLowerCase().includes(searchLower)) || ((_property$location = property.location) === null || _property$location === void 0 ? void 0 : _property$location.toLowerCase().includes(searchLower)) || ((_property$description = property.description) === null || _property$description === void 0 ? void 0 : _property$description.toLowerCase().includes(searchLower));\n              });\n              setFilteredProperties(filtered);\n            } else {\n              setFilteredProperties(data);\n            }\n            // Reset to page 1 when data is fetched\n            setCurrentPage(1);\n          }\n        } else {\n          throw new Error('Invalid data format received from API');\n        }\n      } catch (err) {\n        console.error('Error fetching properties:', err);\n        if (isMounted.current) {\n          setError(`Error loading properties: ${err.message}`);\n        }\n      } finally {\n        if (isMounted.current) {\n          setLoading(false);\n        }\n      }\n    };\n    fetchProperties();\n  }, [initialSearchTerm]);\n\n  // Force re-render when pagination changes\n  const forceUpdate = useCallback(() => {\n    if (isMounted.current) {\n      setFilteredProperties(prev => [...prev]);\n    }\n  }, []);\n\n  // Calculate pagination values\n  const indexOfLastProperty = currentPage * propertiesPerPage;\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n  const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\n  const totalPages = Math.ceil(filteredProperties.length / propertiesPerPage);\n\n  // Ensure currentPage is valid whenever filteredProperties changes\n  useEffect(() => {\n    if (currentPage > Math.max(1, totalPages) && totalPages > 0) {\n      setCurrentPage(Math.max(1, totalPages));\n    }\n  }, [filteredProperties, currentPage, totalPages]);\n\n  // Page navigation handlers with state updates guaranteed\n  const handlePageClick = pageNumber => {\n    console.log(`Attempting to change to page ${pageNumber} from current ${currentPage}`);\n    if (pageNumber !== currentPage) {\n      setCurrentPage(pageNumber);\n      setTimeout(() => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        forceUpdate(); // Force re-render after state update\n      }, 0);\n    }\n  };\n  const handleNextPage = () => {\n    console.log(`Attempting to move to next page. Current: ${currentPage}, Total: ${totalPages}`);\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => {\n        const nextPage = prevPage + 1;\n        console.log(`Moving to next page: ${nextPage}`);\n        setTimeout(() => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n          forceUpdate(); // Force re-render after state update\n        }, 0);\n        return nextPage;\n      });\n    }\n  };\n  const handlePrevPage = () => {\n    console.log(`Attempting to move to previous page. Current: ${currentPage}`);\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => {\n        const nextPage = prevPage - 1;\n        console.log(`Moving to previous page: ${nextPage}`);\n        setTimeout(() => {\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n          });\n          forceUpdate(); // Force re-render after state update\n        }, 0);\n        return nextPage;\n      });\n    }\n  };\n  const handleFirstPage = () => {\n    console.log(`Attempting to move to first page. Current: ${currentPage}`);\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n      setTimeout(() => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        forceUpdate(); // Force re-render after state update\n      }, 0);\n    }\n  };\n  const handleLastPage = () => {\n    console.log(`Attempting to move to last page. Current: ${currentPage}, Total: ${totalPages}`);\n    if (currentPage !== totalPages && totalPages > 0) {\n      setCurrentPage(totalPages);\n      setTimeout(() => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n        forceUpdate(); // Force re-render after state update\n      }, 0);\n    }\n  };\n\n  // Debug current state\n  console.log('Current pagination state:', {\n    currentPage,\n    totalPages,\n    totalProperties: filteredProperties.length,\n    propertiesPerPage,\n    indexOfFirstProperty,\n    indexOfLastProperty,\n    currentPropertiesCount: currentProperties.length\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading Chalets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-properties-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-listings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listings-header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n          properties: properties,\n          setFilteredProperties: updateFilteredProperties,\n          initialSearchTerm: initialSearchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"properties-count\",\n          children: [filteredProperties.length, \" \", filteredProperties.length === 1 ? 'property' : 'properties', \" found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), filteredProperties.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No properties match your search criteria. Try adjusting your filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"properties-container\",\n          \"data-page\": currentPage,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"properties-slider\",\n            children: currentProperties.map(property => /*#__PURE__*/_jsxDEV(Property, {\n              property: property,\n              variant: \"grid\"\n            }, `property-${property.id}-page-${currentPage}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          \"data-current-page\": currentPage,\n          \"data-total-pages\": totalPages,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn first-page\",\n            onClick: handleFirstPage,\n            disabled: currentPage === 1,\n            title: \"First Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn prev-page\",\n            onClick: handlePrevPage,\n            disabled: currentPage === 1,\n            title: \"Previous Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-pages\",\n            children: Array.from({\n              length: Math.min(5, totalPages)\n            }).map((_, index) => {\n              let pageNumber;\n              if (totalPages <= 5) {\n                // If we have 5 or fewer pages, show all pages\n                pageNumber = index + 1;\n              } else {\n                // For more than 5 pages, show a window around current page\n                const offset = Math.max(0, Math.min(totalPages - 5, currentPage - 3));\n                pageNumber = index + 1 + offset;\n              }\n              return /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageClick(pageNumber),\n                className: `page-btn page-number ${currentPage === pageNumber ? 'active' : ''}`,\n                \"data-page-number\": pageNumber,\n                children: pageNumber\n              }, `page-btn-${pageNumber}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn next-page\",\n            onClick: handleNextPage,\n            disabled: currentPage === totalPages,\n            title: \"Next Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn last-page\",\n            onClick: handleLastPage,\n            disabled: currentPage === totalPages,\n            title: \"Last Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-info\",\n          children: [\"Showing \", filteredProperties.length > 0 ? indexOfFirstProperty + 1 : 0, \"-\", Math.min(indexOfLastProperty, filteredProperties.length), \" of \", filteredProperties.length, \" properties\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPropertiesPage, \"laSjIPxn9kfJmC0+yzlwkTa6vvc=\", false, function () {\n  return [useLocation];\n});\n_c = AllPropertiesPage;\nexport default AllPropertiesPage;\nvar _c;\n$RefreshReg$(_c, \"AllPropertiesPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useLocation","Property","Navbar","Footer","SearchFilter","FiChevronLeft","FiChevronRight","FiChevronsLeft","FiChevronsRight","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPropertiesPage","_s","location","properties","setProperties","filteredProperties","setFilteredProperties","loading","setLoading","error","setError","initialSearchTerm","setInitialSearchTerm","isMounted","currentPage","setCurrentPage","propertiesPerPage","updateFilteredProperties","newFiltered","current","queryParams","URLSearchParams","search","searchParam","get","fetchProperties","apiUrl","response","fetch","method","mode","headers","ok","Error","status","data","json","Array","isArray","searchLower","toLowerCase","filtered","filter","property","_property$title","_property$location","_property$description","title","includes","description","err","console","message","forceUpdate","prev","indexOfLastProperty","indexOfFirstProperty","currentProperties","slice","totalPages","Math","ceil","length","max","handlePageClick","pageNumber","log","setTimeout","window","scrollTo","top","behavior","handleNextPage","prevPage","nextPage","handlePrevPage","handleFirstPage","handleLastPage","totalProperties","currentPropertiesCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","id","onClick","disabled","from","min","_","index","offset","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/pages/AllPropertiesPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Property from '../components/Property';\r\nimport '../styles/AllPropertypage.css';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\r\n\r\nconst AllPropertiesPage = () => {\r\n  const location = useLocation();\r\n  const [properties, setProperties] = useState([]);\r\n  const [filteredProperties, setFilteredProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\r\n  \r\n  // Reference to track component mounting state\r\n  const isMounted = useRef(true);\r\n\r\n  // Pagination states\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [propertiesPerPage] = useState(8);\r\n\r\n  // Use callback for updateFilteredProperties to avoid recreation on every render\r\n  const updateFilteredProperties = useCallback((newFiltered) => {\r\n    setFilteredProperties(newFiltered);\r\n    setCurrentPage(1); // Reset to first page whenever filters are applied\r\n  }, []);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get search term from URL parameters\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchParam = queryParams.get('search');\r\n    if (searchParam) {\r\n      setInitialSearchTerm(searchParam);\r\n    }\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\r\n        \r\n        const response = await fetch(apiUrl, {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (Array.isArray(data)) {\r\n          if (isMounted.current) {\r\n            setProperties(data);\r\n            \r\n            // If there's an initial search term, filter the properties accordingly\r\n            if (initialSearchTerm) {\r\n              const searchLower = initialSearchTerm.toLowerCase();\r\n              const filtered = data.filter(property => \r\n                property.title?.toLowerCase().includes(searchLower) || \r\n                property.location?.toLowerCase().includes(searchLower) ||\r\n                property.description?.toLowerCase().includes(searchLower)\r\n              );\r\n              setFilteredProperties(filtered);\r\n            } else {\r\n              setFilteredProperties(data);\r\n            }\r\n            // Reset to page 1 when data is fetched\r\n            setCurrentPage(1);\r\n          }\r\n        } else {\r\n          throw new Error('Invalid data format received from API');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching properties:', err);\r\n        if (isMounted.current) {\r\n          setError(`Error loading properties: ${err.message}`);\r\n        }\r\n      } finally {\r\n        if (isMounted.current) {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, [initialSearchTerm]);\r\n\r\n  // Force re-render when pagination changes\r\n  const forceUpdate = useCallback(() => {\r\n    if (isMounted.current) {\r\n      setFilteredProperties(prev => [...prev]);\r\n    }\r\n  }, []);\r\n\r\n  // Calculate pagination values\r\n  const indexOfLastProperty = currentPage * propertiesPerPage;\r\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n  const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\r\n  const totalPages = Math.ceil(filteredProperties.length / propertiesPerPage);\r\n\r\n  // Ensure currentPage is valid whenever filteredProperties changes\r\n  useEffect(() => {\r\n    if (currentPage > Math.max(1, totalPages) && totalPages > 0) {\r\n      setCurrentPage(Math.max(1, totalPages));\r\n    }\r\n  }, [filteredProperties, currentPage, totalPages]);\r\n\r\n  // Page navigation handlers with state updates guaranteed\r\n  const handlePageClick = (pageNumber) => {\r\n    console.log(`Attempting to change to page ${pageNumber} from current ${currentPage}`);\r\n    if (pageNumber !== currentPage) {\r\n      setCurrentPage(pageNumber);\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        forceUpdate(); // Force re-render after state update\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    console.log(`Attempting to move to next page. Current: ${currentPage}, Total: ${totalPages}`);\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(prevPage => {\r\n        const nextPage = prevPage + 1;\r\n        console.log(`Moving to next page: ${nextPage}`);\r\n        \r\n        setTimeout(() => {\r\n          window.scrollTo({ top: 0, behavior: 'smooth' });\r\n          forceUpdate(); // Force re-render after state update\r\n        }, 0);\r\n        \r\n        return nextPage;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    console.log(`Attempting to move to previous page. Current: ${currentPage}`);\r\n    if (currentPage > 1) {\r\n      setCurrentPage(prevPage => {\r\n        const nextPage = prevPage - 1;\r\n        console.log(`Moving to previous page: ${nextPage}`);\r\n        \r\n        setTimeout(() => {\r\n          window.scrollTo({ top: 0, behavior: 'smooth' });\r\n          forceUpdate(); // Force re-render after state update\r\n        }, 0);\r\n        \r\n        return nextPage;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFirstPage = () => {\r\n    console.log(`Attempting to move to first page. Current: ${currentPage}`);\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        forceUpdate(); // Force re-render after state update\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  const handleLastPage = () => {\r\n    console.log(`Attempting to move to last page. Current: ${currentPage}, Total: ${totalPages}`);\r\n    if (currentPage !== totalPages && totalPages > 0) {\r\n      setCurrentPage(totalPages);\r\n      setTimeout(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        forceUpdate(); // Force re-render after state update\r\n      }, 0);\r\n    }\r\n  };\r\n\r\n  // Debug current state\r\n  console.log('Current pagination state:', {\r\n    currentPage,\r\n    totalPages,\r\n    totalProperties: filteredProperties.length,\r\n    propertiesPerPage,\r\n    indexOfFirstProperty,\r\n    indexOfLastProperty,\r\n    currentPropertiesCount: currentProperties.length\r\n  });\r\n\r\n  if (loading) return <div className=\"loading\">Loading Chalets...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"all-properties-page\">\r\n      <Navbar />\r\n      \r\n      <div className=\"property-listings\">\r\n        <div className=\"listings-header\">\r\n          <SearchFilter \r\n            properties={properties} \r\n            setFilteredProperties={updateFilteredProperties}\r\n            initialSearchTerm={initialSearchTerm}\r\n          />\r\n          \r\n          <p className=\"properties-count\">\r\n            {filteredProperties.length} {filteredProperties.length === 1 ? 'property' : 'properties'} found\r\n          </p>\r\n        </div>\r\n\r\n        {filteredProperties.length === 0 ? (\r\n          <div className=\"no-results\">No properties match your search criteria. Try adjusting your filters.</div>\r\n        ) : (\r\n          <>\r\n            {/* Properties Grid - Adding a data attribute for page number */}\r\n            <div className=\"properties-container\" data-page={currentPage}>\r\n              <div className=\"properties-slider\">\r\n                {currentProperties.map(property => (\r\n                  <Property \r\n                    key={`property-${property.id}-page-${currentPage}`}\r\n                    property={property}\r\n                    variant=\"grid\" \r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pagination Controls - Now with additional debugging classes */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination-controls\" data-current-page={currentPage} data-total-pages={totalPages}>\r\n                <button \r\n                  className=\"page-btn first-page\"\r\n                  onClick={handleFirstPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"First Page\"\r\n                >\r\n                  <FiChevronsLeft />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn prev-page\"\r\n                  onClick={handlePrevPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"Previous Page\"\r\n                >\r\n                  <FiChevronLeft />\r\n                </button>\r\n                \r\n                <div className=\"pagination-pages\">\r\n                  {Array.from({ length: Math.min(5, totalPages) }).map((_, index) => {\r\n                    let pageNumber;\r\n                    \r\n                    if (totalPages <= 5) {\r\n                      // If we have 5 or fewer pages, show all pages\r\n                      pageNumber = index + 1;\r\n                    } else {\r\n                      // For more than 5 pages, show a window around current page\r\n                      const offset = Math.max(0, Math.min(totalPages - 5, currentPage - 3));\r\n                      pageNumber = index + 1 + offset;\r\n                    }\r\n                    \r\n                    return (\r\n                      <button\r\n                        key={`page-btn-${pageNumber}`}\r\n                        onClick={() => handlePageClick(pageNumber)}\r\n                        className={`page-btn page-number ${currentPage === pageNumber ? 'active' : ''}`}\r\n                        data-page-number={pageNumber}\r\n                      >\r\n                        {pageNumber}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"page-btn next-page\"\r\n                  onClick={handleNextPage}\r\n                  disabled={currentPage === totalPages}\r\n                  title=\"Next Page\"\r\n                >\r\n                  <FiChevronRight />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn last-page\"\r\n                  onClick={handleLastPage}\r\n                  disabled={currentPage === totalPages}\r\n                  title=\"Last Page\"\r\n                >\r\n                  <FiChevronsRight />\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Display which properties are being shown */}\r\n            <div className=\"pagination-info\">\r\n              Showing {filteredProperties.length > 0 ? indexOfFirstProperty + 1 : 0}-{Math.min(indexOfLastProperty, filteredProperties.length)} of {filteredProperties.length} properties\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPropertiesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}