{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\PropertyListings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/PropertyListings.css';\nimport { Link } from 'react-router-dom';\nimport { FiHome } from 'react-icons/fi';\nimport Property from './Property';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyListings = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        setLoading(true);\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/property_manage.php?view=active`;\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Debug: Log the raw data to see what we're getting\n        console.log('Raw API data:', data);\n        if (Array.isArray(data)) {\n          // Optimize: Only store essential data with proper field mapping\n          const optimizedData = data.map(property => {\n            // Debug: Log each property's likes data\n            console.log(`Property ${property.id} likes:`, {\n              likes_count: property.likes_count,\n              total_likes: property.total_likes,\n              favorites_count: property.favorites_count\n            });\n            return {\n              id: property.id,\n              title: property.title,\n              price: property.price,\n              main_image: property.main_image,\n              city: property.city,\n              bedrooms: property.bedrooms || property.bedroom_count || property.bed_count || property.beds,\n              bathrooms: property.bathrooms || property.bathroom_count || property.bath_count || property.baths,\n              status: property.status,\n              description: property.description,\n              // Use the EXACT same logic as PropertyManagement\n              likes_count: parseInt(property.likes_count || 0)\n            };\n          });\n\n          // Debug: Log the processed data\n          console.log('Processed data with likes:', optimizedData.map(p => ({\n            id: p.id,\n            title: p.title,\n            likes_count: p.likes_count\n          })));\n\n          // Sort by likes count (descending) - EXACT same logic as PropertyManagement\n          const mostLikedProperties = optimizedData.sort((a, b) => parseInt(b.likes_count || 0) - parseInt(a.likes_count || 0)).slice(0, 4);\n\n          // Debug: Log the final sorted results\n          console.log('Top 4 most liked:', mostLikedProperties.map(p => ({\n            id: p.id,\n            title: p.title,\n            likes_count: p.likes_count\n          })));\n          setProperties(mostLikedProperties);\n        } else {\n          throw new Error('Invalid data format received from API');\n        }\n      } catch (err) {\n        console.error('Error fetching properties:', err);\n        setError(`Error loading properties: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading properties...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 21\n  }, this);\n  if (properties.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-results\",\n    children: \"No properties found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"property-listings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"listings-title\",\n        children: \"Most Loved Swiss Chalets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"listings-subtitle\",\n        children: \"Discover the chalets that have captured the hearts of our visitors. These are the most favorited and highly appreciated properties across Switzerland.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"properties-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"properties-grid\",\n        children: properties.map(property => /*#__PURE__*/_jsxDEV(Property, {\n          property: property,\n          variant: \"default\"\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-all-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/chalets\",\n        className: \"view-all-btn\",\n        children: [/*#__PURE__*/_jsxDEV(FiHome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" View All Chalets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyListings, \"GHOAN7h9Mu6I/LUJAEtJBThJSeQ=\");\n_c = PropertyListings;\nexport default PropertyListings;\nvar _c;\n$RefreshReg$(_c, \"PropertyListings\");","map":{"version":3,"names":["React","useState","useEffect","Link","FiHome","Property","jsxDEV","_jsxDEV","PropertyListings","_s","properties","setProperties","loading","setLoading","error","setError","fetchProperties","apiUrl","process","env","REACT_APP_API_BASE_URL","response","fetch","method","mode","headers","ok","Error","status","data","json","console","log","Array","isArray","optimizedData","map","property","id","likes_count","total_likes","favorites_count","title","price","main_image","city","bedrooms","bedroom_count","bed_count","beds","bathrooms","bathroom_count","bath_count","baths","description","parseInt","p","mostLikedProperties","sort","a","b","slice","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","variant","to","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/PropertyListings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/PropertyListings.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiHome } from 'react-icons/fi';\r\nimport Property from './Property';\r\n\r\nconst PropertyListings = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/property_manage.php?view=active`;\r\n        \r\n        const response = await fetch(apiUrl, {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        // Debug: Log the raw data to see what we're getting\r\n        console.log('Raw API data:', data);\r\n        \r\n        if (Array.isArray(data)) {\r\n          // Optimize: Only store essential data with proper field mapping\r\n          const optimizedData = data.map(property => {\r\n            // Debug: Log each property's likes data\r\n            console.log(`Property ${property.id} likes:`, {\r\n              likes_count: property.likes_count,\r\n              total_likes: property.total_likes,\r\n              favorites_count: property.favorites_count\r\n            });\r\n            \r\n            return {\r\n              id: property.id,\r\n              title: property.title,\r\n              price: property.price,\r\n              main_image: property.main_image,\r\n              city: property.city,\r\n              bedrooms: property.bedrooms || property.bedroom_count || property.bed_count || property.beds,\r\n              bathrooms: property.bathrooms || property.bathroom_count || property.bath_count || property.baths,\r\n              status: property.status,\r\n              description: property.description,\r\n              // Use the EXACT same logic as PropertyManagement\r\n              likes_count: parseInt(property.likes_count || 0)\r\n            };\r\n          });\r\n          \r\n          // Debug: Log the processed data\r\n          console.log('Processed data with likes:', optimizedData.map(p => ({\r\n            id: p.id,\r\n            title: p.title,\r\n            likes_count: p.likes_count\r\n          })));\r\n          \r\n          // Sort by likes count (descending) - EXACT same logic as PropertyManagement\r\n          const mostLikedProperties = optimizedData\r\n            .sort((a, b) => parseInt(b.likes_count || 0) - parseInt(a.likes_count || 0))\r\n            .slice(0, 4);\r\n          \r\n          // Debug: Log the final sorted results\r\n          console.log('Top 4 most liked:', mostLikedProperties.map(p => ({\r\n            id: p.id,\r\n            title: p.title,\r\n            likes_count: p.likes_count\r\n          })));\r\n          \r\n          setProperties(mostLikedProperties);\r\n        } else {\r\n          throw new Error('Invalid data format received from API');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching properties:', err);\r\n        setError(`Error loading properties: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"loading\">Loading properties...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (properties.length === 0) return <div className=\"no-results\">No properties found.</div>;\r\n\r\n  return (\r\n    <section className=\"property-listings\">\r\n      <div className=\"listings-header\">\r\n        <h2 className=\"listings-title\">Most Loved Swiss Chalets</h2>\r\n        <p className=\"listings-subtitle\">\r\n          Discover the chalets that have captured the hearts of our visitors. These are the most favorited and highly appreciated properties across Switzerland.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"properties-container\">\r\n        <div className=\"properties-grid\">\r\n          {properties.map(property => (\r\n            <Property key={property.id} property={property} variant=\"default\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"view-all-container\">\r\n        <Link to=\"/chalets\" className=\"view-all-btn\">\r\n          <FiHome /> View All Chalets\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PropertyListings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}