{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\DashboardOverview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiUsers, FiHome, FiDollarSign, FiActivity, FiBarChart2, FiPlus, FiHeart, FiMapPin, FiCalendar, FiPackage, FiRefreshCw, FiSend, FiClock } from 'react-icons/fi';\nimport axios from 'axios';\nimport { BarChart, Bar, PieChart, Pie, Cell, LineChart, Line, ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ZAxis } from 'recharts';\nimport '../styles/DashboardOverview.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashboardOverview() {\n  _s();\n  // State for statistics\n  const [stats, setStats] = useState({\n    users: {\n      total: 0,\n      trend: 0\n    },\n    properties: {\n      total: 0,\n      trend: 0\n    },\n    revenue: {\n      total: 0,\n      trend: 0\n    },\n    likes: {\n      total: 0,\n      trend: 0\n    }\n  });\n\n  // State for charts data\n  const [chartData, setChartData] = useState({\n    propertiesByType: [],\n    propertiesByStatus: [],\n    propertiesByCity: [],\n    propertiesByYear: [],\n    activePropertyOwners: [],\n    topLikedProperties: [],\n    propertyAgeVsPrice: []\n  });\n\n  // State for recent activity\n  const [recentActivity, setRecentActivity] = useState([]);\n\n  // State for loading and error status\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch real data from the backend\n        const response = await axios.get('${process.env.REACT_APP_API_BASE_URL}/dashboard_stats.php', {\n          withCredentials: true\n        });\n        console.log('API Response:', response.data); // Debug log\n\n        const data = response.data;\n        if (data.success) {\n          var _data$propertiesByCit, _data$propertiesByYea, _data$activePropertyO, _data$topLikedPropert, _data$propertyAgeVsPr;\n          // Set stats from API response\n          setStats({\n            users: data.stats.users || {\n              total: 0,\n              trend: 0\n            },\n            properties: data.stats.properties || {\n              total: 0,\n              trend: 0\n            },\n            revenue: data.stats.revenue || {\n              total: 0,\n              trend: 0\n            },\n            likes: data.stats.likes || {\n              total: 0,\n              trend: 0\n            }\n          });\n\n          // Format property type data for the pie chart\n          const typeData = data.propertyByType.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format property status data for the bar chart\n          const statusData = data.propertyByStatus.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format properties by city data\n          const cityData = ((_data$propertiesByCit = data.propertiesByCity) === null || _data$propertiesByCit === void 0 ? void 0 : _data$propertiesByCit.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format properties by year built data\n          const yearData = ((_data$propertiesByYea = data.propertiesByYear) === null || _data$propertiesByYea === void 0 ? void 0 : _data$propertiesByYea.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format active property owners data\n          const ownersData = ((_data$activePropertyO = data.activePropertyOwners) === null || _data$activePropertyO === void 0 ? void 0 : _data$activePropertyO.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format top liked properties data\n          const likedPropertiesData = ((_data$topLikedPropert = data.topLikedProperties) === null || _data$topLikedPropert === void 0 ? void 0 : _data$topLikedPropert.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format property age vs price data (for scatter plot)\n          const ageVsPriceData = ((_data$propertyAgeVsPr = data.propertyAgeVsPrice) === null || _data$propertyAgeVsPr === void 0 ? void 0 : _data$propertyAgeVsPr.map(item => ({\n            x: parseInt(item.age) || 0,\n            y: parseFloat(item.price) || 0,\n            name: item.title,\n            type: item.property_type\n          }))) || [];\n          setChartData({\n            propertiesByType: typeData,\n            propertiesByStatus: statusData,\n            propertiesByCity: cityData,\n            propertiesByYear: yearData,\n            activePropertyOwners: ownersData,\n            topLikedProperties: likedPropertiesData,\n            propertyAgeVsPrice: ageVsPriceData\n          });\n\n          // Format recent activity data with icons\n          const activityWithIcons = data.recentActivity.map(activity => {\n            // Map action types to icons\n            const getIcon = action => {\n              if (action.includes('registered')) return FiUsers;\n              if (action.includes('listed')) return FiHome;\n              if (action.includes('liked')) return FiHeart;\n              if (action.includes('purchase') || action.includes('sold')) return FiDollarSign;\n              return FiActivity;\n            };\n            return {\n              ...activity,\n              icon: getIcon(activity.action)\n            };\n          });\n          setRecentActivity(activityWithIcons);\n        } else {\n          throw new Error(data.message || 'Failed to fetch dashboard data');\n        }\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // Format large numbers\n  const formatNumber = num => {\n    if (!num) return '$0';\n    if (num >= 1000000) {\n      return `$${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `$${(num / 1000).toFixed(0)}K`;\n    }\n    return `$${Number(num).toLocaleString()}`;\n  };\n\n  // Custom colors for charts\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\n  const STATUS_COLORS = {\n    'Available': '#4caf50',\n    'Pending': '#ff9800',\n    'Sold': '#2196f3'\n  };\n  const PROPERTY_TYPE_COLORS = {\n    'Chalet': '#e63946',\n    'Apartment': '#457b9d',\n    'Villa': '#1d3557',\n    'Penthouse': '#ffb703'\n  };\n\n  // Truncate long text for chart labels - responsive truncation\n  const truncateText = (text, maxLength) => {\n    if (!text) return 'Unknown';\n\n    // Responsive text truncation based on screen size\n    let responsiveMaxLength = maxLength || 15;\n    if (window.innerWidth < 480) {\n      responsiveMaxLength = 8;\n    } else if (window.innerWidth < 768) {\n      responsiveMaxLength = 12;\n    } else if (window.innerWidth < 992) {\n      responsiveMaxLength = 15;\n    }\n    return text.length > responsiveMaxLength ? text.substring(0, responsiveMaxLength) + '...' : text;\n  };\n\n  // Format year values for x-axis\n  const formatYear = year => {\n    if (!year || year === 'Unknown') return year;\n    return year;\n  };\n\n  // Custom tooltip for property age vs price scatter plot\n  const CustomScatterTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scatter-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-title\",\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-type\",\n          children: [\"Type: \", data.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-age\",\n          children: [\"Age: \", data.x, \" years\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-price\",\n          children: [\"Price: \", formatNumber(data.y)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"dashboard\",\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(FiBarChart2, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), \"Dashboard Overview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-subtitle\",\n          children: \"Key performance metrics and insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.users.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.users.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.users.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.properties.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.properties.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.properties.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiDollarSign, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(stats.revenue.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Property Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.revenue.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.revenue.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.likes.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.likes.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.likes.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByCity.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.propertiesByCity,\n                  layout: \"vertical\",\n                  margin: {\n                    top: 10,\n                    right: 10,\n                    left: 5,\n                    bottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: 50,\n                    tick: {\n                      fontSize: 11\n                    },\n                    tickFormatter: label => truncateText(label, 8),\n                    interval: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name, props) => [`${value} properties`, 'Count'],\n                    labelFormatter: label => {\n                      var _chartData$properties;\n                      return ((_chartData$properties = chartData.propertiesByCity.find(item => truncateText(item.name, 8) === label)) === null || _chartData$properties === void 0 ? void 0 : _chartData$properties.name) || label;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    fill: \"#457b9d\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No city distribution data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by Year Built\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByYear.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: chartData.propertiesByYear,\n                  margin: {\n                    top: 10,\n                    right: 10,\n                    left: 5,\n                    bottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\",\n                    tickFormatter: formatYear,\n                    tick: {\n                      fontSize: 11\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    tick: {\n                      fontSize: 11\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name) => [value, 'Properties']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    stroke: \"#e63946\",\n                    strokeWidth: 2,\n                    activeDot: {\n                      r: 6\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No year built data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Most Active Property Owners\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.activePropertyOwners.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.activePropertyOwners,\n                  layout: \"vertical\",\n                  margin: {\n                    top: 10,\n                    right: 10,\n                    left: 5,\n                    bottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: 50,\n                    tick: {\n                      fontSize: 11\n                    },\n                    tickFormatter: label => truncateText(label, 8),\n                    interval: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name, props) => [`${value} properties`, 'Count'],\n                    labelFormatter: label => {\n                      var _chartData$activeProp;\n                      return ((_chartData$activeProp = chartData.activePropertyOwners.find(item => truncateText(item.name, 8) === label)) === null || _chartData$activeProp === void 0 ? void 0 : _chartData$activeProp.name) || label;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    fill: \"#1d3557\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No property owner data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Top Liked Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.topLikedProperties.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.topLikedProperties,\n                  layout: \"vertical\",\n                  margin: {\n                    top: 10,\n                    right: 10,\n                    left: 5,\n                    bottom: 10\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: 50,\n                    tick: {\n                      fontSize: 11\n                    },\n                    tickFormatter: label => truncateText(label, 8),\n                    interval: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name, props) => [`${value} likes`, 'Count'],\n                    labelFormatter: label => {\n                      var _chartData$topLikedPr;\n                      return ((_chartData$topLikedPr = chartData.topLikedProperties.find(item => truncateText(item.name, 8) === label)) === null || _chartData$topLikedPr === void 0 ? void 0 : _chartData$topLikedPr.name) || label;\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Likes\",\n                    fill: \"#e63946\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No liked properties data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DashboardOverview, \"uMh0Fx5PUbOspVDkeYmHujUa7Sg=\");\n_c = DashboardOverview;\nexport default DashboardOverview;\nvar _c;\n$RefreshReg$(_c, \"DashboardOverview\");","map":{"version":3,"names":["React","useState","useEffect","FiUsers","FiHome","FiDollarSign","FiActivity","FiBarChart2","FiPlus","FiHeart","FiMapPin","FiCalendar","FiPackage","FiRefreshCw","FiSend","FiClock","axios","BarChart","Bar","PieChart","Pie","Cell","LineChart","Line","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ZAxis","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardOverview","_s","stats","setStats","users","total","trend","properties","revenue","likes","chartData","setChartData","propertiesByType","propertiesByStatus","propertiesByCity","propertiesByYear","activePropertyOwners","topLikedProperties","propertyAgeVsPrice","recentActivity","setRecentActivity","loading","setLoading","error","setError","fetchDashboardData","response","get","withCredentials","console","log","data","success","_data$propertiesByCit","_data$propertiesByYea","_data$activePropertyO","_data$topLikedPropert","_data$propertyAgeVsPr","typeData","propertyByType","map","item","name","value","count","statusData","propertyByStatus","cityData","yearData","ownersData","likedPropertiesData","ageVsPriceData","x","parseInt","age","y","parseFloat","price","title","type","property_type","activityWithIcons","activity","getIcon","action","includes","icon","Error","message","err","formatNumber","num","toFixed","Number","toLocaleString","COLORS","STATUS_COLORS","PROPERTY_TYPE_COLORS","truncateText","text","maxLength","responsiveMaxLength","window","innerWidth","length","substring","formatYear","year","CustomScatterTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","Math","abs","width","height","layout","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","fontSize","tickFormatter","label","interval","formatter","props","labelFormatter","_chartData$properties","find","fill","stroke","strokeWidth","activeDot","r","_chartData$activeProp","_chartData$topLikedPr","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/DashboardOverview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  FiUsers, \r\n  FiHome, \r\n  FiDollarSign,\r\n  FiActivity,\r\n  FiBarChart2,\r\n  FiPlus,\r\n  FiHeart,\r\n  FiMapPin,\r\n  FiCalendar,\r\n  FiPackage,\r\n  FiRefreshCw,\r\n  FiSend,\r\n  FiClock\r\n} from 'react-icons/fi';\r\nimport axios from 'axios';\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  PieChart, \r\n  Pie, \r\n  Cell, \r\n  LineChart, \r\n  Line,\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  Legend, \r\n  ResponsiveContainer,\r\n  ZAxis \r\n} from 'recharts';\r\nimport '../styles/DashboardOverview.css';\r\n\r\nfunction DashboardOverview() {\r\n  // State for statistics\r\n  const [stats, setStats] = useState({\r\n    users: { total: 0, trend: 0 },\r\n    properties: { total: 0, trend: 0 },\r\n    revenue: { total: 0, trend: 0 },\r\n    likes: { total: 0, trend: 0 }\r\n  });\r\n  \r\n  // State for charts data\r\n  const [chartData, setChartData] = useState({\r\n    propertiesByType: [],\r\n    propertiesByStatus: [],\r\n    propertiesByCity: [],\r\n    propertiesByYear: [],\r\n    activePropertyOwners: [],\r\n    topLikedProperties: [],\r\n    propertyAgeVsPrice: []\r\n  });\r\n  \r\n  // State for recent activity\r\n  const [recentActivity, setRecentActivity] = useState([]);\r\n  \r\n  // State for loading and error status\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // Fetch real data from the backend\r\n        const response = await axios.get('${process.env.REACT_APP_API_BASE_URL}/dashboard_stats.php', {\r\n          withCredentials: true\r\n        });\r\n        \r\n        console.log('API Response:', response.data); // Debug log\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.success) {\r\n          // Set stats from API response\r\n          setStats({\r\n            users: data.stats.users || { total: 0, trend: 0 },\r\n            properties: data.stats.properties || { total: 0, trend: 0 },\r\n            revenue: data.stats.revenue || { total: 0, trend: 0 },\r\n            likes: data.stats.likes || { total: 0, trend: 0 }\r\n          });\r\n          \r\n          // Format property type data for the pie chart\r\n          const typeData = data.propertyByType.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format property status data for the bar chart\r\n          const statusData = data.propertyByStatus.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format properties by city data\r\n          const cityData = data.propertiesByCity?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format properties by year built data\r\n          const yearData = data.propertiesByYear?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format active property owners data\r\n          const ownersData = data.activePropertyOwners?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format top liked properties data\r\n          const likedPropertiesData = data.topLikedProperties?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format property age vs price data (for scatter plot)\r\n          const ageVsPriceData = data.propertyAgeVsPrice?.map(item => ({\r\n            x: parseInt(item.age) || 0,\r\n            y: parseFloat(item.price) || 0,\r\n            name: item.title,\r\n            type: item.property_type\r\n          })) || [];\r\n          \r\n          setChartData({\r\n            propertiesByType: typeData,\r\n            propertiesByStatus: statusData,\r\n            propertiesByCity: cityData,\r\n            propertiesByYear: yearData,\r\n            activePropertyOwners: ownersData,\r\n            topLikedProperties: likedPropertiesData,\r\n            propertyAgeVsPrice: ageVsPriceData\r\n          });\r\n          \r\n          // Format recent activity data with icons\r\n          const activityWithIcons = data.recentActivity.map(activity => {\r\n            // Map action types to icons\r\n            const getIcon = (action) => {\r\n              if (action.includes('registered')) return FiUsers;\r\n              if (action.includes('listed')) return FiHome;\r\n              if (action.includes('liked')) return FiHeart;\r\n              if (action.includes('purchase') || action.includes('sold')) return FiDollarSign;\r\n              return FiActivity;\r\n            };\r\n            \r\n            return {\r\n              ...activity,\r\n              icon: getIcon(activity.action)\r\n            };\r\n          });\r\n          \r\n          setRecentActivity(activityWithIcons);\r\n        } else {\r\n          throw new Error(data.message || 'Failed to fetch dashboard data');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError('Failed to load dashboard data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchDashboardData();\r\n  }, []);\r\n  \r\n  // Format large numbers\r\n  const formatNumber = (num) => {\r\n    if (!num) return '$0';\r\n    \r\n    if (num >= 1000000) {\r\n      return `$${(num / 1000000).toFixed(1)}M`;\r\n    } else if (num >= 1000) {\r\n      return `$${(num / 1000).toFixed(0)}K`;\r\n    }\r\n    return `$${Number(num).toLocaleString()}`;\r\n  };\r\n  \r\n  // Custom colors for charts\r\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\r\n  const STATUS_COLORS = {\r\n    'Available': '#4caf50',\r\n    'Pending': '#ff9800',\r\n    'Sold': '#2196f3'\r\n  };\r\n  \r\n  const PROPERTY_TYPE_COLORS = {\r\n    'Chalet': '#e63946', \r\n    'Apartment': '#457b9d', \r\n    'Villa': '#1d3557',\r\n    'Penthouse': '#ffb703'\r\n  };\r\n  \r\n  // Truncate long text for chart labels - responsive truncation\r\n  const truncateText = (text, maxLength) => {\r\n    if (!text) return 'Unknown';\r\n    \r\n    // Responsive text truncation based on screen size\r\n    let responsiveMaxLength = maxLength || 15;\r\n    \r\n    if (window.innerWidth < 480) {\r\n      responsiveMaxLength = 8;\r\n    } else if (window.innerWidth < 768) {\r\n      responsiveMaxLength = 12;\r\n    } else if (window.innerWidth < 992) {\r\n      responsiveMaxLength = 15;\r\n    }\r\n    \r\n    return text.length > responsiveMaxLength ? text.substring(0, responsiveMaxLength) + '...' : text;\r\n  };\r\n  \r\n  // Format year values for x-axis\r\n  const formatYear = (year) => {\r\n    if (!year || year === 'Unknown') return year;\r\n    return year;\r\n  };\r\n  \r\n  // Custom tooltip for property age vs price scatter plot\r\n  const CustomScatterTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"scatter-tooltip\">\r\n          <p className=\"tooltip-title\">{data.name}</p>\r\n          <p className=\"tooltip-type\">Type: {data.type}</p>\r\n          <p className=\"tooltip-age\">Age: {data.x} years</p>\r\n          <p className=\"tooltip-price\">Price: {formatNumber(data.y)}</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <section id=\"dashboard\" className=\"dashboard-section\">\r\n        <div className=\"section-header\">\r\n          <h2 className=\"section-title\">\r\n            <FiBarChart2 className=\"section-icon\" />\r\n            Dashboard Overview\r\n          </h2>\r\n          <p className=\"section-subtitle\">Key performance metrics and insights</p>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <div className=\"loading-spinner\">Loading dashboard data...</div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">{error}</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"stats-grid\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiUsers /></div>\r\n                <div className=\"stat-value\">{stats.users.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Users</div>\r\n                <div className={`stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.users.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.users.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHome /></div>\r\n                <div className=\"stat-value\">{stats.properties.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Properties</div>\r\n                <div className={`stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.properties.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.properties.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiDollarSign /></div>\r\n                <div className=\"stat-value\">{formatNumber(stats.revenue.total)}</div>\r\n                <div className=\"stat-label\">Total Property Value</div>\r\n                <div className={`stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.revenue.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.revenue.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHeart /></div>\r\n                <div className=\"stat-value\">{stats.likes.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Likes</div>\r\n                <div className={`stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.likes.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.likes.trend)}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Charts Grid */}\r\n            <div className=\"charts-grid\">\r\n              {/* 1. Properties by City Distribution */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by City</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByCity.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.propertiesByCity}\r\n                        layout=\"vertical\"\r\n                        margin={{ top: 10, right: 10, left: 5, bottom: 10 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\" \r\n                          width={50}\r\n                          tick={{ fontSize: 11 }}\r\n                          tickFormatter={(label) => truncateText(label, 8)}\r\n                          interval={0}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value, name, props) => [\r\n                            `${value} properties`, \r\n                            'Count'\r\n                          ]}\r\n                          labelFormatter={(label) => chartData.propertiesByCity.find(item => truncateText(item.name, 8) === label)?.name || label}\r\n                        />\r\n                        <Bar dataKey=\"value\" name=\"Properties\" fill=\"#457b9d\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No city distribution data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 2. Properties by Year Built */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by Year Built</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByYear.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart\r\n                        data={chartData.propertiesByYear}\r\n                        margin={{ top: 10, right: 10, left: 5, bottom: 10 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis \r\n                          dataKey=\"name\" \r\n                          tickFormatter={formatYear}\r\n                          tick={{ fontSize: 11 }}\r\n                        />\r\n                        <YAxis \r\n                          tick={{ fontSize: 11 }}\r\n                        />\r\n                        <Tooltip formatter={(value, name) => [value, 'Properties']} />\r\n                        <Line \r\n                          type=\"monotone\" \r\n                          dataKey=\"value\" \r\n                          name=\"Properties\" \r\n                          stroke=\"#e63946\" \r\n                          strokeWidth={2}\r\n                          activeDot={{ r: 6 }} \r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No year built data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 3. Most Active Property Owners */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Most Active Property Owners</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.activePropertyOwners.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.activePropertyOwners}\r\n                        layout=\"vertical\"\r\n                        margin={{ top: 10, right: 10, left: 5, bottom: 10 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\"\r\n                          width={50}\r\n                          tick={{ fontSize: 11 }}\r\n                          tickFormatter={(label) => truncateText(label, 8)}\r\n                          interval={0}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value, name, props) => [\r\n                            `${value} properties`, \r\n                            'Count'\r\n                          ]}\r\n                          labelFormatter={(label) => chartData.activePropertyOwners.find(item => truncateText(item.name, 8) === label)?.name || label}\r\n                        />\r\n                        <Bar dataKey=\"value\" name=\"Properties\" fill=\"#1d3557\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No property owner data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 4. Top Liked Properties */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Top Liked Properties</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.topLikedProperties.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.topLikedProperties}\r\n                        layout=\"vertical\"\r\n                        margin={{ top: 10, right: 10, left: 5, bottom: 10 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\"\r\n                          width={50}\r\n                          tick={{ fontSize: 11 }}\r\n                          tickFormatter={(label) => truncateText(label, 8)}\r\n                          interval={0}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value, name, props) => [\r\n                            `${value} likes`, \r\n                            'Count'\r\n                          ]}\r\n                          labelFormatter={(label) => chartData.topLikedProperties.find(item => truncateText(item.name, 8) === label)?.name || label}\r\n                        />\r\n                        <Bar dataKey=\"value\" name=\"Likes\" fill=\"#e63946\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No liked properties data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}