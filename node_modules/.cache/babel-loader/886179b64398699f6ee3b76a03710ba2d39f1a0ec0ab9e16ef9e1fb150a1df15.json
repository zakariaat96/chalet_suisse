{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\DashboardOverview.js\",\n  _s = $RefreshSig$();\n// Enhanced DashboardOverview.jsx with additional features\nimport React, { useState, useEffect } from 'react';\nimport { FiUsers, FiHome, FiDollarSign, FiActivity, FiBarChart2, FiHeart, FiMapPin, FiCalendar, FiTrendingUp, FiFilter, FiArrowUp, FiArrowDown, FiClock, FiCheckCircle, FiAlertCircle } from 'react-icons/fi';\nimport axios from 'axios';\nimport { BarChart, Bar, PieChart, Pie, Cell, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport '../styles/DashboardOverview.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashboardOverview() {\n  _s();\n  // State for statistics\n  const [stats, setStats] = useState({\n    users: {\n      total: 0,\n      trend: 0\n    },\n    properties: {\n      total: 0,\n      trend: 0\n    },\n    revenue: {\n      total: 0,\n      trend: 0\n    },\n    likes: {\n      total: 0,\n      trend: 0\n    }\n  });\n\n  // State for charts data\n  const [chartData, setChartData] = useState({\n    propertiesByType: [],\n    propertiesByStatus: [],\n    propertiesByCity: [],\n    propertiesByYear: [],\n    activePropertyOwners: [],\n    topLikedProperties: []\n  });\n\n  // State for time filter\n  const [timeFilter, setTimeFilter] = useState('all'); // 'all', 'month', 'quarter', 'year'\n\n  // State for loading and error status\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Add time filter to the request if needed\n        const params = timeFilter !== 'all' ? `?period=${timeFilter}` : '';\n        const response = await axios.get(`http://localhost/real_estate_project/api/dashboard_stats.php${params}`, {\n          withCredentials: true\n        });\n        const data = response.data;\n        if (data.success) {\n          var _data$propertiesByCit, _data$propertiesByYea, _data$activePropertyO, _data$topLikedPropert;\n          // Set stats from API response\n          setStats({\n            users: data.stats.users || {\n              total: 0,\n              trend: 0\n            },\n            properties: data.stats.properties || {\n              total: 0,\n              trend: 0\n            },\n            revenue: data.stats.revenue || {\n              total: 0,\n              trend: 0\n            },\n            likes: data.stats.likes || {\n              total: 0,\n              trend: 0\n            }\n          });\n\n          // Format property type data for the pie chart\n          const typeData = data.propertyByType.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format property status data for the bar chart\n          const statusData = data.propertyByStatus.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format properties by city data\n          const cityData = ((_data$propertiesByCit = data.propertiesByCity) === null || _data$propertiesByCit === void 0 ? void 0 : _data$propertiesByCit.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format properties by year built data\n          const yearData = ((_data$propertiesByYea = data.propertiesByYear) === null || _data$propertiesByYea === void 0 ? void 0 : _data$propertiesByYea.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format active property owners data\n          const ownersData = ((_data$activePropertyO = data.activePropertyOwners) === null || _data$activePropertyO === void 0 ? void 0 : _data$activePropertyO.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format top liked properties data\n          const likedPropertiesData = ((_data$topLikedPropert = data.topLikedProperties) === null || _data$topLikedPropert === void 0 ? void 0 : _data$topLikedPropert.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n          setChartData({\n            propertiesByType: typeData,\n            propertiesByStatus: statusData,\n            propertiesByCity: cityData,\n            propertiesByYear: yearData,\n            activePropertyOwners: ownersData,\n            topLikedProperties: likedPropertiesData\n          });\n        } else {\n          throw new Error(data.message || 'Failed to fetch dashboard data');\n        }\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, [timeFilter]); // Refetch when time filter changes\n\n  // Format large numbers\n  const formatNumber = num => {\n    if (!num) return '$0';\n    if (num >= 1000000) {\n      return `$${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `$${(num / 1000).toFixed(0)}K`;\n    }\n    return `$${Number(num).toLocaleString()}`;\n  };\n\n  // Custom colors for charts\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\n  const STATUS_COLORS = {\n    'Available': '#4caf50',\n    'Pending': '#ff9800',\n    'Sold': '#2196f3'\n  };\n  const PROPERTY_TYPE_COLORS = {\n    'Chalet': '#e63946',\n    'Apartment': '#457b9d',\n    'Villa': '#1d3557',\n    'Penthouse': '#ffb703'\n  };\n\n  // Truncate long text for chart labels\n  const truncateText = (text, maxLength = 15) => {\n    if (!text) return 'Unknown';\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n  };\n\n  // Format year values for x-axis\n  const formatYear = year => {\n    if (!year || year === 'Unknown') return year;\n    return year;\n  };\n\n  // Handler for time filter change\n  const handleTimeFilterChange = filter => {\n    setTimeFilter(filter);\n  };\n\n  // New custom pie chart component\n  const CustomPieChart = ({\n    data,\n    colors,\n    title\n  }) => {\n    if (!data || data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"pie-chart-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pie-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 200,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: data,\n              cx: \"50%\",\n              cy: \"50%\",\n              labelLine: false,\n              outerRadius: 80,\n              fill: \"#8884d8\",\n              dataKey: \"value\",\n              nameKey: \"name\",\n              label: ({\n                name,\n                percent\n              }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n              children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: colors[index % colors.length]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              formatter: value => [`${value}`, 'Count']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {\n              verticalAlign: \"bottom\",\n              layout: \"horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Function to render status distribution with custom styling\n  const renderStatusDistribution = () => {\n    const statusData = chartData.propertiesByStatus;\n    if (!statusData || statusData.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: \"No status data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Calculate total for percentages\n    const total = statusData.reduce((sum, item) => sum + item.value, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-distribution\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-bars\",\n        children: statusData.map((status, index) => {\n          const percentage = total > 0 ? (status.value / total * 100).toFixed(1) : 0;\n          const color = STATUS_COLORS[status.name] || COLORS[index % COLORS.length];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-bar-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-bar-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-name\",\n                children: status.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-count\",\n                children: [status.value, \" (\", percentage, \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-bar-fill\",\n                style: {\n                  width: `${percentage}%`,\n                  backgroundColor: color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, `status-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"dashboard\",\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: [/*#__PURE__*/_jsxDEV(FiBarChart2, {\n              className: \"section-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), \"Dashboard Overview\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"filter-label\",\n              children: [/*#__PURE__*/_jsxDEV(FiFilter, {\n                className: \"filter-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 46\n              }, this), \" Filter:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `filter-btn ${timeFilter === 'all' ? 'active' : ''}`,\n                onClick: () => handleTimeFilterChange('all'),\n                children: \"All Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `filter-btn ${timeFilter === 'month' ? 'active' : ''}`,\n                onClick: () => handleTimeFilterChange('month'),\n                children: \"Last Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `filter-btn ${timeFilter === 'quarter' ? 'active' : ''}`,\n                onClick: () => handleTimeFilterChange('quarter'),\n                children: \"Last Quarter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `filter-btn ${timeFilter === 'year' ? 'active' : ''}`,\n                onClick: () => handleTimeFilterChange('year'),\n                children: \"Last Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-subtitle\",\n          children: \"Key performance metrics and insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.users.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.users.trend >= 0 ? /*#__PURE__*/_jsxDEV(FiArrowUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(FiArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 61\n              }, this), \" \", Math.abs(stats.users.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.properties.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.properties.trend >= 0 ? /*#__PURE__*/_jsxDEV(FiArrowUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 50\n              }, this) : /*#__PURE__*/_jsxDEV(FiArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 66\n              }, this), \" \", Math.abs(stats.properties.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiDollarSign, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(stats.revenue.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Property Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.revenue.trend >= 0 ? /*#__PURE__*/_jsxDEV(FiArrowUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 47\n              }, this) : /*#__PURE__*/_jsxDEV(FiArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 63\n              }, this), \" \", Math.abs(stats.revenue.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.likes.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.likes.trend >= 0 ? /*#__PURE__*/_jsxDEV(FiArrowUp, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(FiArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 61\n              }, this), \" \", Math.abs(stats.likes.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card full-width\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Property Status Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container status-container\",\n              children: renderStatusDistribution()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: /*#__PURE__*/_jsxDEV(CustomPieChart, {\n                data: chartData.propertiesByType,\n                colors: Object.values(PROPERTY_TYPE_COLORS),\n                title: \"Distribution by Property Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByCity.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 250,\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.propertiesByCity.slice(0, 5) // Show top 5 cities\n                  ,\n                  layout: \"vertical\",\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 80,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: 100,\n                    tick: {\n                      fontSize: 12\n                    },\n                    tickFormatter: label => truncateText(label)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value} properties`, 'Count']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    fill: \"#457b9d\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No city distribution data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by Year Built\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByYear.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 250,\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: chartData.propertiesByYear,\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\",\n                    tickFormatter: formatYear,\n                    label: {\n                      value: 'Year Built',\n                      position: 'insideBottomRight',\n                      offset: -5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    label: {\n                      value: 'Number of Properties',\n                      angle: -90,\n                      position: 'insideLeft'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name) => [value, 'Properties']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    stroke: \"#e63946\",\n                    activeDot: {\n                      r: 8\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No year built data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Top Liked Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.topLikedProperties.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 250,\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.topLikedProperties,\n                  layout: \"vertical\",\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 80,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: 120,\n                    tick: {\n                      fontSize: 12\n                    },\n                    tickFormatter: label => truncateText(label)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value} likes`, 'Count']\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Likes\",\n                    fill: \"#e63946\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No liked properties data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DashboardOverview, \"t+bfCABh+Hcw/uFyuiUGk/59who=\");\n_c = DashboardOverview;\nexport default DashboardOverview;\nvar _c;\n$RefreshReg$(_c, \"DashboardOverview\");","map":{"version":3,"names":["React","useState","useEffect","FiUsers","FiHome","FiDollarSign","FiActivity","FiBarChart2","FiHeart","FiMapPin","FiCalendar","FiTrendingUp","FiFilter","FiArrowUp","FiArrowDown","FiClock","FiCheckCircle","FiAlertCircle","axios","BarChart","Bar","PieChart","Pie","Cell","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardOverview","_s","stats","setStats","users","total","trend","properties","revenue","likes","chartData","setChartData","propertiesByType","propertiesByStatus","propertiesByCity","propertiesByYear","activePropertyOwners","topLikedProperties","timeFilter","setTimeFilter","loading","setLoading","error","setError","fetchDashboardData","params","response","get","withCredentials","data","success","_data$propertiesByCit","_data$propertiesByYea","_data$activePropertyO","_data$topLikedPropert","typeData","propertyByType","map","item","name","value","count","statusData","propertyByStatus","cityData","yearData","ownersData","likedPropertiesData","Error","message","err","console","formatNumber","num","toFixed","Number","toLocaleString","COLORS","STATUS_COLORS","PROPERTY_TYPE_COLORS","truncateText","text","maxLength","length","substring","formatYear","year","handleTimeFilterChange","filter","CustomPieChart","colors","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","cx","cy","labelLine","outerRadius","fill","dataKey","nameKey","label","percent","entry","index","formatter","verticalAlign","layout","renderStatusDistribution","reduce","sum","status","percentage","color","style","backgroundColor","id","onClick","Math","abs","Object","values","slice","margin","top","right","left","bottom","strokeDasharray","type","tick","fontSize","tickFormatter","position","offset","angle","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/DashboardOverview.js"],"sourcesContent":["// Enhanced DashboardOverview.jsx with additional features\r\nimport React, { useState, useEffect } from 'react';\r\nimport { \r\n  FiUsers, \r\n  FiHome, \r\n  FiDollarSign,\r\n  FiActivity,\r\n  FiBarChart2,\r\n  FiHeart,\r\n  FiMapPin,\r\n  FiCalendar,\r\n  FiTrendingUp,\r\n  FiFilter,\r\n  FiArrowUp,\r\n  FiArrowDown,\r\n  FiClock,\r\n  FiCheckCircle,\r\n  FiAlertCircle\r\n} from 'react-icons/fi';\r\nimport axios from 'axios';\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  PieChart, \r\n  Pie, \r\n  Cell, \r\n  LineChart, \r\n  Line,\r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  Legend, \r\n  ResponsiveContainer\r\n} from 'recharts';\r\nimport '../styles/DashboardOverview.css';\r\n\r\nfunction DashboardOverview() {\r\n  // State for statistics\r\n  const [stats, setStats] = useState({\r\n    users: { total: 0, trend: 0 },\r\n    properties: { total: 0, trend: 0 },\r\n    revenue: { total: 0, trend: 0 },\r\n    likes: { total: 0, trend: 0 }\r\n  });\r\n  \r\n  // State for charts data\r\n  const [chartData, setChartData] = useState({\r\n    propertiesByType: [],\r\n    propertiesByStatus: [],\r\n    propertiesByCity: [],\r\n    propertiesByYear: [],\r\n    activePropertyOwners: [],\r\n    topLikedProperties: []\r\n  });\r\n  \r\n  // State for time filter\r\n  const [timeFilter, setTimeFilter] = useState('all'); // 'all', 'month', 'quarter', 'year'\r\n  \r\n  // State for loading and error status\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // Add time filter to the request if needed\r\n        const params = timeFilter !== 'all' ? `?period=${timeFilter}` : '';\r\n        \r\n        const response = await axios.get(`http://localhost/real_estate_project/api/dashboard_stats.php${params}`, {\r\n          withCredentials: true\r\n        });\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.success) {\r\n          // Set stats from API response\r\n          setStats({\r\n            users: data.stats.users || { total: 0, trend: 0 },\r\n            properties: data.stats.properties || { total: 0, trend: 0 },\r\n            revenue: data.stats.revenue || { total: 0, trend: 0 },\r\n            likes: data.stats.likes || { total: 0, trend: 0 }\r\n          });\r\n          \r\n          // Format property type data for the pie chart\r\n          const typeData = data.propertyByType.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format property status data for the bar chart\r\n          const statusData = data.propertyByStatus.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format properties by city data\r\n          const cityData = data.propertiesByCity?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format properties by year built data\r\n          const yearData = data.propertiesByYear?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format active property owners data\r\n          const ownersData = data.activePropertyOwners?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format top liked properties data\r\n          const likedPropertiesData = data.topLikedProperties?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          setChartData({\r\n            propertiesByType: typeData,\r\n            propertiesByStatus: statusData,\r\n            propertiesByCity: cityData,\r\n            propertiesByYear: yearData,\r\n            activePropertyOwners: ownersData,\r\n            topLikedProperties: likedPropertiesData\r\n          });\r\n          \r\n        } else {\r\n          throw new Error(data.message || 'Failed to fetch dashboard data');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError('Failed to load dashboard data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchDashboardData();\r\n  }, [timeFilter]); // Refetch when time filter changes\r\n  \r\n  // Format large numbers\r\n  const formatNumber = (num) => {\r\n    if (!num) return '$0';\r\n    \r\n    if (num >= 1000000) {\r\n      return `$${(num / 1000000).toFixed(1)}M`;\r\n    } else if (num >= 1000) {\r\n      return `$${(num / 1000).toFixed(0)}K`;\r\n    }\r\n    return `$${Number(num).toLocaleString()}`;\r\n  };\r\n  \r\n  // Custom colors for charts\r\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\r\n  const STATUS_COLORS = {\r\n    'Available': '#4caf50',\r\n    'Pending': '#ff9800',\r\n    'Sold': '#2196f3'\r\n  };\r\n  \r\n  const PROPERTY_TYPE_COLORS = {\r\n    'Chalet': '#e63946', \r\n    'Apartment': '#457b9d', \r\n    'Villa': '#1d3557',\r\n    'Penthouse': '#ffb703'\r\n  };\r\n  \r\n  // Truncate long text for chart labels\r\n  const truncateText = (text, maxLength = 15) => {\r\n    if (!text) return 'Unknown';\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n  \r\n  // Format year values for x-axis\r\n  const formatYear = (year) => {\r\n    if (!year || year === 'Unknown') return year;\r\n    return year;\r\n  };\r\n  \r\n  // Handler for time filter change\r\n  const handleTimeFilterChange = (filter) => {\r\n    setTimeFilter(filter);\r\n  };\r\n  \r\n  // New custom pie chart component\r\n  const CustomPieChart = ({ data, colors, title }) => {\r\n    if (!data || data.length === 0) {\r\n      return <div className=\"no-data-message\">No data available</div>;\r\n    }\r\n    \r\n    return (\r\n      <div className=\"pie-chart-wrapper\">\r\n        <h4 className=\"pie-chart-title\">{title}</h4>\r\n        <div className=\"pie-chart-container\">\r\n          <ResponsiveContainer width=\"100%\" height={200}>\r\n            <PieChart>\r\n              <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"50%\"\r\n                labelLine={false}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n                nameKey=\"name\"\r\n                label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n              >\r\n                {data.map((entry, index) => (\r\n                  <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                ))}\r\n              </Pie>\r\n              <Tooltip formatter={(value) => [`${value}`, 'Count']} />\r\n              <Legend verticalAlign=\"bottom\" layout=\"horizontal\" />\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Function to render status distribution with custom styling\r\n  const renderStatusDistribution = () => {\r\n    const statusData = chartData.propertiesByStatus;\r\n    \r\n    if (!statusData || statusData.length === 0) {\r\n      return <div className=\"no-data-message\">No status data available</div>;\r\n    }\r\n    \r\n    // Calculate total for percentages\r\n    const total = statusData.reduce((sum, item) => sum + item.value, 0);\r\n    \r\n    return (\r\n      <div className=\"status-distribution\">\r\n        <div className=\"status-bars\">\r\n          {statusData.map((status, index) => {\r\n            const percentage = total > 0 ? (status.value / total * 100).toFixed(1) : 0;\r\n            const color = STATUS_COLORS[status.name] || COLORS[index % COLORS.length];\r\n            \r\n            return (\r\n              <div key={`status-${index}`} className=\"status-bar-item\">\r\n                <div className=\"status-bar-header\">\r\n                  <span className=\"status-name\">{status.name}</span>\r\n                  <span className=\"status-count\">{status.value} ({percentage}%)</span>\r\n                </div>\r\n                <div className=\"status-bar-container\">\r\n                  <div \r\n                    className=\"status-bar-fill\" \r\n                    style={{ \r\n                      width: `${percentage}%`,\r\n                      backgroundColor: color\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <section id=\"dashboard\" className=\"dashboard-section\">\r\n        <div className=\"section-header\">\r\n          <div className=\"header-row\">\r\n            <h2 className=\"section-title\">\r\n              <FiBarChart2 className=\"section-icon\" />\r\n              Dashboard Overview\r\n            </h2>\r\n            \r\n            {/* Add time filter options */}\r\n            <div className=\"time-filter\">\r\n              <span className=\"filter-label\"><FiFilter className=\"filter-icon\" /> Filter:</span>\r\n              <div className=\"filter-buttons\">\r\n                <button \r\n                  className={`filter-btn ${timeFilter === 'all' ? 'active' : ''}`}\r\n                  onClick={() => handleTimeFilterChange('all')}\r\n                >\r\n                  All Time\r\n                </button>\r\n                <button \r\n                  className={`filter-btn ${timeFilter === 'month' ? 'active' : ''}`}\r\n                  onClick={() => handleTimeFilterChange('month')}\r\n                >\r\n                  Last Month\r\n                </button>\r\n                <button \r\n                  className={`filter-btn ${timeFilter === 'quarter' ? 'active' : ''}`}\r\n                  onClick={() => handleTimeFilterChange('quarter')}\r\n                >\r\n                  Last Quarter\r\n                </button>\r\n                <button \r\n                  className={`filter-btn ${timeFilter === 'year' ? 'active' : ''}`}\r\n                  onClick={() => handleTimeFilterChange('year')}\r\n                >\r\n                  Last Year\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <p className=\"section-subtitle\">Key performance metrics and insights</p>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <div className=\"loading-spinner\">Loading dashboard data...</div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">{error}</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"stats-grid\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiUsers /></div>\r\n                <div className=\"stat-value\">{stats.users.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Users</div>\r\n                <div className={`stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.users.trend >= 0 ? <FiArrowUp /> : <FiArrowDown />} {Math.abs(stats.users.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHome /></div>\r\n                <div className=\"stat-value\">{stats.properties.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Properties</div>\r\n                <div className={`stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.properties.trend >= 0 ? <FiArrowUp /> : <FiArrowDown />} {Math.abs(stats.properties.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiDollarSign /></div>\r\n                <div className=\"stat-value\">{formatNumber(stats.revenue.total)}</div>\r\n                <div className=\"stat-label\">Total Property Value</div>\r\n                <div className={`stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.revenue.trend >= 0 ? <FiArrowUp /> : <FiArrowDown />} {Math.abs(stats.revenue.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHeart /></div>\r\n                <div className=\"stat-value\">{stats.likes.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Likes</div>\r\n                <div className={`stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.likes.trend >= 0 ? <FiArrowUp /> : <FiArrowDown />} {Math.abs(stats.likes.trend)}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* New section for Property Status Distribution */}\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"chart-card full-width\">\r\n                <h3 className=\"chart-title\">Property Status Distribution</h3>\r\n                <div className=\"chart-container status-container\">\r\n                  {renderStatusDistribution()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Two-column layout for Property Type and City charts */}\r\n            <div className=\"dashboard-row\">\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by Type</h3>\r\n                <div className=\"chart-container\">\r\n                  <CustomPieChart \r\n                    data={chartData.propertiesByType} \r\n                    colors={Object.values(PROPERTY_TYPE_COLORS)} \r\n                    title=\"Distribution by Property Type\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by City</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByCity.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                      <BarChart \r\n                        data={chartData.propertiesByCity.slice(0, 5)} // Show top 5 cities\r\n                        layout=\"vertical\"\r\n                        margin={{ top: 5, right: 30, left: 80, bottom: 5 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\" \r\n                          width={100}\r\n                          tick={{ fontSize: 12 }}\r\n                          tickFormatter={label => truncateText(label)}\r\n                        />\r\n                        <Tooltip formatter={(value) => [`${value} properties`, 'Count']} />\r\n                        <Bar dataKey=\"value\" name=\"Properties\" fill=\"#457b9d\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No city distribution data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Charts Grid */}\r\n            <div className=\"charts-grid\">\r\n              {/* 1. Properties by Year Built */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by Year Built</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByYear.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                      <LineChart\r\n                        data={chartData.propertiesByYear}\r\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis \r\n                          dataKey=\"name\" \r\n                          tickFormatter={formatYear}\r\n                          label={{ value: 'Year Built', position: 'insideBottomRight', offset: -5 }}\r\n                        />\r\n                        <YAxis \r\n                          label={{ value: 'Number of Properties', angle: -90, position: 'insideLeft' }}\r\n                        />\r\n                        <Tooltip formatter={(value, name) => [value, 'Properties']} />\r\n                        <Legend />\r\n                        <Line \r\n                          type=\"monotone\" \r\n                          dataKey=\"value\" \r\n                          name=\"Properties\" \r\n                          stroke=\"#e63946\" \r\n                          activeDot={{ r: 8 }} \r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No year built data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 2. Top Liked Properties */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Top Liked Properties</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.topLikedProperties.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height={250}>\r\n                      <BarChart \r\n                        data={chartData.topLikedProperties}\r\n                        layout=\"vertical\"\r\n                        margin={{ top: 5, right: 30, left: 80, bottom: 5 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\"\r\n                          width={120}\r\n                          tick={{ fontSize: 12 }}\r\n                          tickFormatter={label => truncateText(label)}\r\n                        />\r\n                        <Tooltip formatter={(value) => [`${value} likes`, 'Count']} />\r\n                        <Legend />\r\n                        <Bar dataKey=\"value\" name=\"Likes\" fill=\"#e63946\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No liked properties data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}