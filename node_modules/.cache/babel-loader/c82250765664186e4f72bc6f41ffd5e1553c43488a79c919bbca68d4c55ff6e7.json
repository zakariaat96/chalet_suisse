{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\pages\\\\ComingSoon.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiClock, FiMail, FiArrowRight, FiCheck } from 'react-icons/fi';\nimport '../styles/ComingSoon.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComingSoon = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [countdown, setCountdown] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n\n  // Set launch date - example: 30 days from now\n  const calculateTimeLeft = () => {\n    const launchDate = new Date();\n    launchDate.setDate(launchDate.getDate() + 30); // 30 days from now\n\n    const difference = launchDate - new Date();\n    if (difference > 0) {\n      setCountdown({\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n        minutes: Math.floor(difference / 1000 / 60 % 60),\n        seconds: Math.floor(difference / 1000 % 60)\n      });\n    }\n  };\n  useEffect(() => {\n    calculateTimeLeft();\n    const timer = setInterval(calculateTimeLeft, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Here you would typically send the email to your backend\n    console.log('Notify email:', email);\n\n    // For demonstration, we'll just show a success message\n    setIsSubmitted(true);\n    setEmail('');\n\n    // Reset submission status after 3 seconds\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coming-soon-container\",\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ComingSoon, \"k3vN/DqHCr/5K/amHu/22ZxKqL8=\");\n_c = ComingSoon;\nexport default ComingSoon;\nvar _c;\n$RefreshReg$(_c, \"ComingSoon\");","map":{"version":3,"names":["React","useState","useEffect","FiClock","FiMail","FiArrowRight","FiCheck","jsxDEV","_jsxDEV","ComingSoon","_s","email","setEmail","isSubmitted","setIsSubmitted","countdown","setCountdown","days","hours","minutes","seconds","calculateTimeLeft","launchDate","Date","setDate","getDate","difference","Math","floor","timer","setInterval","clearInterval","handleSubmit","e","preventDefault","console","log","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/pages/ComingSoon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FiClock, FiMail, FiArrowRight, FiCheck } from 'react-icons/fi';\r\nimport '../styles/ComingSoon.css';\r\n\r\nconst ComingSoon = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [countdown, setCountdown] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0\r\n  });\r\n  \r\n  // Set launch date - example: 30 days from now\r\n  const calculateTimeLeft = () => {\r\n    const launchDate = new Date();\r\n    launchDate.setDate(launchDate.getDate() + 30); // 30 days from now\r\n    \r\n    const difference = launchDate - new Date();\r\n    \r\n    if (difference > 0) {\r\n      setCountdown({\r\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n        minutes: Math.floor((difference / 1000 / 60) % 60),\r\n        seconds: Math.floor((difference / 1000) % 60)\r\n      });\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    calculateTimeLeft();\r\n    const timer = setInterval(calculateTimeLeft, 1000);\r\n    \r\n    return () => clearInterval(timer);\r\n  }, []);\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Here you would typically send the email to your backend\r\n    console.log('Notify email:', email);\r\n    \r\n    // For demonstration, we'll just show a success message\r\n    setIsSubmitted(true);\r\n    setEmail('');\r\n    \r\n    // Reset submission status after 3 seconds\r\n    setTimeout(() => {\r\n      setIsSubmitted(false);\r\n    }, 3000);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"coming-soon-container\">\r\n      hi\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,MAAM,EAAEC,YAAY,EAAEC,OAAO,QAAQ,gBAAgB;AACvE,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC;IACzCgB,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC7BD,UAAU,CAACE,OAAO,CAACF,UAAU,CAACG,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;IAE/C,MAAMC,UAAU,GAAGJ,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE1C,IAAIG,UAAU,GAAG,CAAC,EAAE;MAClBV,YAAY,CAAC;QACXC,IAAI,EAAEU,IAAI,CAACC,KAAK,CAACF,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACpDR,KAAK,EAAES,IAAI,CAACC,KAAK,CAAEF,UAAU,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;QACvDP,OAAO,EAAEQ,IAAI,CAACC,KAAK,CAAEF,UAAU,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;QAClDN,OAAO,EAAEO,IAAI,CAACC,KAAK,CAAEF,UAAU,GAAG,IAAI,GAAI,EAAE;MAC9C,CAAC,CAAC;IACJ;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACdmB,iBAAiB,CAAC,CAAC;IACnB,MAAMQ,KAAK,GAAGC,WAAW,CAACT,iBAAiB,EAAE,IAAI,CAAC;IAElD,OAAO,MAAMU,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEzB,KAAK,CAAC;;IAEnC;IACAG,cAAc,CAAC,IAAI,CAAC;IACpBF,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACAyB,UAAU,CAAC,MAAM;MACfvB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEN,OAAA;IAAK8B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EAAC;EAEvC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV,CAAC;AAACjC,EAAA,CAtDID,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}