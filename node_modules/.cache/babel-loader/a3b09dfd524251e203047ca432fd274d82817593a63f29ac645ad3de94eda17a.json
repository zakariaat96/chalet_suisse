{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\pages\\\\AllPropertiesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Property from '../components/Property';\nimport '../styles/AllPropertypage.css';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport SearchFilter from '../components/SearchFilter';\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPropertiesPage = () => {\n  _s();\n  const location = useLocation();\n  const [properties, setProperties] = useState([]);\n  const [filteredProperties, setFilteredProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [propertiesPerPage] = useState(8);\n\n  // Debounced update to prevent excessive re-renders\n  const updateFilteredProperties = useCallback(newFiltered => {\n    setFilteredProperties(newFiltered);\n    setCurrentPage(1);\n  }, []);\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const searchParam = queryParams.get('search');\n    if (searchParam) {\n      setInitialSearchTerm(searchParam);\n    }\n  }, [location.search]);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        setLoading(true);\n        let data = [];\n        let propertiesWithLikes = [];\n\n        // First: Try to get properties with likes from property_manage.php\n        try {\n          const likesApiUrl = `${process.env.REACT_APP_API_BASE_URL}/property_manage.php?view=active`;\n          const likesResponse = await fetch(likesApiUrl, {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n              'Accept': 'application/json'\n            }\n          });\n          if (likesResponse.ok) {\n            const likesData = await likesResponse.json();\n            if (Array.isArray(likesData)) {\n              propertiesWithLikes = likesData;\n              console.log('Successfully fetched chalets with likes data');\n            }\n          }\n        } catch (error) {\n          console.warn('Could not fetch likes data from property_manage.php:', error);\n        }\n\n        // Second: Get all properties from get_all_chalets.php\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/get_all_chalets.php`;\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        data = await response.json();\n        if (Array.isArray(data)) {\n          // Merge data: Use get_all_chalets.php as base, add likes_count from property_manage.php\n          const optimizedData = data.map(property => {\n            // Find matching property with likes data\n            const propertyWithLikes = propertiesWithLikes.find(p => p.id === property.id);\n            return {\n              id: property.id,\n              title: property.title,\n              price: property.price,\n              main_image: property.main_image,\n              city: property.city,\n              // Handle both possible field names for bedrooms/bathrooms\n              bedrooms: property.beds || property.bedrooms || property.bedroom_count || property.bed_count,\n              bathrooms: property.baths || property.bathrooms || property.bathroom_count || property.bath_count,\n              status: property.status,\n              description: property.description,\n              // Use created_at from either API\n              created_at: property.created_at || (propertyWithLikes === null || propertyWithLikes === void 0 ? void 0 : propertyWithLikes.created_at),\n              // Use likes_count from property_manage.php if available\n              likes_count: parseInt((propertyWithLikes === null || propertyWithLikes === void 0 ? void 0 : propertyWithLikes.likes_count) || property.likes_count || 0)\n            };\n          });\n          console.log('Sample chalet with merged data:', optimizedData[0]);\n          setProperties(optimizedData);\n          if (initialSearchTerm) {\n            const searchLower = initialSearchTerm.toLowerCase();\n            const filtered = optimizedData.filter(property => {\n              var _property$title, _property$city, _property$description;\n              return ((_property$title = property.title) === null || _property$title === void 0 ? void 0 : _property$title.toLowerCase().includes(searchLower)) || ((_property$city = property.city) === null || _property$city === void 0 ? void 0 : _property$city.toLowerCase().includes(searchLower)) || ((_property$description = property.description) === null || _property$description === void 0 ? void 0 : _property$description.toLowerCase().includes(searchLower));\n            });\n            setFilteredProperties(filtered);\n          } else {\n            setFilteredProperties(optimizedData);\n          }\n        } else {\n          throw new Error('Invalid data format received from API');\n        }\n      } catch (err) {\n        console.error('Error fetching chalets:', err);\n        setError(`Error loading chalets: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, [initialSearchTerm]);\n\n  // Memoized pagination calculations to prevent unnecessary recalculations\n  const paginationData = useMemo(() => {\n    const totalPages = Math.max(1, Math.ceil(filteredProperties.length / propertiesPerPage));\n    const indexOfLastProperty = currentPage * propertiesPerPage;\n    const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n    const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\n    return {\n      totalPages,\n      indexOfLastProperty,\n      indexOfFirstProperty,\n      currentProperties\n    };\n  }, [filteredProperties, currentPage, propertiesPerPage]);\n\n  // Optimized page navigation handlers\n  const goToPage = useCallback(pageNumber => {\n    const newPage = Math.max(1, Math.min(pageNumber, paginationData.totalPages));\n    if (newPage !== currentPage) {\n      setCurrentPage(newPage);\n      // Smooth scroll to top without blocking\n      requestAnimationFrame(() => {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      });\n    }\n  }, [currentPage, paginationData.totalPages]);\n  const nextPage = useCallback(() => goToPage(currentPage + 1), [currentPage, goToPage]);\n  const prevPage = useCallback(() => goToPage(currentPage - 1), [currentPage, goToPage]);\n  const firstPage = useCallback(() => goToPage(1), [goToPage]);\n  const lastPage = useCallback(() => goToPage(paginationData.totalPages), [goToPage, paginationData.totalPages]);\n\n  // Memoized page numbers generation\n  const pageNumbers = useMemo(() => {\n    const maxVisiblePages = 5;\n    const {\n      totalPages\n    } = paginationData;\n    let startPage, endPage;\n    if (totalPages <= maxVisiblePages) {\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      const maxPagesBeforeCurrent = Math.floor(maxVisiblePages / 2);\n      const maxPagesAfterCurrent = Math.ceil(maxVisiblePages / 2) - 1;\n      if (currentPage <= maxPagesBeforeCurrent) {\n        startPage = 1;\n        endPage = maxVisiblePages;\n      } else if (currentPage + maxPagesAfterCurrent >= totalPages) {\n        startPage = totalPages - maxVisiblePages + 1;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - maxPagesBeforeCurrent;\n        endPage = currentPage + maxPagesAfterCurrent;\n      }\n    }\n    return Array.from({\n      length: endPage - startPage + 1\n    }, (_, i) => startPage + i);\n  }, [currentPage, paginationData.totalPages]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading Chalets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-properties-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-listings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listings-header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n          properties: properties,\n          setFilteredProperties: updateFilteredProperties,\n          initialSearchTerm: initialSearchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"properties-count\",\n          children: [filteredProperties.length, \" \", filteredProperties.length === 1 ? 'chalet' : 'chalets', \" found\", paginationData.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pagination-info-inline\",\n            children: [\" (Page \", currentPage, \" of \", paginationData.totalPages, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), filteredProperties.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No chalets match your search criteria. Try adjusting your filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"properties-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"properties-slider\",\n            children: paginationData.currentProperties.map(property => /*#__PURE__*/_jsxDEV(Property, {\n              property: property,\n              variant: \"grid\"\n            }, `property-${property.id}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), paginationData.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn first-page\",\n            onClick: firstPage,\n            disabled: currentPage === 1,\n            title: \"First Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn prev-page\",\n            onClick: prevPage,\n            disabled: currentPage === 1,\n            title: \"Previous Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-pages\",\n            children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToPage(number),\n              className: `page-btn page-number ${currentPage === number ? 'active' : ''}`,\n              children: number\n            }, `page-btn-${number}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn next-page\",\n            onClick: nextPage,\n            disabled: currentPage === paginationData.totalPages,\n            title: \"Next Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn last-page\",\n            onClick: lastPage,\n            disabled: currentPage === paginationData.totalPages,\n            title: \"Last Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-info\",\n          children: [\"Showing \", paginationData.indexOfFirstProperty + 1, \"-\", Math.min(paginationData.indexOfLastProperty, filteredProperties.length), \" of \", filteredProperties.length, \" chalets\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPropertiesPage, \"GaFN4Lr2j8a5YNrfjR0ylKf0hWM=\", false, function () {\n  return [useLocation];\n});\n_c = AllPropertiesPage;\nexport default AllPropertiesPage;\nvar _c;\n$RefreshReg$(_c, \"AllPropertiesPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useLocation","Property","Navbar","Footer","SearchFilter","FiChevronLeft","FiChevronRight","FiChevronsLeft","FiChevronsRight","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPropertiesPage","_s","location","properties","setProperties","filteredProperties","setFilteredProperties","loading","setLoading","error","setError","initialSearchTerm","setInitialSearchTerm","currentPage","setCurrentPage","propertiesPerPage","updateFilteredProperties","newFiltered","queryParams","URLSearchParams","search","searchParam","get","fetchProperties","data","propertiesWithLikes","likesApiUrl","process","env","REACT_APP_API_BASE_URL","likesResponse","fetch","method","mode","headers","ok","likesData","json","Array","isArray","console","log","warn","apiUrl","response","Error","status","optimizedData","map","property","propertyWithLikes","find","p","id","title","price","main_image","city","bedrooms","beds","bedroom_count","bed_count","bathrooms","baths","bathroom_count","bath_count","description","created_at","likes_count","parseInt","searchLower","toLowerCase","filtered","filter","_property$title","_property$city","_property$description","includes","err","message","paginationData","totalPages","Math","max","ceil","length","indexOfLastProperty","indexOfFirstProperty","currentProperties","slice","goToPage","pageNumber","newPage","min","requestAnimationFrame","window","scrollTo","top","behavior","nextPage","prevPage","firstPage","lastPage","pageNumbers","maxVisiblePages","startPage","endPage","maxPagesBeforeCurrent","floor","maxPagesAfterCurrent","from","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","number","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/pages/AllPropertiesPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Property from '../components/Property';\r\nimport '../styles/AllPropertypage.css';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\r\n\r\nconst AllPropertiesPage = () => {\r\n  const location = useLocation();\r\n  const [properties, setProperties] = useState([]);\r\n  const [filteredProperties, setFilteredProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\r\n\r\n  // Pagination states\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [propertiesPerPage] = useState(8);\r\n\r\n  // Debounced update to prevent excessive re-renders\r\n  const updateFilteredProperties = useCallback((newFiltered) => {\r\n    setFilteredProperties(newFiltered);\r\n    setCurrentPage(1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchParam = queryParams.get('search');\r\n    if (searchParam) {\r\n      setInitialSearchTerm(searchParam);\r\n    }\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        setLoading(true);\r\n        let data = [];\r\n        let propertiesWithLikes = [];\r\n        \r\n        // First: Try to get properties with likes from property_manage.php\r\n        try {\r\n          const likesApiUrl = `${process.env.REACT_APP_API_BASE_URL}/property_manage.php?view=active`;\r\n          const likesResponse = await fetch(likesApiUrl, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n              'Accept': 'application/json'\r\n            }\r\n          });\r\n          \r\n          if (likesResponse.ok) {\r\n            const likesData = await likesResponse.json();\r\n            if (Array.isArray(likesData)) {\r\n              propertiesWithLikes = likesData;\r\n              console.log('Successfully fetched chalets with likes data');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.warn('Could not fetch likes data from property_manage.php:', error);\r\n        }\r\n        \r\n        // Second: Get all properties from get_all_chalets.php\r\n        const apiUrl = `${process.env.REACT_APP_API_BASE_URL}/get_all_chalets.php`;\r\n        const response = await fetch(apiUrl, {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        data = await response.json();\r\n        \r\n        if (Array.isArray(data)) {\r\n          // Merge data: Use get_all_chalets.php as base, add likes_count from property_manage.php\r\n          const optimizedData = data.map(property => {\r\n            // Find matching property with likes data\r\n            const propertyWithLikes = propertiesWithLikes.find(p => p.id === property.id);\r\n            \r\n            return {\r\n              id: property.id,\r\n              title: property.title,\r\n              price: property.price,\r\n              main_image: property.main_image,\r\n              city: property.city,\r\n              // Handle both possible field names for bedrooms/bathrooms\r\n              bedrooms: property.beds || property.bedrooms || property.bedroom_count || property.bed_count,\r\n              bathrooms: property.baths || property.bathrooms || property.bathroom_count || property.bath_count,\r\n              status: property.status,\r\n              description: property.description,\r\n              // Use created_at from either API\r\n              created_at: property.created_at || propertyWithLikes?.created_at,\r\n              // Use likes_count from property_manage.php if available\r\n              likes_count: parseInt(propertyWithLikes?.likes_count || property.likes_count || 0)\r\n            };\r\n          });\r\n          \r\n          console.log('Sample chalet with merged data:', optimizedData[0]);\r\n          \r\n          setProperties(optimizedData);\r\n          \r\n          if (initialSearchTerm) {\r\n            const searchLower = initialSearchTerm.toLowerCase();\r\n            const filtered = optimizedData.filter(property => \r\n              property.title?.toLowerCase().includes(searchLower) || \r\n              property.city?.toLowerCase().includes(searchLower) ||\r\n              property.description?.toLowerCase().includes(searchLower)\r\n            );\r\n            setFilteredProperties(filtered);\r\n          } else {\r\n            setFilteredProperties(optimizedData);\r\n          }\r\n        } else {\r\n          throw new Error('Invalid data format received from API');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching chalets:', err);\r\n        setError(`Error loading chalets: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, [initialSearchTerm]);\r\n\r\n  // Memoized pagination calculations to prevent unnecessary recalculations\r\n  const paginationData = useMemo(() => {\r\n    const totalPages = Math.max(1, Math.ceil(filteredProperties.length / propertiesPerPage));\r\n    const indexOfLastProperty = currentPage * propertiesPerPage;\r\n    const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n    const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\r\n    \r\n    return {\r\n      totalPages,\r\n      indexOfLastProperty,\r\n      indexOfFirstProperty,\r\n      currentProperties\r\n    };\r\n  }, [filteredProperties, currentPage, propertiesPerPage]);\r\n\r\n  // Optimized page navigation handlers\r\n  const goToPage = useCallback((pageNumber) => {\r\n    const newPage = Math.max(1, Math.min(pageNumber, paginationData.totalPages));\r\n    if (newPage !== currentPage) {\r\n      setCurrentPage(newPage);\r\n      // Smooth scroll to top without blocking\r\n      requestAnimationFrame(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      });\r\n    }\r\n  }, [currentPage, paginationData.totalPages]);\r\n\r\n  const nextPage = useCallback(() => goToPage(currentPage + 1), [currentPage, goToPage]);\r\n  const prevPage = useCallback(() => goToPage(currentPage - 1), [currentPage, goToPage]);\r\n  const firstPage = useCallback(() => goToPage(1), [goToPage]);\r\n  const lastPage = useCallback(() => goToPage(paginationData.totalPages), [goToPage, paginationData.totalPages]);\r\n\r\n  // Memoized page numbers generation\r\n  const pageNumbers = useMemo(() => {\r\n    const maxVisiblePages = 5;\r\n    const { totalPages } = paginationData;\r\n    let startPage, endPage;\r\n\r\n    if (totalPages <= maxVisiblePages) {\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else {\r\n      const maxPagesBeforeCurrent = Math.floor(maxVisiblePages / 2);\r\n      const maxPagesAfterCurrent = Math.ceil(maxVisiblePages / 2) - 1;\r\n\r\n      if (currentPage <= maxPagesBeforeCurrent) {\r\n        startPage = 1;\r\n        endPage = maxVisiblePages;\r\n      } else if (currentPage + maxPagesAfterCurrent >= totalPages) {\r\n        startPage = totalPages - maxVisiblePages + 1;\r\n        endPage = totalPages;\r\n      } else {\r\n        startPage = currentPage - maxPagesBeforeCurrent;\r\n        endPage = currentPage + maxPagesAfterCurrent;\r\n      }\r\n    }\r\n\r\n    return Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);\r\n  }, [currentPage, paginationData.totalPages]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading Chalets...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"all-properties-page\">\r\n      <Navbar />\r\n      \r\n      <div className=\"property-listings\">\r\n        <div className=\"listings-header\">\r\n          <SearchFilter \r\n            properties={properties} \r\n            setFilteredProperties={updateFilteredProperties}\r\n            initialSearchTerm={initialSearchTerm}\r\n          />\r\n          \r\n          <p className=\"properties-count\">\r\n            {filteredProperties.length} {filteredProperties.length === 1 ? 'chalet' : 'chalets'} found\r\n            {paginationData.totalPages > 1 && (\r\n              <span className=\"pagination-info-inline\"> (Page {currentPage} of {paginationData.totalPages})</span>\r\n            )}\r\n          </p>\r\n        </div>\r\n\r\n        {filteredProperties.length === 0 ? (\r\n          <div className=\"no-results\">No chalets match your search criteria. Try adjusting your filters.</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"properties-container\">\r\n              <div className=\"properties-slider\">\r\n                {paginationData.currentProperties.map(property => (\r\n                  <Property \r\n                    key={`property-${property.id}`}\r\n                    property={property}\r\n                    variant=\"grid\" \r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {paginationData.totalPages > 1 && (\r\n              <div className=\"pagination-controls\">\r\n                <button \r\n                  className=\"page-btn first-page\"\r\n                  onClick={firstPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"First Page\"\r\n                >\r\n                  <FiChevronsLeft />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn prev-page\"\r\n                  onClick={prevPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"Previous Page\"\r\n                >\r\n                  <FiChevronLeft />\r\n                </button>\r\n                \r\n                <div className=\"pagination-pages\">\r\n                  {pageNumbers.map(number => (\r\n                    <button\r\n                      key={`page-btn-${number}`}\r\n                      onClick={() => goToPage(number)}\r\n                      className={`page-btn page-number ${currentPage === number ? 'active' : ''}`}\r\n                    >\r\n                      {number}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"page-btn next-page\"\r\n                  onClick={nextPage}\r\n                  disabled={currentPage === paginationData.totalPages}\r\n                  title=\"Next Page\"\r\n                >\r\n                  <FiChevronRight />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn last-page\"\r\n                  onClick={lastPage}\r\n                  disabled={currentPage === paginationData.totalPages}\r\n                  title=\"Last Page\"\r\n                >\r\n                  <FiChevronsRight />\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            <div className=\"pagination-info\">\r\n              Showing {paginationData.indexOfFirstProperty + 1}-{Math.min(paginationData.indexOfLastProperty, filteredProperties.length)} of {filteredProperties.length} chalets\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPropertiesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}