{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\UserManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiEdit, FiTrash2, FiPlus, FiX, FiSave } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserModal({\n  isOpen,\n  onClose,\n  user,\n  onSave\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    is_admin: 0\n  });\n  const [formErrors, setFormErrors] = useState({});\n\n  // When the modal opens, set form data to user data if editing\n  useEffect(() => {\n    if (user) {\n      setFormData({\n        name: user.name || '',\n        email: user.email || '',\n        password: '',\n        // Don't display the password\n        is_admin: user.is_admin || 0\n      });\n    } else {\n      // Reset form for new user\n      setFormData({\n        name: '',\n        email: '',\n        password: '',\n        is_admin: 0\n      });\n    }\n    // Clear errors when modal opens\n    setFormErrors({});\n  }, [user, isOpen]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked ? 1 : 0 : value\n    });\n  };\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.name.trim()) {\n      errors.name = 'Name is required';\n    }\n    if (!formData.email.trim()) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      errors.email = 'Email is invalid';\n    }\n\n    // Only validate password for new users\n    if (!user && !formData.password) {\n      errors.password = 'Password is required for new users';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSave({\n        ...formData,\n        id: user ? user.id : null\n      });\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user ? `Edit User: ${user.name}` : 'Add New User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            className: formErrors.name ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), formErrors.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-text\",\n            children: formErrors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            className: formErrors.email ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), formErrors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-text\",\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: user ? 'Password (leave empty to keep current)' : 'Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            className: formErrors.password ? 'error' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), formErrors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-text\",\n            children: formErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"is_admin\",\n            name: \"is_admin\",\n            checked: formData.is_admin == 1,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"is_admin\",\n            children: \"Admin User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"save-btn\",\n            children: [/*#__PURE__*/_jsxDEV(FiSave, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), \" Save User\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"cancel-btn\",\n            onClick: onClose,\n            children: [/*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), \" Cancel\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(UserModal, \"RFezcqXnW5YmNrn7BVdNISkLydg=\");\n_c = UserModal;\nfunction UserManagement() {\n  _s2();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Fetch users from the API\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/get_users.php', {\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      const data = await response.json();\n      if (data.success) {\n        setUsers(data.users || []);\n      } else {\n        setError(data.message || 'Failed to fetch users');\n      }\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setError('Error fetching users. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditClick = userId => {\n    const user = users.find(user => user.id === userId);\n    if (user) {\n      setCurrentUser(user);\n      setIsModalOpen(true);\n    }\n  };\n  const handleAddClick = () => {\n    setCurrentUser(null);\n    setIsModalOpen(true);\n  };\n  const handleDeleteUser = async userId => {\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      try {\n        console.log('Deleting user with ID:', userId);\n        const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/delete_user.php', {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: userId\n          })\n        });\n\n        // Log the raw response for debugging\n        const responseText = await response.text();\n        console.log('Raw response:', responseText);\n\n        // Try to parse as JSON\n        let data;\n        try {\n          data = JSON.parse(responseText);\n        } catch (e) {\n          console.error('Failed to parse response as JSON:', e);\n          alert('Error: Server returned invalid response');\n          return;\n        }\n        console.log('Parsed response:', data);\n        if (data.success) {\n          // Remove user from state\n          setUsers(users.filter(user => user.id !== userId));\n          alert('User deleted successfully');\n        } else {\n          alert(data.message || 'Failed to delete user');\n        }\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        alert('Error deleting user: ' + error.message);\n      }\n    }\n  };\n  const handleSaveUser = async userData => {\n    try {\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/save_user.php', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      const data = await response.json();\n      if (data.success) {\n        if (userData.id) {\n          // Update existing user in state\n          setUsers(users.map(user => user.id === userData.id ? data.user : user));\n        } else {\n          // Add new user to state\n          setUsers([data.user, ...users]);\n        }\n        setIsModalOpen(false);\n        alert(data.message);\n      } else {\n        alert(data.message || 'Failed to save user');\n      }\n    } catch (error) {\n      console.error('Error saving user:', error);\n      alert('Error saving user. Please try again later.');\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"users\",\n    className: \"dashboard-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-subtitle\",\n        children: \"Manage all registered users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-chalet-btn\",\n      onClick: handleAddClick,\n      children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), \" Add New User\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading users...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this) : users.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No users found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"data-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.is_admin == 1 ? 'Admin' : 'User'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"status active\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"action-buttons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"edit-btn\",\n                    onClick: () => handleEditClick(user.id),\n                    title: \"Edit User\",\n                    children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"delete-btn\",\n                    onClick: () => handleDeleteUser(user.id),\n                    title: \"Delete User\",\n                    children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 21\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserModal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      user: currentUser,\n      onSave: handleSaveUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n}\n_s2(UserManagement, \"o5I7mpBwx2iZRAkrNhk8pQpvDJk=\");\n_c2 = UserManagement;\nexport default UserManagement;\nvar _c, _c2;\n$RefreshReg$(_c, \"UserModal\");\n$RefreshReg$(_c2, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","FiEdit","FiTrash2","FiPlus","FiX","FiSave","jsxDEV","_jsxDEV","UserModal","isOpen","onClose","user","onSave","_s","formData","setFormData","name","email","password","is_admin","formErrors","setFormErrors","handleChange","e","value","type","checked","target","validateForm","errors","trim","test","Object","keys","length","handleSubmit","preventDefault","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","onChange","_c","UserManagement","_s2","users","setUsers","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","currentUser","setCurrentUser","fetchUsers","response","fetch","credentials","ok","Error","data","json","success","message","console","handleEditClick","userId","find","handleAddClick","handleDeleteUser","window","confirm","log","method","headers","body","JSON","stringify","responseText","text","parse","alert","filter","handleSaveUser","userData","map","closeModal","title","_c2","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FiEdit, FiTrash2, FiPlus, FiX, FiSave } from 'react-icons/fi';\r\n\r\nfunction UserModal({ isOpen, onClose, user, onSave }) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    is_admin: 0\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  // When the modal opens, set form data to user data if editing\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormData({\r\n        name: user.name || '',\r\n        email: user.email || '',\r\n        password: '', // Don't display the password\r\n        is_admin: user.is_admin || 0\r\n      });\r\n    } else {\r\n      // Reset form for new user\r\n      setFormData({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        is_admin: 0\r\n      });\r\n    }\r\n    // Clear errors when modal opens\r\n    setFormErrors({});\r\n  }, [user, isOpen]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? (checked ? 1 : 0) : value\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    \r\n    if (!formData.name.trim()) {\r\n      errors.name = 'Name is required';\r\n    }\r\n    \r\n    if (!formData.email.trim()) {\r\n      errors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      errors.email = 'Email is invalid';\r\n    }\r\n    \r\n    // Only validate password for new users\r\n    if (!user && !formData.password) {\r\n      errors.password = 'Password is required for new users';\r\n    }\r\n    \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (validateForm()) {\r\n      onSave({\r\n        ...formData,\r\n        id: user ? user.id : null\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>{user ? `Edit User: ${user.name}` : 'Add New User'}</h3>\r\n          <button className=\"close-btn\" onClick={onClose}>\r\n            <FiX />\r\n          </button>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"user-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              className={formErrors.name ? 'error' : ''}\r\n            />\r\n            {formErrors.name && <div className=\"error-text\">{formErrors.name}</div>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className={formErrors.email ? 'error' : ''}\r\n            />\r\n            {formErrors.email && <div className=\"error-text\">{formErrors.email}</div>}\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">\r\n              {user ? 'Password (leave empty to keep current)' : 'Password'}\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              className={formErrors.password ? 'error' : ''}\r\n            />\r\n            {formErrors.password && <div className=\"error-text\">{formErrors.password}</div>}\r\n          </div>\r\n          \r\n          <div className=\"form-group checkbox-group\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"is_admin\"\r\n              name=\"is_admin\"\r\n              checked={formData.is_admin == 1}\r\n              onChange={handleChange}\r\n            />\r\n            <label htmlFor=\"is_admin\">Admin User</label>\r\n          </div>\r\n          \r\n          <div className=\"form-actions\">\r\n            <button type=\"submit\" className=\"save-btn\">\r\n              <FiSave /> Save User\r\n            </button>\r\n            <button type=\"button\" className=\"cancel-btn\" onClick={onClose}>\r\n              <FiX /> Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UserManagement() {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // Fetch users from the API\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/get_users.php', {\r\n        credentials: 'include',\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch users');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setUsers(data.users || []);\r\n      } else {\r\n        setError(data.message || 'Failed to fetch users');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      setError('Error fetching users. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (userId) => {\r\n    const user = users.find(user => user.id === userId);\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setIsModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setCurrentUser(null);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteUser = async (userId) => {\r\n    if (window.confirm('Are you sure you want to delete this user?')) {\r\n      try {\r\n        console.log('Deleting user with ID:', userId);\r\n        \r\n        const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/delete_user.php', {\r\n          method: 'POST',\r\n          credentials: 'include',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ userId: userId }),\r\n        });\r\n        \r\n        // Log the raw response for debugging\r\n        const responseText = await response.text();\r\n        console.log('Raw response:', responseText);\r\n        \r\n        // Try to parse as JSON\r\n        let data;\r\n        try {\r\n          data = JSON.parse(responseText);\r\n        } catch (e) {\r\n          console.error('Failed to parse response as JSON:', e);\r\n          alert('Error: Server returned invalid response');\r\n          return;\r\n        }\r\n        \r\n        console.log('Parsed response:', data);\r\n        \r\n        if (data.success) {\r\n          // Remove user from state\r\n          setUsers(users.filter(user => user.id !== userId));\r\n          alert('User deleted successfully');\r\n        } else {\r\n          alert(data.message || 'Failed to delete user');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        alert('Error deleting user: ' + error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSaveUser = async (userData) => {\r\n    try {\r\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/save_user.php', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(userData),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        if (userData.id) {\r\n          // Update existing user in state\r\n          setUsers(users.map(user => \r\n            user.id === userData.id ? data.user : user\r\n          ));\r\n        } else {\r\n          // Add new user to state\r\n          setUsers([data.user, ...users]);\r\n        }\r\n        \r\n        setIsModalOpen(false);\r\n        alert(data.message);\r\n      } else {\r\n        alert(data.message || 'Failed to save user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving user:', error);\r\n      alert('Error saving user. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <section id=\"users\" className=\"dashboard-section\">\r\n      <div className=\"section-header\">\r\n        <h2 className=\"section-title\">User Management</h2>\r\n        <p className=\"section-subtitle\">Manage all registered users</p>\r\n      </div>\r\n      \r\n      <button className=\"add-chalet-btn\" onClick={handleAddClick}>\r\n        <FiPlus /> Add New User\r\n      </button>\r\n      \r\n      <div className=\"section-content\">\r\n        {loading ? (\r\n          <div className=\"loading-spinner\">Loading users...</div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">{error}</div>\r\n        ) : users.length === 0 ? (\r\n          <div className=\"no-results\">No users found.</div>\r\n        ) : (\r\n          <div className=\"table-container\">\r\n            <table className=\"data-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Role</th>\r\n                  <th>Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.map(user => (\r\n                  <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.is_admin == 1 ? 'Admin' : 'User'}</td>\r\n                    <td>\r\n                      <span className=\"status active\">Active</span>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"action-buttons\">\r\n                        <button \r\n                          className=\"edit-btn\"\r\n                          onClick={() => handleEditClick(user.id)}\r\n                          title=\"Edit User\"\r\n                        >\r\n                          <FiEdit />\r\n                        </button>\r\n                        <button \r\n                          className=\"delete-btn\"\r\n                          onClick={() => handleDeleteUser(user.id)}\r\n                          title=\"Delete User\"\r\n                        >\r\n                          <FiTrash2 />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* User Modal for Adding/Editing */}\r\n      <UserModal\r\n        isOpen={isModalOpen}\r\n        onClose={closeModal}\r\n        user={currentUser}\r\n        onSave={handleSaveUser}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}