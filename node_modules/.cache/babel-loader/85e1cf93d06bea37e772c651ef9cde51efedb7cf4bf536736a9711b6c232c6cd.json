{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\Property.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiMapPin, FiHome, FiDroplet, FiHeart } from 'react-icons/fi';\nimport '../styles/Property.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Property = ({\n  property,\n  variant = \"default\",\n  onFavoriteChange\n}) => {\n  _s();\n  // State to track if the property is liked\n  const [isLiked, setIsLiked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Make sure property exists, otherwise use an empty object\n  const propertyData = property || {};\n  const {\n    id,\n    title,\n    price,\n    main_image,\n    city,\n    bedrooms,\n    bathrooms,\n    bedroom_count,\n    bathroom_count,\n    bed_count,\n    bath_count,\n    beds,\n    baths,\n    status\n  } = propertyData;\n\n  // Create a slug from the title for the URL\n  const createSlug = (title, id) => {\n    if (!title) return id;\n    // Convert to lowercase, replace spaces with hyphens, remove special characters\n    const slug = title.toLowerCase().replace(/[^\\w\\s-]/g, '').replace(/\\s+/g, '-');\n    // Append the ID to ensure uniqueness\n    return `${slug}-${id}`;\n  };\n\n  // Choose the first available bedroom/bathroom values\n  const bedroomValue = bedrooms || bedroom_count || bed_count || beds || 'N/A';\n  const bathroomValue = bathrooms || bathroom_count || bath_count || baths || 'N/A';\n\n  // Format price with commas\n  const formattedPrice = typeof price === 'number' ? price.toLocaleString() : Number(price) ? Number(price).toLocaleString() : 'Price on request';\n\n  // Helper function to format image URL\n  const formatImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.jpg\";\n\n    // If it's already a full URL, return it as is\n    if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n      return imagePath;\n    }\n\n    // If it's a relative path, build the full URL\n    // Remove any leading slash to avoid double slashes\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\n    return `http://localhost/real_estate_project/${cleanPath}`;\n  };\n\n  // Get proper image URL with helper function\n  const imageSrc = formatImageUrl(main_image);\n\n  // Get user's favorites from localStorage\n  const getFavoritesFromStorage = () => {\n    try {\n      const favorites = localStorage.getItem('favorites');\n      return favorites ? JSON.parse(favorites) : [];\n    } catch (e) {\n      console.error('Error parsing favorites from localStorage:', e);\n      return [];\n    }\n  };\n\n  // Check if the property is in favorites\n  const checkIfLiked = () => {\n    if (!id) return false;\n    const favorites = getFavoritesFromStorage();\n    return Array.isArray(favorites) && favorites.includes(id.toString());\n  };\n\n  // Check for liked status on mount and when localStorage changes\n  useEffect(() => {\n    setIsLiked(checkIfLiked());\n\n    // Listen for storage events (when other components update localStorage)\n    const handleStorageChange = () => {\n      setIsLiked(checkIfLiked());\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Listen for custom events when favorites change in table\n    const handleFavoritesChange = e => {\n      if (e.detail && e.detail.chaletId === id) {\n        setIsLiked(e.detail.isLiked);\n      }\n    };\n    window.addEventListener('favoritesChanged', handleFavoritesChange);\n\n    // Check server status periodically\n    const checkServerStatus = () => {\n      if (!id) return; // Skip if no ID\n\n      fetch('http://localhost/real_estate_project/api/check_is_favorite.php', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chaletId: id\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          // If server state is different from our local state, update local state\n          if (data.isFavorite !== isLiked) {\n            setIsLiked(data.isFavorite);\n\n            // Also update localStorage\n            const favorites = getFavoritesFromStorage();\n            if (data.isFavorite && !favorites.includes(id.toString())) {\n              favorites.push(id.toString());\n              localStorage.setItem('favorites', JSON.stringify(favorites));\n            } else if (!data.isFavorite && favorites.includes(id.toString())) {\n              const updatedFavorites = favorites.filter(favId => favId !== id.toString());\n              localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n            }\n          }\n        }\n      }).catch(err => {\n        console.log('Failed to check favorite status:', err);\n      });\n    };\n\n    // Check on mount\n    checkServerStatus();\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('favoritesChanged', handleFavoritesChange);\n    };\n  }, [id, isLiked]);\n\n  // Handle like button click\n  const handleLikeClick = e => {\n    e.preventDefault(); // Prevent navigation to the chalet detail page\n    e.stopPropagation(); // Stop event propagation\n\n    if (!id) return;\n    setIsLoading(true);\n\n    // Toggle like state\n    const newLikedState = !isLiked;\n    setIsLiked(newLikedState);\n    console.log('Like button clicked for chalet ID:', id);\n\n    // Update localStorage for immediate feedback\n    let favorites = getFavoritesFromStorage();\n    if (newLikedState) {\n      // Add to favorites if not already there\n      if (!favorites.includes(id.toString())) {\n        favorites.push(id.toString());\n      }\n    } else {\n      // Remove from favorites\n      favorites = favorites.filter(favId => favId !== id.toString());\n    }\n\n    // Save updated favorites to localStorage\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    // Dispatch events to notify other components\n    window.dispatchEvent(new Event('storage'));\n    window.dispatchEvent(new CustomEvent('favoritesChanged', {\n      detail: {\n        chaletId: id.toString(),\n        isLiked: newLikedState\n      }\n    }));\n\n    // Also try to update server\n    const apiUrl = newLikedState ? 'http://localhost/real_estate_project/api/add_to_favorites.php' : 'http://localhost/real_estate_project/api/remove_from_favorites.php';\n    fetch(apiUrl, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        chaletId: id\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(newLikedState ? 'Add to favorites response:' : 'Remove from favorites response:', data);\n      if (!data.success) {\n        console.warn('Server update failed, but localStorage was updated');\n      }\n    }).catch(error => {\n      console.warn('Server update failed, but localStorage was updated:', error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n\n    // Notify parent component if callback provided\n    if (onFavoriteChange) {\n      onFavoriteChange(id, newLikedState);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/chalet/${createSlug(title, id)}`,\n    className: `property-card ${variant}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageSrc,\n        alt: title || \"Swiss Chalet\",\n        className: \"property-image\",\n        loading: \"lazy\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = \"/placeholder.jpg\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-badge\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `like-button ${isLiked ? 'liked' : ''} ${isLoading ? 'loading' : ''}`,\n        onClick: handleLikeClick,\n        \"aria-label\": isLiked ? \"Remove from favorites\" : \"Add to favorites\",\n        children: /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"property-title\",\n        children: title || \"Beautiful Swiss Chalet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-price\",\n        children: [formattedPrice, \" CHF\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), city && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-location\",\n        children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n          className: \"property-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), \" \", city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"property-feature\",\n          children: [/*#__PURE__*/_jsxDEV(FiHome, {\n            className: \"property-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), \" \", bedroomValue, \" beds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"property-feature\",\n          children: [/*#__PURE__*/_jsxDEV(FiDroplet, {\n            className: \"property-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), \" \", bathroomValue, \" baths\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(Property, \"a4uHKw68ym16YaoNTI4bDuW3zwA=\");\n_c = Property;\nexport default Property;\nvar _c;\n$RefreshReg$(_c, \"Property\");","map":{"version":3,"names":["React","useState","useEffect","Link","FiMapPin","FiHome","FiDroplet","FiHeart","jsxDEV","_jsxDEV","Property","property","variant","onFavoriteChange","_s","isLiked","setIsLiked","isLoading","setIsLoading","propertyData","id","title","price","main_image","city","bedrooms","bathrooms","bedroom_count","bathroom_count","bed_count","bath_count","beds","baths","status","createSlug","slug","toLowerCase","replace","bedroomValue","bathroomValue","formattedPrice","toLocaleString","Number","formatImageUrl","imagePath","startsWith","cleanPath","substring","imageSrc","getFavoritesFromStorage","favorites","localStorage","getItem","JSON","parse","e","console","error","checkIfLiked","Array","isArray","includes","toString","handleStorageChange","window","addEventListener","handleFavoritesChange","detail","chaletId","checkServerStatus","fetch","method","credentials","headers","body","stringify","then","res","json","data","success","isFavorite","push","setItem","updatedFavorites","filter","favId","catch","err","log","removeEventListener","handleLikeClick","preventDefault","stopPropagation","newLikedState","dispatchEvent","Event","CustomEvent","apiUrl","warn","finally","to","className","children","src","alt","loading","onError","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/Property.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiMapPin, FiHome, FiDroplet, FiHeart } from 'react-icons/fi';\r\nimport '../styles/Property.css';\r\n\r\nconst Property = ({ property, variant = \"default\", onFavoriteChange }) => {\r\n  // State to track if the property is liked\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Make sure property exists, otherwise use an empty object\r\n  const propertyData = property || {};\r\n  \r\n  const {\r\n    id,\r\n    title,\r\n    price,\r\n    main_image,\r\n    city,\r\n    bedrooms,\r\n    bathrooms,\r\n    bedroom_count,\r\n    bathroom_count,\r\n    bed_count,\r\n    bath_count,\r\n    beds,\r\n    baths,\r\n    status\r\n  } = propertyData;\r\n\r\n  // Create a slug from the title for the URL\r\n  const createSlug = (title, id) => {\r\n    if (!title) return id;\r\n    // Convert to lowercase, replace spaces with hyphens, remove special characters\r\n    const slug = title.toLowerCase()\r\n      .replace(/[^\\w\\s-]/g, '')\r\n      .replace(/\\s+/g, '-');\r\n    // Append the ID to ensure uniqueness\r\n    return `${slug}-${id}`;\r\n  };\r\n\r\n  // Choose the first available bedroom/bathroom values\r\n  const bedroomValue = bedrooms || bedroom_count || bed_count || beds || 'N/A';\r\n  const bathroomValue = bathrooms || bathroom_count || bath_count || baths || 'N/A';\r\n\r\n  // Format price with commas\r\n  const formattedPrice = typeof price === 'number' \r\n    ? price.toLocaleString() \r\n    : Number(price) ? Number(price).toLocaleString() : 'Price on request';\r\n\r\n  // Helper function to format image URL\r\n  const formatImageUrl = (imagePath) => {\r\n    if (!imagePath) return \"/placeholder.jpg\";\r\n    \r\n    // If it's already a full URL, return it as is\r\n    if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n      return imagePath;\r\n    }\r\n    \r\n    // If it's a relative path, build the full URL\r\n    // Remove any leading slash to avoid double slashes\r\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\r\n    return `http://localhost/real_estate_project/${cleanPath}`;\r\n  };\r\n\r\n  // Get proper image URL with helper function\r\n  const imageSrc = formatImageUrl(main_image);\r\n\r\n  // Get user's favorites from localStorage\r\n  const getFavoritesFromStorage = () => {\r\n    try {\r\n      const favorites = localStorage.getItem('favorites');\r\n      return favorites ? JSON.parse(favorites) : [];\r\n    } catch (e) {\r\n      console.error('Error parsing favorites from localStorage:', e);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Check if the property is in favorites\r\n  const checkIfLiked = () => {\r\n    if (!id) return false;\r\n    \r\n    const favorites = getFavoritesFromStorage();\r\n    return Array.isArray(favorites) && favorites.includes(id.toString());\r\n  };\r\n\r\n  // Check for liked status on mount and when localStorage changes\r\n  useEffect(() => {\r\n    setIsLiked(checkIfLiked());\r\n    \r\n    // Listen for storage events (when other components update localStorage)\r\n    const handleStorageChange = () => {\r\n      setIsLiked(checkIfLiked());\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    \r\n    // Listen for custom events when favorites change in table\r\n    const handleFavoritesChange = (e) => {\r\n      if (e.detail && e.detail.chaletId === id) {\r\n        setIsLiked(e.detail.isLiked);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('favoritesChanged', handleFavoritesChange);\r\n    \r\n    // Check server status periodically\r\n    const checkServerStatus = () => {\r\n      if (!id) return; // Skip if no ID\r\n      \r\n      fetch('http://localhost/real_estate_project/api/check_is_favorite.php', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ chaletId: id }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.success) {\r\n            // If server state is different from our local state, update local state\r\n            if (data.isFavorite !== isLiked) {\r\n              setIsLiked(data.isFavorite);\r\n              \r\n              // Also update localStorage\r\n              const favorites = getFavoritesFromStorage();\r\n              if (data.isFavorite && !favorites.includes(id.toString())) {\r\n                favorites.push(id.toString());\r\n                localStorage.setItem('favorites', JSON.stringify(favorites));\r\n              } else if (!data.isFavorite && favorites.includes(id.toString())) {\r\n                const updatedFavorites = favorites.filter(favId => favId !== id.toString());\r\n                localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log('Failed to check favorite status:', err);\r\n        });\r\n    };\r\n    \r\n    // Check on mount\r\n    checkServerStatus();\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n      window.removeEventListener('favoritesChanged', handleFavoritesChange);\r\n    };\r\n  }, [id, isLiked]);\r\n  \r\n  // Handle like button click\r\n  const handleLikeClick = (e) => {\r\n    e.preventDefault(); // Prevent navigation to the chalet detail page\r\n    e.stopPropagation(); // Stop event propagation\r\n    \r\n    if (!id) return;\r\n    setIsLoading(true);\r\n    \r\n    // Toggle like state\r\n    const newLikedState = !isLiked;\r\n    setIsLiked(newLikedState);\r\n    \r\n    console.log('Like button clicked for chalet ID:', id);\r\n    \r\n    // Update localStorage for immediate feedback\r\n    let favorites = getFavoritesFromStorage();\r\n    \r\n    if (newLikedState) {\r\n      // Add to favorites if not already there\r\n      if (!favorites.includes(id.toString())) {\r\n        favorites.push(id.toString());\r\n      }\r\n    } else {\r\n      // Remove from favorites\r\n      favorites = favorites.filter(favId => favId !== id.toString());\r\n    }\r\n    \r\n    // Save updated favorites to localStorage\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    \r\n    // Dispatch events to notify other components\r\n    window.dispatchEvent(new Event('storage'));\r\n    window.dispatchEvent(new CustomEvent('favoritesChanged', {\r\n      detail: { chaletId: id.toString(), isLiked: newLikedState }\r\n    }));\r\n    \r\n    // Also try to update server\r\n    const apiUrl = newLikedState \r\n      ? 'http://localhost/real_estate_project/api/add_to_favorites.php' \r\n      : 'http://localhost/real_estate_project/api/remove_from_favorites.php';\r\n    \r\n    fetch(apiUrl, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ chaletId: id }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(newLikedState ? 'Add to favorites response:' : 'Remove from favorites response:', data);\r\n        if (!data.success) {\r\n          console.warn('Server update failed, but localStorage was updated');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.warn('Server update failed, but localStorage was updated:', error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n    \r\n    // Notify parent component if callback provided\r\n    if (onFavoriteChange) {\r\n      onFavoriteChange(id, newLikedState);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Link to={`/chalet/${createSlug(title, id)}`} className={`property-card ${variant}`}>\r\n      <div className=\"property-image-container\">\r\n        <img \r\n          src={imageSrc} \r\n          alt={title || \"Swiss Chalet\"} \r\n          className=\"property-image\" \r\n          loading=\"lazy\" \r\n          onError={(e) => {\r\n            e.target.onerror = null;\r\n            e.target.src = \"/placeholder.jpg\";\r\n          }}\r\n        />\r\n        {status && <div className=\"property-badge\">{status}</div>}\r\n        \r\n        {/* Like Button */}\r\n        <div \r\n          className={`like-button ${isLiked ? 'liked' : ''} ${isLoading ? 'loading' : ''}`}\r\n          onClick={handleLikeClick}\r\n          aria-label={isLiked ? \"Remove from favorites\" : \"Add to favorites\"}\r\n        >\r\n          <FiHeart />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"property-details\">\r\n        <h3 className=\"property-title\">{title || \"Beautiful Swiss Chalet\"}</h3>\r\n        <div className=\"property-price\">{formattedPrice} CHF</div>\r\n        \r\n        {city && (\r\n          <div className=\"property-location\">\r\n            <FiMapPin className=\"property-icon\" /> {city}\r\n          </div>\r\n        )}\r\n        \r\n        <div className=\"property-meta\">\r\n          {/* Always show beds/baths, with fallback to N/A */}\r\n          <span className=\"property-feature\">\r\n            <FiHome className=\"property-icon\" /> {bedroomValue} beds\r\n          </span>\r\n          <span className=\"property-feature\">\r\n            <FiDroplet className=\"property-icon\" /> {bathroomValue} baths\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Property;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}