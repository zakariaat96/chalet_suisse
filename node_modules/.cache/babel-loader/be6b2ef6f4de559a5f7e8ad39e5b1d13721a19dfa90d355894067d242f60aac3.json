{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\DashboardOverview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { FiUsers, FiHome, FiDollarSign, FiActivity, FiBarChart2, FiPlus, FiHeart, FiMapPin, FiCalendar, FiPackage, FiRefreshCw, FiSend, FiClock } from 'react-icons/fi';\nimport axios from 'axios';\nimport { BarChart, Bar, PieChart, Pie, Cell, LineChart, Line, ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ZAxis } from 'recharts';\nimport '../styles/DashboardOverview.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashboardOverview() {\n  _s();\n  // State for statistics\n  const [stats, setStats] = useState({\n    users: {\n      total: 0,\n      trend: 0\n    },\n    properties: {\n      total: 0,\n      trend: 0\n    },\n    revenue: {\n      total: 0,\n      trend: 0\n    },\n    likes: {\n      total: 0,\n      trend: 0\n    }\n  });\n\n  // State for charts data\n  const [chartData, setChartData] = useState({\n    propertiesByType: [],\n    propertiesByStatus: [],\n    propertiesByCity: [],\n    propertiesByYear: [],\n    activePropertyOwners: [],\n    topLikedProperties: [],\n    propertyAgeVsPrice: []\n  });\n\n  // State for recent activity\n  const [recentActivity, setRecentActivity] = useState([]);\n\n  // State for loading and error status\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // State for responsive breakpoints\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  // Handle window resize for responsive behavior\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Get responsive margins and settings based on screen size\n  const getChartSettings = () => {\n    if (windowWidth <= 480) {\n      return {\n        margin: {\n          top: 5,\n          right: 15,\n          left: 60,\n          bottom: 5\n        },\n        yAxisWidth: 60,\n        fontSize: 10,\n        maxLabelLength: 8\n      };\n    } else if (windowWidth <= 768) {\n      return {\n        margin: {\n          top: 5,\n          right: 20,\n          left: 70,\n          bottom: 5\n        },\n        yAxisWidth: 70,\n        fontSize: 11,\n        maxLabelLength: 10\n      };\n    } else if (windowWidth <= 992) {\n      return {\n        margin: {\n          top: 5,\n          right: 25,\n          left: 80,\n          bottom: 5\n        },\n        yAxisWidth: 80,\n        fontSize: 12,\n        maxLabelLength: 12\n      };\n    } else {\n      return {\n        margin: {\n          top: 5,\n          right: 30,\n          left: 90,\n          bottom: 5\n        },\n        yAxisWidth: 90,\n        fontSize: 12,\n        maxLabelLength: 15\n      };\n    }\n  };\n  const chartSettings = getChartSettings();\n\n  // Fetch dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch real data from the backend\n        const response = await axios.get('http://localhost/real_estate_project/api/dashboard_stats.php', {\n          withCredentials: true\n        });\n        console.log('API Response:', response.data); // Debug log\n\n        const data = response.data;\n        if (data.success) {\n          var _data$propertiesByCit, _data$propertiesByYea, _data$activePropertyO, _data$topLikedPropert, _data$propertyAgeVsPr;\n          // Set stats from API response\n          setStats({\n            users: data.stats.users || {\n              total: 0,\n              trend: 0\n            },\n            properties: data.stats.properties || {\n              total: 0,\n              trend: 0\n            },\n            revenue: data.stats.revenue || {\n              total: 0,\n              trend: 0\n            },\n            likes: data.stats.likes || {\n              total: 0,\n              trend: 0\n            }\n          });\n\n          // Format property type data for the pie chart\n          const typeData = data.propertyByType.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format property status data for the bar chart\n          const statusData = data.propertyByStatus.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }));\n\n          // Format properties by city data\n          const cityData = ((_data$propertiesByCit = data.propertiesByCity) === null || _data$propertiesByCit === void 0 ? void 0 : _data$propertiesByCit.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format properties by year built data\n          const yearData = ((_data$propertiesByYea = data.propertiesByYear) === null || _data$propertiesByYea === void 0 ? void 0 : _data$propertiesByYea.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format active property owners data\n          const ownersData = ((_data$activePropertyO = data.activePropertyOwners) === null || _data$activePropertyO === void 0 ? void 0 : _data$activePropertyO.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format top liked properties data\n          const likedPropertiesData = ((_data$topLikedPropert = data.topLikedProperties) === null || _data$topLikedPropert === void 0 ? void 0 : _data$topLikedPropert.map(item => ({\n            name: item.name || 'Unknown',\n            value: item.count || 0\n          }))) || [];\n\n          // Format property age vs price data (for scatter plot)\n          const ageVsPriceData = ((_data$propertyAgeVsPr = data.propertyAgeVsPrice) === null || _data$propertyAgeVsPr === void 0 ? void 0 : _data$propertyAgeVsPr.map(item => ({\n            x: parseInt(item.age) || 0,\n            y: parseFloat(item.price) || 0,\n            name: item.title,\n            type: item.property_type\n          }))) || [];\n          setChartData({\n            propertiesByType: typeData,\n            propertiesByStatus: statusData,\n            propertiesByCity: cityData,\n            propertiesByYear: yearData,\n            activePropertyOwners: ownersData,\n            topLikedProperties: likedPropertiesData,\n            propertyAgeVsPrice: ageVsPriceData\n          });\n\n          // Format recent activity data with icons\n          const activityWithIcons = data.recentActivity.map(activity => {\n            // Map action types to icons\n            const getIcon = action => {\n              if (action.includes('registered')) return FiUsers;\n              if (action.includes('listed')) return FiHome;\n              if (action.includes('liked')) return FiHeart;\n              if (action.includes('purchase') || action.includes('sold')) return FiDollarSign;\n              return FiActivity;\n            };\n            return {\n              ...activity,\n              icon: getIcon(activity.action)\n            };\n          });\n          setRecentActivity(activityWithIcons);\n        } else {\n          throw new Error(data.message || 'Failed to fetch dashboard data');\n        }\n      } catch (err) {\n        console.error('Error fetching dashboard data:', err);\n        setError('Failed to load dashboard data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // Format large numbers\n  const formatNumber = num => {\n    if (!num) return '$0';\n    if (num >= 1000000) {\n      return `$${(num / 1000000).toFixed(1)}M`;\n    } else if (num >= 1000) {\n      return `$${(num / 1000).toFixed(0)}K`;\n    }\n    return `$${Number(num).toLocaleString()}`;\n  };\n\n  // Custom colors for charts\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\n  const STATUS_COLORS = {\n    'Available': '#4caf50',\n    'Pending': '#ff9800',\n    'Sold': '#2196f3'\n  };\n  const PROPERTY_TYPE_COLORS = {\n    'Chalet': '#e63946',\n    'Apartment': '#457b9d',\n    'Villa': '#1d3557',\n    'Penthouse': '#ffb703'\n  };\n\n  // Truncate long text for chart labels - responsive\n  const truncateText = (text, maxLength = chartSettings.maxLabelLength) => {\n    if (!text) return 'Unknown';\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n  };\n\n  // Format year values for x-axis\n  const formatYear = year => {\n    if (!year || year === 'Unknown') return year;\n    return year;\n  };\n\n  // Custom tooltip for property age vs price scatter plot\n  const CustomScatterTooltip = ({\n    active,\n    payload\n  }) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scatter-tooltip\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-title\",\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-type\",\n          children: [\"Type: \", data.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-age\",\n          children: [\"Age: \", data.x, \" years\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tooltip-price\",\n          children: [\"Price: \", formatNumber(data.y)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"dashboard\",\n      className: \"dashboard-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: [/*#__PURE__*/_jsxDEV(FiBarChart2, {\n            className: \"section-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), \"Dashboard Overview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"section-subtitle\",\n          children: \"Key performance metrics and insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.users.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.users.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.users.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHome, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.properties.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.properties.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.properties.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiDollarSign, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(stats.revenue.total)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Property Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.revenue.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.revenue.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-icon\",\n              children: /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: stats.likes.total.toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-label\",\n              children: \"Total Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`,\n              children: [stats.likes.trend >= 0 ? '↑' : '↓', \" \", Math.abs(stats.likes.trend), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByCity.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.propertiesByCity,\n                  layout: \"vertical\",\n                  margin: chartSettings.margin,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\",\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: chartSettings.yAxisWidth,\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    },\n                    tickFormatter: truncateText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value} properties`, 'Count'],\n                    contentStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                    wrapperStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    fill: \"#457b9d\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No city distribution data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Properties by Year Built\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.propertiesByYear.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: chartData.propertiesByYear,\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"name\",\n                    tickFormatter: formatYear,\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    },\n                    label: {\n                      value: 'Year Built',\n                      position: 'insideBottomRight',\n                      offset: -5,\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    },\n                    label: {\n                      value: 'Number of Properties',\n                      angle: -90,\n                      position: 'insideLeft',\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: (value, name) => [value, 'Properties'],\n                    contentStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                    wrapperStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    stroke: \"#e63946\",\n                    activeDot: {\n                      r: 8\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No year built data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Most Active Property Owners\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.activePropertyOwners.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.activePropertyOwners,\n                  layout: \"vertical\",\n                  margin: chartSettings.margin,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\",\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: chartSettings.yAxisWidth,\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    },\n                    tickFormatter: truncateText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value} properties`, 'Count'],\n                    contentStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                    wrapperStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Properties\",\n                    fill: \"#1d3557\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No property owner data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"chart-title\",\n              children: \"Top Liked Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: chartData.topLikedProperties.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(BarChart, {\n                  data: chartData.topLikedProperties,\n                  layout: \"vertical\",\n                  margin: chartSettings.margin,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    type: \"number\",\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 455,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                    type: \"category\",\n                    dataKey: \"name\",\n                    width: chartSettings.yAxisWidth,\n                    tick: {\n                      fontSize: chartSettings.fontSize\n                    },\n                    tickFormatter: truncateText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    formatter: value => [`${value} likes`, 'Count'],\n                    contentStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {\n                    wrapperStyle: {\n                      fontSize: chartSettings.fontSize\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                    dataKey: \"value\",\n                    name: \"Likes\",\n                    fill: \"#e63946\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-data-message\",\n                children: \"No liked properties data available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DashboardOverview, \"Ief4rQh9gMmHo3nSv7H9OjJFw0o=\");\n_c = DashboardOverview;\nexport default DashboardOverview;\nvar _c;\n$RefreshReg$(_c, \"DashboardOverview\");","map":{"version":3,"names":["React","useState","useEffect","FiUsers","FiHome","FiDollarSign","FiActivity","FiBarChart2","FiPlus","FiHeart","FiMapPin","FiCalendar","FiPackage","FiRefreshCw","FiSend","FiClock","axios","BarChart","Bar","PieChart","Pie","Cell","LineChart","Line","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ZAxis","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardOverview","_s","stats","setStats","users","total","trend","properties","revenue","likes","chartData","setChartData","propertiesByType","propertiesByStatus","propertiesByCity","propertiesByYear","activePropertyOwners","topLikedProperties","propertyAgeVsPrice","recentActivity","setRecentActivity","loading","setLoading","error","setError","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","getChartSettings","margin","top","right","left","bottom","yAxisWidth","fontSize","maxLabelLength","chartSettings","fetchDashboardData","response","get","withCredentials","console","log","data","success","_data$propertiesByCit","_data$propertiesByYea","_data$activePropertyO","_data$topLikedPropert","_data$propertyAgeVsPr","typeData","propertyByType","map","item","name","value","count","statusData","propertyByStatus","cityData","yearData","ownersData","likedPropertiesData","ageVsPriceData","x","parseInt","age","y","parseFloat","price","title","type","property_type","activityWithIcons","activity","getIcon","action","includes","icon","Error","message","err","formatNumber","num","toFixed","Number","toLocaleString","COLORS","STATUS_COLORS","PROPERTY_TYPE_COLORS","truncateText","text","maxLength","length","substring","formatYear","year","CustomScatterTooltip","active","payload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","Math","abs","width","height","layout","strokeDasharray","tick","dataKey","tickFormatter","formatter","contentStyle","wrapperStyle","fill","label","position","offset","angle","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/DashboardOverview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  FiUsers, \r\n  FiHome, \r\n  FiDollarSign,\r\n  FiActivity,\r\n  FiBarChart2,\r\n  FiPlus,\r\n  FiHeart,\r\n  FiMapPin,\r\n  FiCalendar,\r\n  FiPackage,\r\n  FiRefreshCw,\r\n  FiSend,\r\n  FiClock\r\n} from 'react-icons/fi';\r\nimport axios from 'axios';\r\nimport { \r\n  BarChart, \r\n  Bar, \r\n  PieChart, \r\n  Pie, \r\n  Cell, \r\n  LineChart, \r\n  Line,\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  Legend, \r\n  ResponsiveContainer,\r\n  ZAxis \r\n} from 'recharts';\r\nimport '../styles/DashboardOverview.css';\r\n\r\nfunction DashboardOverview() {\r\n  // State for statistics\r\n  const [stats, setStats] = useState({\r\n    users: { total: 0, trend: 0 },\r\n    properties: { total: 0, trend: 0 },\r\n    revenue: { total: 0, trend: 0 },\r\n    likes: { total: 0, trend: 0 }\r\n  });\r\n  \r\n  // State for charts data\r\n  const [chartData, setChartData] = useState({\r\n    propertiesByType: [],\r\n    propertiesByStatus: [],\r\n    propertiesByCity: [],\r\n    propertiesByYear: [],\r\n    activePropertyOwners: [],\r\n    topLikedProperties: [],\r\n    propertyAgeVsPrice: []\r\n  });\r\n  \r\n  // State for recent activity\r\n  const [recentActivity, setRecentActivity] = useState([]);\r\n  \r\n  // State for loading and error status\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // State for responsive breakpoints\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  \r\n  // Handle window resize for responsive behavior\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  \r\n  // Get responsive margins and settings based on screen size\r\n  const getChartSettings = () => {\r\n    if (windowWidth <= 480) {\r\n      return {\r\n        margin: { top: 5, right: 15, left: 60, bottom: 5 },\r\n        yAxisWidth: 60,\r\n        fontSize: 10,\r\n        maxLabelLength: 8\r\n      };\r\n    } else if (windowWidth <= 768) {\r\n      return {\r\n        margin: { top: 5, right: 20, left: 70, bottom: 5 },\r\n        yAxisWidth: 70,\r\n        fontSize: 11,\r\n        maxLabelLength: 10\r\n      };\r\n    } else if (windowWidth <= 992) {\r\n      return {\r\n        margin: { top: 5, right: 25, left: 80, bottom: 5 },\r\n        yAxisWidth: 80,\r\n        fontSize: 12,\r\n        maxLabelLength: 12\r\n      };\r\n    } else {\r\n      return {\r\n        margin: { top: 5, right: 30, left: 90, bottom: 5 },\r\n        yAxisWidth: 90,\r\n        fontSize: 12,\r\n        maxLabelLength: 15\r\n      };\r\n    }\r\n  };\r\n  \r\n  const chartSettings = getChartSettings();\r\n  \r\n  // Fetch dashboard data\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        // Fetch real data from the backend\r\n        const response = await axios.get('http://localhost/real_estate_project/api/dashboard_stats.php', {\r\n          withCredentials: true\r\n        });\r\n        \r\n        console.log('API Response:', response.data); // Debug log\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.success) {\r\n          // Set stats from API response\r\n          setStats({\r\n            users: data.stats.users || { total: 0, trend: 0 },\r\n            properties: data.stats.properties || { total: 0, trend: 0 },\r\n            revenue: data.stats.revenue || { total: 0, trend: 0 },\r\n            likes: data.stats.likes || { total: 0, trend: 0 }\r\n          });\r\n          \r\n          // Format property type data for the pie chart\r\n          const typeData = data.propertyByType.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format property status data for the bar chart\r\n          const statusData = data.propertyByStatus.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          }));\r\n          \r\n          // Format properties by city data\r\n          const cityData = data.propertiesByCity?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format properties by year built data\r\n          const yearData = data.propertiesByYear?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format active property owners data\r\n          const ownersData = data.activePropertyOwners?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format top liked properties data\r\n          const likedPropertiesData = data.topLikedProperties?.map(item => ({\r\n            name: item.name || 'Unknown',\r\n            value: item.count || 0\r\n          })) || [];\r\n          \r\n          // Format property age vs price data (for scatter plot)\r\n          const ageVsPriceData = data.propertyAgeVsPrice?.map(item => ({\r\n            x: parseInt(item.age) || 0,\r\n            y: parseFloat(item.price) || 0,\r\n            name: item.title,\r\n            type: item.property_type\r\n          })) || [];\r\n          \r\n          setChartData({\r\n            propertiesByType: typeData,\r\n            propertiesByStatus: statusData,\r\n            propertiesByCity: cityData,\r\n            propertiesByYear: yearData,\r\n            activePropertyOwners: ownersData,\r\n            topLikedProperties: likedPropertiesData,\r\n            propertyAgeVsPrice: ageVsPriceData\r\n          });\r\n          \r\n          // Format recent activity data with icons\r\n          const activityWithIcons = data.recentActivity.map(activity => {\r\n            // Map action types to icons\r\n            const getIcon = (action) => {\r\n              if (action.includes('registered')) return FiUsers;\r\n              if (action.includes('listed')) return FiHome;\r\n              if (action.includes('liked')) return FiHeart;\r\n              if (action.includes('purchase') || action.includes('sold')) return FiDollarSign;\r\n              return FiActivity;\r\n            };\r\n            \r\n            return {\r\n              ...activity,\r\n              icon: getIcon(activity.action)\r\n            };\r\n          });\r\n          \r\n          setRecentActivity(activityWithIcons);\r\n        } else {\r\n          throw new Error(data.message || 'Failed to fetch dashboard data');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching dashboard data:', err);\r\n        setError('Failed to load dashboard data. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchDashboardData();\r\n  }, []);\r\n  \r\n  // Format large numbers\r\n  const formatNumber = (num) => {\r\n    if (!num) return '$0';\r\n    \r\n    if (num >= 1000000) {\r\n      return `$${(num / 1000000).toFixed(1)}M`;\r\n    } else if (num >= 1000) {\r\n      return `$${(num / 1000).toFixed(0)}K`;\r\n    }\r\n    return `$${Number(num).toLocaleString()}`;\r\n  };\r\n  \r\n  // Custom colors for charts\r\n  const COLORS = ['#e63946', '#457b9d', '#1d3557', '#f1faee', '#a8dadc', '#ffb703', '#fb8500', '#8ecae6', '#219ebc', '#023047'];\r\n  const STATUS_COLORS = {\r\n    'Available': '#4caf50',\r\n    'Pending': '#ff9800',\r\n    'Sold': '#2196f3'\r\n  };\r\n  \r\n  const PROPERTY_TYPE_COLORS = {\r\n    'Chalet': '#e63946', \r\n    'Apartment': '#457b9d', \r\n    'Villa': '#1d3557',\r\n    'Penthouse': '#ffb703'\r\n  };\r\n  \r\n  // Truncate long text for chart labels - responsive\r\n  const truncateText = (text, maxLength = chartSettings.maxLabelLength) => {\r\n    if (!text) return 'Unknown';\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n  \r\n  // Format year values for x-axis\r\n  const formatYear = (year) => {\r\n    if (!year || year === 'Unknown') return year;\r\n    return year;\r\n  };\r\n  \r\n  // Custom tooltip for property age vs price scatter plot\r\n  const CustomScatterTooltip = ({ active, payload }) => {\r\n    if (active && payload && payload.length) {\r\n      const data = payload[0].payload;\r\n      return (\r\n        <div className=\"scatter-tooltip\">\r\n          <p className=\"tooltip-title\">{data.name}</p>\r\n          <p className=\"tooltip-type\">Type: {data.type}</p>\r\n          <p className=\"tooltip-age\">Age: {data.x} years</p>\r\n          <p className=\"tooltip-price\">Price: {formatNumber(data.y)}</p>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <section id=\"dashboard\" className=\"dashboard-section\">\r\n        <div className=\"section-header\">\r\n          <h2 className=\"section-title\">\r\n            <FiBarChart2 className=\"section-icon\" />\r\n            Dashboard Overview\r\n          </h2>\r\n          <p className=\"section-subtitle\">Key performance metrics and insights</p>\r\n        </div>\r\n        \r\n        {loading ? (\r\n          <div className=\"loading-spinner\">Loading dashboard data...</div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">{error}</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"stats-grid\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiUsers /></div>\r\n                <div className=\"stat-value\">{stats.users.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Users</div>\r\n                <div className={`stat-trend ${stats.users.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.users.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.users.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHome /></div>\r\n                <div className=\"stat-value\">{stats.properties.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Properties</div>\r\n                <div className={`stat-trend ${stats.properties.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.properties.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.properties.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiDollarSign /></div>\r\n                <div className=\"stat-value\">{formatNumber(stats.revenue.total)}</div>\r\n                <div className=\"stat-label\">Total Property Value</div>\r\n                <div className={`stat-trend ${stats.revenue.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.revenue.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.revenue.trend)}%\r\n                </div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-icon\"><FiHeart /></div>\r\n                <div className=\"stat-value\">{stats.likes.total.toLocaleString()}</div>\r\n                <div className=\"stat-label\">Total Likes</div>\r\n                <div className={`stat-trend ${stats.likes.trend >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stats.likes.trend >= 0 ? '↑' : '↓'} {Math.abs(stats.likes.trend)}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {/* Charts Grid */}\r\n            <div className=\"charts-grid\">\r\n              {/* 1. Properties by City Distribution */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by City</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByCity.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.propertiesByCity}\r\n                        layout=\"vertical\"\r\n                        margin={chartSettings.margin}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" tick={{ fontSize: chartSettings.fontSize }} />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\" \r\n                          width={chartSettings.yAxisWidth}\r\n                          tick={{ fontSize: chartSettings.fontSize }}\r\n                          tickFormatter={truncateText}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value) => [`${value} properties`, 'Count']}\r\n                          contentStyle={{ fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <Legend wrapperStyle={{ fontSize: chartSettings.fontSize }} />\r\n                        <Bar dataKey=\"value\" name=\"Properties\" fill=\"#457b9d\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No city distribution data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 2. Properties by Year Built */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Properties by Year Built</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.propertiesByYear.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <LineChart\r\n                        data={chartData.propertiesByYear}\r\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis \r\n                          dataKey=\"name\" \r\n                          tickFormatter={formatYear}\r\n                          tick={{ fontSize: chartSettings.fontSize }}\r\n                          label={{ value: 'Year Built', position: 'insideBottomRight', offset: -5, fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <YAxis \r\n                          tick={{ fontSize: chartSettings.fontSize }}\r\n                          label={{ value: 'Number of Properties', angle: -90, position: 'insideLeft', fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value, name) => [value, 'Properties']}\r\n                          contentStyle={{ fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <Legend wrapperStyle={{ fontSize: chartSettings.fontSize }} />\r\n                        <Line \r\n                          type=\"monotone\" \r\n                          dataKey=\"value\" \r\n                          name=\"Properties\" \r\n                          stroke=\"#e63946\" \r\n                          activeDot={{ r: 8 }} \r\n                        />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No year built data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 3. Most Active Property Owners */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Most Active Property Owners</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.activePropertyOwners.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.activePropertyOwners}\r\n                        layout=\"vertical\"\r\n                        margin={chartSettings.margin}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" tick={{ fontSize: chartSettings.fontSize }} />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\"\r\n                          width={chartSettings.yAxisWidth}\r\n                          tick={{ fontSize: chartSettings.fontSize }}\r\n                          tickFormatter={truncateText}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value) => [`${value} properties`, 'Count']}\r\n                          contentStyle={{ fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <Legend wrapperStyle={{ fontSize: chartSettings.fontSize }} />\r\n                        <Bar dataKey=\"value\" name=\"Properties\" fill=\"#1d3557\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No property owner data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* 4. Top Liked Properties */}\r\n              <div className=\"chart-card\">\r\n                <h3 className=\"chart-title\">Top Liked Properties</h3>\r\n                <div className=\"chart-container\">\r\n                  {chartData.topLikedProperties.length > 0 ? (\r\n                    <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                      <BarChart \r\n                        data={chartData.topLikedProperties}\r\n                        layout=\"vertical\"\r\n                        margin={chartSettings.margin}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis type=\"number\" tick={{ fontSize: chartSettings.fontSize }} />\r\n                        <YAxis \r\n                          type=\"category\" \r\n                          dataKey=\"name\"\r\n                          width={chartSettings.yAxisWidth}\r\n                          tick={{ fontSize: chartSettings.fontSize }}\r\n                          tickFormatter={truncateText}\r\n                        />\r\n                        <Tooltip \r\n                          formatter={(value) => [`${value} likes`, 'Count']}\r\n                          contentStyle={{ fontSize: chartSettings.fontSize }}\r\n                        />\r\n                        <Legend wrapperStyle={{ fontSize: chartSettings.fontSize }} />\r\n                        <Bar dataKey=\"value\" name=\"Likes\" fill=\"#e63946\" />\r\n                      </BarChart>\r\n                    </ResponsiveContainer>\r\n                  ) : (\r\n                    <div className=\"no-data-message\">No liked properties data available</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardOverview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}