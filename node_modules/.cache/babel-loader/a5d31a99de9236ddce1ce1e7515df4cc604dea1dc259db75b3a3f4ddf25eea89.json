{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\PropertyListings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/PropertyListings.css';\nimport { Link } from 'react-router-dom';\nimport { FiHome } from 'react-icons/fi';\nimport Property from './Property';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyListings = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        setLoading(true);\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n\n        // Debug: Log the first property to see what fields are available\n        if (Array.isArray(data) && data.length > 0) {\n          console.log('Sample property data:', data[0]);\n        }\n        if (Array.isArray(data)) {\n          // Optimize: Only store essential data with proper field mapping\n          const optimizedData = data.map(property => ({\n            id: property.id,\n            title: property.title,\n            price: property.price,\n            main_image: property.main_image,\n            city: property.city,\n            bedrooms: property.bedrooms || property.bedroom_count || property.bed_count || property.beds,\n            bathrooms: property.bathrooms || property.bathroom_count || property.bath_count || property.baths,\n            status: property.status,\n            description: property.description,\n            // Try multiple possible field names for likes count\n            likes_count: parseInt(property.likes_count) || parseInt(property.total_likes) || parseInt(property.favorites_count) || parseInt(property.favorite_count) || parseInt(property.likes) || 0,\n            created_at: property.created_at || property.date_created || property.timestamp\n          }));\n\n          // If no likes data is available, sort by creation date (newest first)\n          // Otherwise, sort by likes count (most liked first)\n          const hasLikesData = optimizedData.some(property => property.likes_count > 0);\n          let sortedProperties;\n          if (hasLikesData) {\n            // Sort by likes count (descending) and get top 4 most liked chalets\n            sortedProperties = optimizedData.sort((a, b) => b.likes_count - a.likes_count).slice(0, 4);\n          } else {\n            // Fallback: Sort by creation date (newest first) or just take first 4\n            sortedProperties = optimizedData.sort((a, b) => {\n              // Try to sort by date if available\n              if (a.created_at && b.created_at) {\n                return new Date(b.created_at) - new Date(a.created_at);\n              }\n              // Otherwise sort by ID (assuming higher ID = newer)\n              return b.id - a.id;\n            }).slice(0, 4);\n          }\n          console.log('Processed properties:', sortedProperties);\n          setProperties(sortedProperties);\n        } else {\n          throw new Error('Invalid data format received from API');\n        }\n      } catch (err) {\n        console.error('Error fetching properties:', err);\n        setError(`Error loading properties: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading properties...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 21\n  }, this);\n  if (properties.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-results\",\n    children: \"No properties found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 39\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"property-listings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"listings-title\",\n        children: \"Featured Swiss Chalets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"listings-subtitle\",\n        children: \"Discover our carefully selected chalets that showcase the best of Swiss luxury and comfort.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"properties-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"properties-grid\",\n        children: properties.map(property => /*#__PURE__*/_jsxDEV(Property, {\n          property: property,\n          variant: \"default\"\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-all-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/properties\",\n        className: \"view-all-btn\",\n        children: [/*#__PURE__*/_jsxDEV(FiHome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), \" View All Chalets\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyListings, \"GHOAN7h9Mu6I/LUJAEtJBThJSeQ=\");\n_c = PropertyListings;\nexport default PropertyListings;\nvar _c;\n$RefreshReg$(_c, \"PropertyListings\");","map":{"version":3,"names":["React","useState","useEffect","Link","FiHome","Property","jsxDEV","_jsxDEV","PropertyListings","_s","properties","setProperties","loading","setLoading","error","setError","fetchProperties","apiUrl","response","fetch","method","mode","headers","ok","Error","status","data","json","Array","isArray","length","console","log","optimizedData","map","property","id","title","price","main_image","city","bedrooms","bedroom_count","bed_count","beds","bathrooms","bathroom_count","bath_count","baths","description","likes_count","parseInt","total_likes","favorites_count","favorite_count","likes","created_at","date_created","timestamp","hasLikesData","some","sortedProperties","sort","a","b","slice","Date","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","to","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/PropertyListings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/PropertyListings.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiHome } from 'react-icons/fi';\r\nimport Property from './Property';\r\n\r\nconst PropertyListings = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\r\n        \r\n        const response = await fetch(apiUrl, {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        // Debug: Log the first property to see what fields are available\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          console.log('Sample property data:', data[0]);\r\n        }\r\n        \r\n        if (Array.isArray(data)) {\r\n          // Optimize: Only store essential data with proper field mapping\r\n          const optimizedData = data.map(property => ({\r\n            id: property.id,\r\n            title: property.title,\r\n            price: property.price,\r\n            main_image: property.main_image,\r\n            city: property.city,\r\n            bedrooms: property.bedrooms || property.bedroom_count || property.bed_count || property.beds,\r\n            bathrooms: property.bathrooms || property.bathroom_count || property.bath_count || property.baths,\r\n            status: property.status,\r\n            description: property.description,\r\n            // Try multiple possible field names for likes count\r\n            likes_count: parseInt(property.likes_count) || \r\n                        parseInt(property.total_likes) || \r\n                        parseInt(property.favorites_count) || \r\n                        parseInt(property.favorite_count) ||\r\n                        parseInt(property.likes) ||\r\n                        0,\r\n            created_at: property.created_at || property.date_created || property.timestamp\r\n          }));\r\n          \r\n          // If no likes data is available, sort by creation date (newest first)\r\n          // Otherwise, sort by likes count (most liked first)\r\n          const hasLikesData = optimizedData.some(property => property.likes_count > 0);\r\n          \r\n          let sortedProperties;\r\n          if (hasLikesData) {\r\n            // Sort by likes count (descending) and get top 4 most liked chalets\r\n            sortedProperties = optimizedData\r\n              .sort((a, b) => b.likes_count - a.likes_count)\r\n              .slice(0, 4);\r\n          } else {\r\n            // Fallback: Sort by creation date (newest first) or just take first 4\r\n            sortedProperties = optimizedData\r\n              .sort((a, b) => {\r\n                // Try to sort by date if available\r\n                if (a.created_at && b.created_at) {\r\n                  return new Date(b.created_at) - new Date(a.created_at);\r\n                }\r\n                // Otherwise sort by ID (assuming higher ID = newer)\r\n                return b.id - a.id;\r\n              })\r\n              .slice(0, 4);\r\n          }\r\n          \r\n          console.log('Processed properties:', sortedProperties);\r\n          setProperties(sortedProperties);\r\n        } else {\r\n          throw new Error('Invalid data format received from API');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching properties:', err);\r\n        setError(`Error loading properties: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"loading\">Loading properties...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (properties.length === 0) return <div className=\"no-results\">No properties found.</div>;\r\n\r\n  return (\r\n    <section className=\"property-listings\">\r\n      <div className=\"listings-header\">\r\n        <h2 className=\"listings-title\">Featured Swiss Chalets</h2>\r\n        <p className=\"listings-subtitle\">\r\n          Discover our carefully selected chalets that showcase the best of Swiss luxury and comfort.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"properties-container\">\r\n        <div className=\"properties-grid\">\r\n          {properties.map(property => (\r\n            <Property key={property.id} property={property} variant=\"default\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"view-all-container\">\r\n        <Link to=\"/properties\" className=\"view-all-btn\">\r\n          <FiHome /> View All Chalets\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PropertyListings;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}