{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\pages\\\\AllPropertiesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Property from '../components/Property';\nimport '../styles/AllPropertypage.css';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport SearchFilter from '../components/SearchFilter';\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPropertiesPage = () => {\n  _s();\n  const location = useLocation();\n  const [properties, setProperties] = useState([]);\n  const [filteredProperties, setFilteredProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [propertiesPerPage] = useState(8);\n\n  // Use callback for updateFilteredProperties to avoid recreation on every render\n  const updateFilteredProperties = useCallback(newFiltered => {\n    setFilteredProperties(newFiltered);\n    setCurrentPage(1); // Reset to first page whenever filters are applied\n  }, []);\n  useEffect(() => {\n    // Get search term from URL parameters\n    const queryParams = new URLSearchParams(location.search);\n    const searchParam = queryParams.get('search');\n    if (searchParam) {\n      setInitialSearchTerm(searchParam);\n    }\n  }, [location.search]);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        setLoading(true);\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          mode: 'cors',\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setProperties(data);\n\n          // If there's an initial search term, filter the properties accordingly\n          if (initialSearchTerm) {\n            const searchLower = initialSearchTerm.toLowerCase();\n            const filtered = data.filter(property => {\n              var _property$title, _property$location, _property$description;\n              return ((_property$title = property.title) === null || _property$title === void 0 ? void 0 : _property$title.toLowerCase().includes(searchLower)) || ((_property$location = property.location) === null || _property$location === void 0 ? void 0 : _property$location.toLowerCase().includes(searchLower)) || ((_property$description = property.description) === null || _property$description === void 0 ? void 0 : _property$description.toLowerCase().includes(searchLower));\n            });\n            setFilteredProperties(filtered);\n          } else {\n            setFilteredProperties(data);\n          }\n        } else {\n          throw new Error('Invalid data format received from API');\n        }\n      } catch (err) {\n        console.error('Error fetching properties:', err);\n        setError(`Error loading properties: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, [initialSearchTerm]);\n\n  // Calculate total pages to handle edge cases\n  const totalPages = Math.ceil(filteredProperties.length / propertiesPerPage);\n\n  // Ensure currentPage is valid whenever filteredProperties changes\n  useEffect(() => {\n    if (currentPage > Math.max(1, totalPages) && totalPages > 0) {\n      setCurrentPage(Math.max(1, totalPages));\n    }\n  }, [filteredProperties, currentPage, totalPages]);\n\n  // Calculate current properties to display - outside the render to avoid recalculation\n  const indexOfLastProperty = currentPage * propertiesPerPage;\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n  const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\n\n  // Page navigation handlers with explicit function calls\n  const handlePageClick = pageNumber => {\n    console.log(`Clicked page ${pageNumber}`);\n    if (pageNumber >= 1 && pageNumber <= totalPages && pageNumber !== currentPage) {\n      setCurrentPage(pageNumber);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleNextPage = () => {\n    console.log('Next page clicked');\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handlePrevPage = () => {\n    console.log('Previous page clicked');\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleFirstPage = () => {\n    console.log('First page clicked');\n    if (currentPage !== 1) {\n      setCurrentPage(1);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleLastPage = () => {\n    console.log('Last page clicked');\n    if (currentPage !== totalPages) {\n      setCurrentPage(totalPages);\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading Chalets...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-properties-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-listings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listings-header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchFilter, {\n          properties: properties,\n          setFilteredProperties: updateFilteredProperties,\n          initialSearchTerm: initialSearchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"properties-count\",\n          children: [filteredProperties.length, \" \", filteredProperties.length === 1 ? 'property' : 'properties', \" found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), filteredProperties.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No properties match your search criteria. Try adjusting your filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"properties-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"properties-slider\",\n            children: currentProperties.map(property => /*#__PURE__*/_jsxDEV(Property, {\n              property: property,\n              variant: \"grid\"\n            }, property.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn first-page\",\n            onClick: handleFirstPage,\n            disabled: currentPage === 1,\n            title: \"First Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn prev-page\",\n            onClick: handlePrevPage,\n            disabled: currentPage === 1,\n            title: \"Previous Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-pages\",\n            children: (() => {\n              let pageNumbers = [];\n              const maxVisiblePages = 5;\n              if (totalPages <= maxVisiblePages) {\n                // Show all pages if total is less than max visible\n                pageNumbers = Array.from({\n                  length: totalPages\n                }, (_, i) => i + 1);\n              } else {\n                // Show a sliding window of pages\n                let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n                let endPage = startPage + maxVisiblePages - 1;\n\n                // Adjust if end page exceeds total pages\n                if (endPage > totalPages) {\n                  endPage = totalPages;\n                  startPage = Math.max(1, endPage - maxVisiblePages + 1);\n                }\n                pageNumbers = Array.from({\n                  length: endPage - startPage + 1\n                }, (_, i) => startPage + i);\n              }\n              return pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handlePageClick(number),\n                className: `page-btn page-number ${currentPage === number ? 'active' : ''}`,\n                children: number\n              }, `page-btn-${number}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this));\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn next-page\",\n            onClick: handleNextPage,\n            disabled: currentPage === totalPages || totalPages === 0,\n            title: \"Next Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-btn last-page\",\n            onClick: handleLastPage,\n            disabled: currentPage === totalPages || totalPages === 0,\n            title: \"Last Page\",\n            children: /*#__PURE__*/_jsxDEV(FiChevronsRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-info\",\n          children: [\"Showing \", indexOfFirstProperty + 1, \"-\", Math.min(indexOfLastProperty, filteredProperties.length), \" of \", filteredProperties.length, \" properties\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AllPropertiesPage, \"786fp5Z0ZQluAh2mZZSi+HW8AuE=\", false, function () {\n  return [useLocation];\n});\n_c = AllPropertiesPage;\nexport default AllPropertiesPage;\nvar _c;\n$RefreshReg$(_c, \"AllPropertiesPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useLocation","Property","Navbar","Footer","SearchFilter","FiChevronLeft","FiChevronRight","FiChevronsLeft","FiChevronsRight","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPropertiesPage","_s","location","properties","setProperties","filteredProperties","setFilteredProperties","loading","setLoading","error","setError","initialSearchTerm","setInitialSearchTerm","currentPage","setCurrentPage","propertiesPerPage","updateFilteredProperties","newFiltered","queryParams","URLSearchParams","search","searchParam","get","fetchProperties","apiUrl","response","fetch","method","mode","headers","ok","Error","status","data","json","Array","isArray","searchLower","toLowerCase","filtered","filter","property","_property$title","_property$location","_property$description","title","includes","description","err","console","message","totalPages","Math","ceil","length","max","indexOfLastProperty","indexOfFirstProperty","currentProperties","slice","handlePageClick","pageNumber","log","window","scrollTo","top","behavior","handleNextPage","handlePrevPage","handleFirstPage","handleLastPage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","variant","id","onClick","disabled","pageNumbers","maxVisiblePages","from","_","i","startPage","floor","endPage","number","min","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/pages/AllPropertiesPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Property from '../components/Property';\r\nimport '../styles/AllPropertypage.css';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\nimport SearchFilter from '../components/SearchFilter';\r\nimport { FiChevronLeft, FiChevronRight, FiChevronsLeft, FiChevronsRight } from 'react-icons/fi';\r\n\r\nconst AllPropertiesPage = () => {\r\n  const location = useLocation();\r\n  const [properties, setProperties] = useState([]);\r\n  const [filteredProperties, setFilteredProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [initialSearchTerm, setInitialSearchTerm] = useState('');\r\n\r\n  // Pagination states\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [propertiesPerPage] = useState(8);\r\n\r\n  // Use callback for updateFilteredProperties to avoid recreation on every render\r\n  const updateFilteredProperties = useCallback((newFiltered) => {\r\n    setFilteredProperties(newFiltered);\r\n    setCurrentPage(1); // Reset to first page whenever filters are applied\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Get search term from URL parameters\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const searchParam = queryParams.get('search');\r\n    if (searchParam) {\r\n      setInitialSearchTerm(searchParam);\r\n    }\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const apiUrl = 'http://localhost/real_estate_project/api/get_all_chalets.php';\r\n        \r\n        const response = await fetch(apiUrl, {\r\n          method: 'GET',\r\n          mode: 'cors',\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (Array.isArray(data)) {\r\n          setProperties(data);\r\n          \r\n          // If there's an initial search term, filter the properties accordingly\r\n          if (initialSearchTerm) {\r\n            const searchLower = initialSearchTerm.toLowerCase();\r\n            const filtered = data.filter(property => \r\n              property.title?.toLowerCase().includes(searchLower) || \r\n              property.location?.toLowerCase().includes(searchLower) ||\r\n              property.description?.toLowerCase().includes(searchLower)\r\n            );\r\n            setFilteredProperties(filtered);\r\n          } else {\r\n            setFilteredProperties(data);\r\n          }\r\n        } else {\r\n          throw new Error('Invalid data format received from API');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching properties:', err);\r\n        setError(`Error loading properties: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, [initialSearchTerm]);\r\n\r\n  // Calculate total pages to handle edge cases\r\n  const totalPages = Math.ceil(filteredProperties.length / propertiesPerPage);\r\n  \r\n  // Ensure currentPage is valid whenever filteredProperties changes\r\n  useEffect(() => {\r\n    if (currentPage > Math.max(1, totalPages) && totalPages > 0) {\r\n      setCurrentPage(Math.max(1, totalPages));\r\n    }\r\n  }, [filteredProperties, currentPage, totalPages]);\r\n\r\n  // Calculate current properties to display - outside the render to avoid recalculation\r\n  const indexOfLastProperty = currentPage * propertiesPerPage;\r\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n  const currentProperties = filteredProperties.slice(indexOfFirstProperty, indexOfLastProperty);\r\n\r\n  // Page navigation handlers with explicit function calls\r\n  const handlePageClick = (pageNumber) => {\r\n    console.log(`Clicked page ${pageNumber}`);\r\n    if (pageNumber >= 1 && pageNumber <= totalPages && pageNumber !== currentPage) {\r\n      setCurrentPage(pageNumber);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    console.log('Next page clicked');\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    console.log('Previous page clicked');\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handleFirstPage = () => {\r\n    console.log('First page clicked');\r\n    if (currentPage !== 1) {\r\n      setCurrentPage(1);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handleLastPage = () => {\r\n    console.log('Last page clicked');\r\n    if (currentPage !== totalPages) {\r\n      setCurrentPage(totalPages);\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  if (loading) return <div className=\"loading\">Loading Chalets...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"all-properties-page\">\r\n      <Navbar />\r\n      \r\n      <div className=\"property-listings\">\r\n        <div className=\"listings-header\">\r\n          <SearchFilter \r\n            properties={properties} \r\n            setFilteredProperties={updateFilteredProperties}\r\n            initialSearchTerm={initialSearchTerm}\r\n          />\r\n          \r\n          <p className=\"properties-count\">\r\n            {filteredProperties.length} {filteredProperties.length === 1 ? 'property' : 'properties'} found\r\n          </p>\r\n        </div>\r\n\r\n        {filteredProperties.length === 0 ? (\r\n          <div className=\"no-results\">No properties match your search criteria. Try adjusting your filters.</div>\r\n        ) : (\r\n          <>\r\n            <div className=\"properties-container\">\r\n              <div className=\"properties-slider\">\r\n                {currentProperties.map(property => (\r\n                  <Property \r\n                    key={property.id} \r\n                    property={property}\r\n                    variant=\"grid\" \r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pagination Controls */}\r\n            {totalPages > 1 && (\r\n              <div className=\"pagination-controls\">\r\n                <button \r\n                  className=\"page-btn first-page\"\r\n                  onClick={handleFirstPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"First Page\"\r\n                >\r\n                  <FiChevronsLeft />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn prev-page\"\r\n                  onClick={handlePrevPage}\r\n                  disabled={currentPage === 1}\r\n                  title=\"Previous Page\"\r\n                >\r\n                  <FiChevronLeft />\r\n                </button>\r\n                \r\n                <div className=\"pagination-pages\">\r\n                  {/* Generate page numbers - improved algorithm */}\r\n                  {(() => {\r\n                    let pageNumbers = [];\r\n                    const maxVisiblePages = 5;\r\n                    \r\n                    if (totalPages <= maxVisiblePages) {\r\n                      // Show all pages if total is less than max visible\r\n                      pageNumbers = Array.from({ length: totalPages }, (_, i) => i + 1);\r\n                    } else {\r\n                      // Show a sliding window of pages\r\n                      let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n                      let endPage = startPage + maxVisiblePages - 1;\r\n                      \r\n                      // Adjust if end page exceeds total pages\r\n                      if (endPage > totalPages) {\r\n                        endPage = totalPages;\r\n                        startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n                      }\r\n                      \r\n                      pageNumbers = Array.from(\r\n                        { length: endPage - startPage + 1 }, \r\n                        (_, i) => startPage + i\r\n                      );\r\n                    }\r\n                    \r\n                    return pageNumbers.map(number => (\r\n                      <button\r\n                        key={`page-btn-${number}`}\r\n                        onClick={() => handlePageClick(number)}\r\n                        className={`page-btn page-number ${currentPage === number ? 'active' : ''}`}\r\n                      >\r\n                        {number}\r\n                      </button>\r\n                    ));\r\n                  })()}\r\n                </div>\r\n                \r\n                <button \r\n                  className=\"page-btn next-page\"\r\n                  onClick={handleNextPage}\r\n                  disabled={currentPage === totalPages || totalPages === 0}\r\n                  title=\"Next Page\"\r\n                >\r\n                  <FiChevronRight />\r\n                </button>\r\n                \r\n                <button \r\n                  className=\"page-btn last-page\"\r\n                  onClick={handleLastPage}\r\n                  disabled={currentPage === totalPages || totalPages === 0}\r\n                  title=\"Last Page\"\r\n                >\r\n                  <FiChevronsRight />\r\n                </button>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Display which properties are being shown */}\r\n            <div className=\"pagination-info\">\r\n              Showing {indexOfFirstProperty + 1}-{Math.min(indexOfLastProperty, filteredProperties.length)} of {filteredProperties.length} properties\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPropertiesPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}