{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\Property.js\",\n  _s = $RefreshSig$();\n// Property.jsx - Modified with authentication check\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FiMapPin, FiHome, FiDroplet, FiHeart } from 'react-icons/fi';\nimport { useAuth } from '../contexts/AuthContext'; // Import useAuth\nimport '../styles/Property.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Property = ({\n  property,\n  variant = \"default\",\n  onFavoriteChange\n}) => {\n  _s();\n  // State to track if the property is liked\n  const [isLiked, setIsLiked] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showLoginPopup, setShowLoginPopup] = useState(false);\n\n  // Get authentication context\n  const {\n    isAuthenticated,\n    user\n  } = useAuth();\n\n  // Make sure property exists, otherwise use an empty object\n  const propertyData = property || {};\n  const {\n    id,\n    title,\n    price,\n    main_image,\n    city,\n    bedrooms,\n    bathrooms,\n    bedroom_count,\n    bathroom_count,\n    bed_count,\n    bath_count,\n    beds,\n    baths,\n    status\n  } = propertyData;\n\n  // Create a slug from the title for the URL without appending the ID\n  const createSlug = title => {\n    if (!title) return '';\n    // Convert to lowercase, replace spaces with hyphens, remove special characters\n    return title.toLowerCase().replace(/[^\\w\\s-]/g, '').replace(/\\s+/g, '-');\n  };\n\n  // Choose the first available bedroom/bathroom values\n  const bedroomValue = bedrooms || bedroom_count || bed_count || beds || 'N/A';\n  const bathroomValue = bathrooms || bathroom_count || bath_count || baths || 'N/A';\n\n  // Format price with commas\n  const formattedPrice = typeof price === 'number' ? price.toLocaleString() : Number(price) ? Number(price).toLocaleString() : 'Price on request';\n\n  // Helper function to format image URL\n  const formatImageUrl = imagePath => {\n    if (!imagePath) return \"/placeholder.jpg\";\n\n    // If it's already a full URL, return it as is\n    if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\n      return imagePath;\n    }\n\n    // If it's a relative path, build the full URL\n    // Remove any leading slash to avoid double slashes\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\n    return `http://localhost/real_estate_project/${cleanPath}`;\n  };\n\n  // Get proper image URL with helper function\n  const imageSrc = formatImageUrl(main_image);\n\n  // Get user's favorites from localStorage\n  const getFavoritesFromStorage = () => {\n    try {\n      const favorites = localStorage.getItem('favorites');\n      return favorites ? JSON.parse(favorites) : [];\n    } catch (e) {\n      console.error('Error parsing favorites from localStorage:', e);\n      return [];\n    }\n  };\n\n  // Check if the property is in favorites\n  const checkIfLiked = () => {\n    if (!id || !isAuthenticated) return false;\n    const favorites = getFavoritesFromStorage();\n    return Array.isArray(favorites) && favorites.includes(id.toString());\n  };\n\n  // Check for liked status on mount and when localStorage changes\n  useEffect(() => {\n    setIsLiked(checkIfLiked());\n\n    // Listen for storage events (when other components update localStorage)\n    const handleStorageChange = () => {\n      setIsLiked(checkIfLiked());\n    };\n    window.addEventListener('storage', handleStorageChange);\n\n    // Listen for custom events when favorites change in table\n    const handleFavoritesChange = e => {\n      if (e.detail && e.detail.chaletId === id) {\n        setIsLiked(e.detail.isLiked);\n      }\n    };\n    window.addEventListener('favoritesChanged', handleFavoritesChange);\n\n    // Check server status periodically (only if authenticated)\n    const checkServerStatus = () => {\n      if (!id || !isAuthenticated) return; // Skip if no ID or not authenticated\n\n      fetch('http://localhost/real_estate_project/api/check_is_favorite.php', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          chaletId: id\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          // If server state is different from our local state, update local state\n          if (data.isFavorite !== isLiked) {\n            setIsLiked(data.isFavorite);\n\n            // Also update localStorage\n            const favorites = getFavoritesFromStorage();\n            if (data.isFavorite && !favorites.includes(id.toString())) {\n              favorites.push(id.toString());\n              localStorage.setItem('favorites', JSON.stringify(favorites));\n            } else if (!data.isFavorite && favorites.includes(id.toString())) {\n              const updatedFavorites = favorites.filter(favId => favId !== id.toString());\n              localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n            }\n          }\n        }\n      }).catch(err => {\n        console.log('Failed to check favorite status:', err);\n      });\n    };\n\n    // Check on mount (only if authenticated)\n    if (isAuthenticated) {\n      checkServerStatus();\n    }\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('favoritesChanged', handleFavoritesChange);\n    };\n  }, [id, isLiked, isAuthenticated]);\n\n  // Handle like button click\n  const handleLikeClick = e => {\n    e.preventDefault(); // Prevent navigation to the chalet detail page\n    e.stopPropagation(); // Stop event propagation\n\n    if (!id) return;\n\n    // CHECK AUTHENTICATION FIRST\n    if (!isAuthenticated || !user) {\n      console.log('User not authenticated, showing login popup');\n      setShowLoginPopup(true);\n      return; // Don't proceed with like action\n    }\n    setIsLoading(true);\n\n    // Toggle like state\n    const newLikedState = !isLiked;\n    setIsLiked(newLikedState);\n    console.log('Like button clicked for chalet ID:', id, 'by user:', user.email);\n\n    // Update localStorage for immediate feedback\n    let favorites = getFavoritesFromStorage();\n    if (newLikedState) {\n      // Add to favorites if not already there\n      if (!favorites.includes(id.toString())) {\n        favorites.push(id.toString());\n      }\n    } else {\n      // Remove from favorites\n      favorites = favorites.filter(favId => favId !== id.toString());\n    }\n\n    // Save updated favorites to localStorage\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n\n    // Dispatch events to notify other components\n    window.dispatchEvent(new Event('storage'));\n    window.dispatchEvent(new CustomEvent('favoritesChanged', {\n      detail: {\n        chaletId: id.toString(),\n        isLiked: newLikedState\n      }\n    }));\n\n    // Also try to update server\n    const apiUrl = newLikedState ? 'http://localhost/real_estate_project/api/add_to_favorites.php' : 'http://localhost/real_estate_project/api/remove_from_favorites.php';\n    fetch(apiUrl, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        chaletId: id\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(newLikedState ? 'Add to favorites response:' : 'Remove from favorites response:', data);\n      if (!data.success) {\n        if (data.message === 'User not logged in') {\n          // Session expired, show login popup\n          setShowLoginPopup(true);\n          // Revert the UI changes\n          setIsLiked(!newLikedState);\n          const revertFavorites = getFavoritesFromStorage();\n          if (newLikedState) {\n            const updatedFavorites = revertFavorites.filter(favId => favId !== id.toString());\n            localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n          } else {\n            if (!revertFavorites.includes(id.toString())) {\n              revertFavorites.push(id.toString());\n              localStorage.setItem('favorites', JSON.stringify(revertFavorites));\n            }\n          }\n        } else {\n          console.warn('Server update failed, but localStorage was updated');\n        }\n      }\n    }).catch(error => {\n      console.warn('Server update failed, but localStorage was updated:', error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n\n    // Notify parent component if callback provided\n    if (onFavoriteChange) {\n      onFavoriteChange(id, newLikedState);\n    }\n  };\n\n  // Close login popup\n  const closeLoginPopup = () => {\n    setShowLoginPopup(false);\n  };\n\n  // Handle login redirect\n  const handleLoginRedirect = () => {\n    window.location.href = '/login';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/chalet/${createSlug(title)}`\n      // Store the property ID as state to be accessible in the detail page\n      ,\n      state: {\n        propertyId: id\n      },\n      className: `property-card ${variant}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageSrc,\n          alt: title || \"Swiss Chalet\",\n          className: \"property-image\",\n          loading: \"lazy\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = \"/placeholder.jpg\";\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"property-badge\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `like-button ${isLiked ? 'liked' : ''} ${isLoading ? 'loading' : ''} ${!isAuthenticated ? 'not-authenticated' : ''}`,\n          onClick: handleLikeClick,\n          children: /*#__PURE__*/_jsxDEV(FiHeart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"property-title\",\n          children: title || \"Beautiful Swiss Chalet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"property-price\",\n          children: [formattedPrice, \" CHF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), city && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"property-location\",\n          children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n            className: \"property-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), \" \", city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"property-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"property-feature\",\n            children: [/*#__PURE__*/_jsxDEV(FiHome, {\n              className: \"property-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), \" \", bedroomValue, \" beds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"property-feature\",\n            children: [/*#__PURE__*/_jsxDEV(FiDroplet, {\n              className: \"property-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), \" \", bathroomValue, \" baths\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), showLoginPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-popup-overlay\",\n      onClick: closeLoginPopup,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-popup\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-popup-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login Required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-popup\",\n            onClick: closeLoginPopup,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-popup-content\",\n          children: [/*#__PURE__*/_jsxDEV(FiHeart, {\n            className: \"popup-heart-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You need to be logged in to add chalets to your favorites.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-popup-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"login-btn\",\n              onClick: handleLoginRedirect,\n              children: \"Login Now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: closeLoginPopup,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Property, \"6ok+aKSVR2/wHhNmxL1pe7esqM4=\", false, function () {\n  return [useAuth];\n});\n_c = Property;\nexport default Property;\nvar _c;\n$RefreshReg$(_c, \"Property\");","map":{"version":3,"names":["React","useState","useEffect","Link","FiMapPin","FiHome","FiDroplet","FiHeart","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Property","property","variant","onFavoriteChange","_s","isLiked","setIsLiked","isLoading","setIsLoading","showLoginPopup","setShowLoginPopup","isAuthenticated","user","propertyData","id","title","price","main_image","city","bedrooms","bathrooms","bedroom_count","bathroom_count","bed_count","bath_count","beds","baths","status","createSlug","toLowerCase","replace","bedroomValue","bathroomValue","formattedPrice","toLocaleString","Number","formatImageUrl","imagePath","startsWith","cleanPath","substring","imageSrc","getFavoritesFromStorage","favorites","localStorage","getItem","JSON","parse","e","console","error","checkIfLiked","Array","isArray","includes","toString","handleStorageChange","window","addEventListener","handleFavoritesChange","detail","chaletId","checkServerStatus","fetch","method","credentials","headers","body","stringify","then","res","json","data","success","isFavorite","push","setItem","updatedFavorites","filter","favId","catch","err","log","removeEventListener","handleLikeClick","preventDefault","stopPropagation","newLikedState","email","dispatchEvent","Event","CustomEvent","apiUrl","message","revertFavorites","warn","finally","closeLoginPopup","handleLoginRedirect","location","href","children","to","state","propertyId","className","src","alt","loading","onError","target","onerror","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/Property.js"],"sourcesContent":["// Property.jsx - Modified with authentication check\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FiMapPin, FiHome, FiDroplet, FiHeart } from 'react-icons/fi';\r\nimport { useAuth } from '../contexts/AuthContext'; // Import useAuth\r\nimport '../styles/Property.css';\r\n\r\nconst Property = ({ property, variant = \"default\", onFavoriteChange }) => {\r\n  // State to track if the property is liked\r\n  const [isLiked, setIsLiked] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showLoginPopup, setShowLoginPopup] = useState(false);\r\n  \r\n  // Get authentication context\r\n  const { isAuthenticated, user } = useAuth();\r\n  \r\n  // Make sure property exists, otherwise use an empty object\r\n  const propertyData = property || {};\r\n  \r\n  const {\r\n    id,\r\n    title,\r\n    price,\r\n    main_image,\r\n    city,\r\n    bedrooms,\r\n    bathrooms,\r\n    bedroom_count,\r\n    bathroom_count,\r\n    bed_count,\r\n    bath_count,\r\n    beds,\r\n    baths,\r\n    status\r\n  } = propertyData;\r\n\r\n  // Create a slug from the title for the URL without appending the ID\r\n  const createSlug = (title) => {\r\n    if (!title) return '';\r\n    // Convert to lowercase, replace spaces with hyphens, remove special characters\r\n    return title.toLowerCase()\r\n      .replace(/[^\\w\\s-]/g, '')\r\n      .replace(/\\s+/g, '-');\r\n  };\r\n\r\n  // Choose the first available bedroom/bathroom values\r\n  const bedroomValue = bedrooms || bedroom_count || bed_count || beds || 'N/A';\r\n  const bathroomValue = bathrooms || bathroom_count || bath_count || baths || 'N/A';\r\n\r\n  // Format price with commas\r\n  const formattedPrice = typeof price === 'number' \r\n    ? price.toLocaleString() \r\n    : Number(price) ? Number(price).toLocaleString() : 'Price on request';\r\n\r\n  // Helper function to format image URL\r\n  const formatImageUrl = (imagePath) => {\r\n    if (!imagePath) return \"/placeholder.jpg\";\r\n    \r\n    // If it's already a full URL, return it as is\r\n    if (imagePath.startsWith('http://') || imagePath.startsWith('https://')) {\r\n      return imagePath;\r\n    }\r\n    \r\n    // If it's a relative path, build the full URL\r\n    // Remove any leading slash to avoid double slashes\r\n    const cleanPath = imagePath.startsWith('/') ? imagePath.substring(1) : imagePath;\r\n    return `http://localhost/real_estate_project/${cleanPath}`;\r\n  };\r\n\r\n  // Get proper image URL with helper function\r\n  const imageSrc = formatImageUrl(main_image);\r\n\r\n  // Get user's favorites from localStorage\r\n  const getFavoritesFromStorage = () => {\r\n    try {\r\n      const favorites = localStorage.getItem('favorites');\r\n      return favorites ? JSON.parse(favorites) : [];\r\n    } catch (e) {\r\n      console.error('Error parsing favorites from localStorage:', e);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Check if the property is in favorites\r\n  const checkIfLiked = () => {\r\n    if (!id || !isAuthenticated) return false;\r\n    \r\n    const favorites = getFavoritesFromStorage();\r\n    return Array.isArray(favorites) && favorites.includes(id.toString());\r\n  };\r\n\r\n  // Check for liked status on mount and when localStorage changes\r\n  useEffect(() => {\r\n    setIsLiked(checkIfLiked());\r\n    \r\n    // Listen for storage events (when other components update localStorage)\r\n    const handleStorageChange = () => {\r\n      setIsLiked(checkIfLiked());\r\n    };\r\n    \r\n    window.addEventListener('storage', handleStorageChange);\r\n    \r\n    // Listen for custom events when favorites change in table\r\n    const handleFavoritesChange = (e) => {\r\n      if (e.detail && e.detail.chaletId === id) {\r\n        setIsLiked(e.detail.isLiked);\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('favoritesChanged', handleFavoritesChange);\r\n    \r\n    // Check server status periodically (only if authenticated)\r\n    const checkServerStatus = () => {\r\n      if (!id || !isAuthenticated) return; // Skip if no ID or not authenticated\r\n      \r\n      fetch('http://localhost/real_estate_project/api/check_is_favorite.php', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ chaletId: id }),\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (data.success) {\r\n            // If server state is different from our local state, update local state\r\n            if (data.isFavorite !== isLiked) {\r\n              setIsLiked(data.isFavorite);\r\n              \r\n              // Also update localStorage\r\n              const favorites = getFavoritesFromStorage();\r\n              if (data.isFavorite && !favorites.includes(id.toString())) {\r\n                favorites.push(id.toString());\r\n                localStorage.setItem('favorites', JSON.stringify(favorites));\r\n              } else if (!data.isFavorite && favorites.includes(id.toString())) {\r\n                const updatedFavorites = favorites.filter(favId => favId !== id.toString());\r\n                localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log('Failed to check favorite status:', err);\r\n        });\r\n    };\r\n    \r\n    // Check on mount (only if authenticated)\r\n    if (isAuthenticated) {\r\n      checkServerStatus();\r\n    }\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n      window.removeEventListener('favoritesChanged', handleFavoritesChange);\r\n    };\r\n  }, [id, isLiked, isAuthenticated]);\r\n  \r\n  // Handle like button click\r\n  const handleLikeClick = (e) => {\r\n    e.preventDefault(); // Prevent navigation to the chalet detail page\r\n    e.stopPropagation(); // Stop event propagation\r\n    \r\n    if (!id) return;\r\n    \r\n    // CHECK AUTHENTICATION FIRST\r\n    if (!isAuthenticated || !user) {\r\n      console.log('User not authenticated, showing login popup');\r\n      setShowLoginPopup(true);\r\n      return; // Don't proceed with like action\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    \r\n    // Toggle like state\r\n    const newLikedState = !isLiked;\r\n    setIsLiked(newLikedState);\r\n    \r\n    console.log('Like button clicked for chalet ID:', id, 'by user:', user.email);\r\n    \r\n    // Update localStorage for immediate feedback\r\n    let favorites = getFavoritesFromStorage();\r\n    \r\n    if (newLikedState) {\r\n      // Add to favorites if not already there\r\n      if (!favorites.includes(id.toString())) {\r\n        favorites.push(id.toString());\r\n      }\r\n    } else {\r\n      // Remove from favorites\r\n      favorites = favorites.filter(favId => favId !== id.toString());\r\n    }\r\n    \r\n    // Save updated favorites to localStorage\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    \r\n    // Dispatch events to notify other components\r\n    window.dispatchEvent(new Event('storage'));\r\n    window.dispatchEvent(new CustomEvent('favoritesChanged', {\r\n      detail: { chaletId: id.toString(), isLiked: newLikedState }\r\n    }));\r\n    \r\n    // Also try to update server\r\n    const apiUrl = newLikedState \r\n      ? 'http://localhost/real_estate_project/api/add_to_favorites.php' \r\n      : 'http://localhost/real_estate_project/api/remove_from_favorites.php';\r\n    \r\n    fetch(apiUrl, {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ chaletId: id }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(newLikedState ? 'Add to favorites response:' : 'Remove from favorites response:', data);\r\n        if (!data.success) {\r\n          if (data.message === 'User not logged in') {\r\n            // Session expired, show login popup\r\n            setShowLoginPopup(true);\r\n            // Revert the UI changes\r\n            setIsLiked(!newLikedState);\r\n            const revertFavorites = getFavoritesFromStorage();\r\n            if (newLikedState) {\r\n              const updatedFavorites = revertFavorites.filter(favId => favId !== id.toString());\r\n              localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n            } else {\r\n              if (!revertFavorites.includes(id.toString())) {\r\n                revertFavorites.push(id.toString());\r\n                localStorage.setItem('favorites', JSON.stringify(revertFavorites));\r\n              }\r\n            }\r\n          } else {\r\n            console.warn('Server update failed, but localStorage was updated');\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.warn('Server update failed, but localStorage was updated:', error);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n    \r\n    // Notify parent component if callback provided\r\n    if (onFavoriteChange) {\r\n      onFavoriteChange(id, newLikedState);\r\n    }\r\n  };\r\n\r\n  // Close login popup\r\n  const closeLoginPopup = () => {\r\n    setShowLoginPopup(false);\r\n  };\r\n\r\n  // Handle login redirect\r\n  const handleLoginRedirect = () => {\r\n    window.location.href = '/login';\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <Link \r\n        to={`/chalet/${createSlug(title)}`} \r\n        // Store the property ID as state to be accessible in the detail page\r\n        state={{ propertyId: id }}\r\n        className={`property-card ${variant}`}\r\n      >\r\n        <div className=\"property-image-container\">\r\n          <img \r\n            src={imageSrc} \r\n            alt={title || \"Swiss Chalet\"} \r\n            className=\"property-image\" \r\n            loading=\"lazy\" \r\n            onError={(e) => {\r\n              e.target.onerror = null;\r\n              e.target.src = \"/placeholder.jpg\";\r\n            }}\r\n          />\r\n          {status && <div className=\"property-badge\">{status}</div>}\r\n          \r\n          {/* Like Button */}\r\n          <div \r\n            className={`like-button ${isLiked ? 'liked' : ''} ${isLoading ? 'loading' : ''} ${!isAuthenticated ? 'not-authenticated' : ''}`}\r\n            onClick={handleLikeClick}\r\n\r\n          >\r\n            <FiHeart />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"property-details\">\r\n          <h3 className=\"property-title\">{title || \"Beautiful Swiss Chalet\"}</h3>\r\n          <div className=\"property-price\">{formattedPrice} CHF</div>\r\n          \r\n          {city && (\r\n            <div className=\"property-location\">\r\n              <FiMapPin className=\"property-icon\" /> {city}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"property-meta\">\r\n            {/* Always show beds/baths, with fallback to N/A */}\r\n            <span className=\"property-feature\">\r\n              <FiHome className=\"property-icon\" /> {bedroomValue} beds\r\n            </span>\r\n            <span className=\"property-feature\">\r\n              <FiDroplet className=\"property-icon\" /> {bathroomValue} baths\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      {/* Login Popup */}\r\n      {showLoginPopup && (\r\n        <div className=\"login-popup-overlay\" onClick={closeLoginPopup}>\r\n          <div className=\"login-popup\" onClick={(e) => e.stopPropagation()}>\r\n            <div className=\"login-popup-header\">\r\n              <h3>Login Required</h3>\r\n              <button className=\"close-popup\" onClick={closeLoginPopup}>\r\n                ×\r\n              </button>\r\n            </div>\r\n            <div className=\"login-popup-content\">\r\n              <FiHeart className=\"popup-heart-icon\" />\r\n              <p>You need to be logged in to add chalets to your favorites.</p>\r\n              <div className=\"login-popup-actions\">\r\n                <button className=\"login-btn\" onClick={handleLoginRedirect}>\r\n                  Login Now\r\n                </button>\r\n                <button className=\"cancel-btn\" onClick={closeLoginPopup}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Property;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}