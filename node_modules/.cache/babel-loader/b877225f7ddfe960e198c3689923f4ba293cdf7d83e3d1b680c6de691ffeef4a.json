{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\components\\\\SearchFilter.js\",\n  _s = $RefreshSig$();\n// AdaptiveSearchFilter.jsx - Works with different property data structures\nimport React, { useState, useEffect } from 'react';\nimport '../styles/SearchFilter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdaptiveSearchFilter = ({\n  properties,\n  setFilteredProperties\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [location, setLocation] = useState('');\n  const [minPrice, setMinPrice] = useState('');\n  const [maxPrice, setMaxPrice] = useState('');\n  const [bedrooms, setBedrooms] = useState('');\n  const [bathrooms, setBathrooms] = useState('');\n  const [sortBy, setSortBy] = useState('default');\n\n  // Analyze the property structure on first render\n  const [fieldNames, setFieldNames] = useState({\n    title: 'title',\n    location: 'location',\n    price: 'price',\n    bedrooms: 'bedrooms',\n    bathrooms: 'bathrooms',\n    createdAt: 'created_at',\n    likes: 'likes'\n  });\n\n  // Analyze sample property to determine field names\n  useEffect(() => {\n    if (properties && properties.length > 0) {\n      const sampleProperty = properties[0];\n      console.log(\"Sample property for field detection:\", sampleProperty);\n\n      // Map of possible alternative field names\n      const possibleFieldNames = {\n        title: ['title', 'name', 'propertyName', 'chaletName', 'property_name', 'chalet_name'],\n        location: ['location', 'city', 'town', 'area', 'region', 'address', 'place'],\n        price: ['price', 'cost', 'value', 'amount', 'priceValue', 'price_value'],\n        bedrooms: ['bedrooms', 'bedroom', 'rooms', 'bed_rooms', 'bed', 'beds'],\n        bathrooms: ['bathrooms', 'bathroom', 'bath_rooms', 'bath', 'baths'],\n        createdAt: ['created_at', 'createdAt', 'date', 'created', 'creation_date', 'dateCreated'],\n        likes: ['likes', 'popularity', 'like_count', 'likeCount', 'favorites', 'favorite_count']\n      };\n\n      // Detect actual field names from sample property\n      const detectedFields = {};\n      for (const [fieldType, possibleNames] of Object.entries(possibleFieldNames)) {\n        for (const name of possibleNames) {\n          if (sampleProperty[name] !== undefined) {\n            detectedFields[fieldType] = name;\n            break;\n          }\n        }\n      }\n      console.log(\"Detected field mappings:\", detectedFields);\n\n      // Update field names with detected ones, keeping defaults for any not found\n      setFieldNames(prev => ({\n        ...prev,\n        ...detectedFields\n      }));\n    }\n  }, [properties]);\n\n  // Helper function to safely get property values\n  const getPropertyValue = (property, fieldType) => {\n    const fieldName = fieldNames[fieldType];\n    return property[fieldName] !== undefined ? property[fieldName] : '';\n  };\n\n  // Get unique locations for the dropdown\n  const uniqueLocations = properties && properties.length > 0 ? [...new Set(properties.map(prop => getPropertyValue(prop, 'location')))] : [];\n\n  // Filter properties based on current filters\n  const handleFilter = () => {\n    console.log(\"Applying filters with field mappings:\", fieldNames);\n    let filtered = [...properties];\n\n    // Filter by search term (property name/title)\n    if (searchTerm) {\n      filtered = filtered.filter(prop => {\n        const title = getPropertyValue(prop, 'title');\n        return title && title.toString().toLowerCase().includes(searchTerm.toLowerCase());\n      });\n    }\n\n    // Filter by location\n    if (location) {\n      filtered = filtered.filter(prop => getPropertyValue(prop, 'location') === location);\n    }\n\n    // Filter by price range\n    if (minPrice) {\n      filtered = filtered.filter(prop => {\n        const price = getPropertyValue(prop, 'price');\n        return price && parseFloat(price) >= parseFloat(minPrice);\n      });\n    }\n    if (maxPrice) {\n      filtered = filtered.filter(prop => {\n        const price = getPropertyValue(prop, 'price');\n        return price && parseFloat(price) <= parseFloat(maxPrice);\n      });\n    }\n\n    // Filter by number of bedrooms\n    if (bedrooms) {\n      filtered = filtered.filter(prop => {\n        const beds = getPropertyValue(prop, 'bedrooms');\n        return beds && parseInt(beds) >= parseInt(bedrooms);\n      });\n    }\n\n    // Filter by number of bathrooms\n    if (bathrooms) {\n      filtered = filtered.filter(prop => {\n        const baths = getPropertyValue(prop, 'bathrooms');\n        return baths && parseInt(baths) >= parseInt(bathrooms);\n      });\n    }\n\n    // Sort filtered properties\n    switch (sortBy) {\n      case 'price-asc':\n        filtered.sort((a, b) => parseFloat(getPropertyValue(a, 'price')) - parseFloat(getPropertyValue(b, 'price')));\n        break;\n      case 'price-desc':\n        filtered.sort((a, b) => parseFloat(getPropertyValue(b, 'price')) - parseFloat(getPropertyValue(a, 'price')));\n        break;\n      case 'newest':\n        filtered.sort((a, b) => {\n          const dateA = new Date(getPropertyValue(a, 'createdAt') || 0);\n          const dateB = new Date(getPropertyValue(b, 'createdAt') || 0);\n          return dateB - dateA;\n        });\n        break;\n      case 'oldest':\n        filtered.sort((a, b) => {\n          const dateA = new Date(getPropertyValue(a, 'createdAt') || 0);\n          const dateB = new Date(getPropertyValue(b, 'createdAt') || 0);\n          return dateA - dateB;\n        });\n        break;\n      case 'most-liked':\n        filtered.sort((a, b) => {\n          const likesA = parseInt(getPropertyValue(a, 'likes') || 0);\n          const likesB = parseInt(getPropertyValue(b, 'likes') || 0);\n          return likesB - likesA;\n        });\n        break;\n      case 'a-z':\n        filtered.sort((a, b) => {\n          const titleA = getPropertyValue(a, 'title') || '';\n          const titleB = getPropertyValue(b, 'title') || '';\n          return titleA.toString().localeCompare(titleB.toString());\n        });\n        break;\n      case 'z-a':\n        filtered.sort((a, b) => {\n          const titleA = getPropertyValue(a, 'title') || '';\n          const titleB = getPropertyValue(b, 'title') || '';\n          return titleB.toString().localeCompare(titleA.toString());\n        });\n        break;\n      default:\n        // Keep original order or use default sorting\n        break;\n    }\n    console.log(\"Filtered properties:\", filtered.length);\n    setFilteredProperties(filtered);\n  };\n  const clearFilters = () => {\n    setSearchTerm('');\n    setLocation('');\n    setMinPrice('');\n    setMaxPrice('');\n    setBedrooms('');\n    setBathrooms('');\n    setSortBy('default');\n    setFilteredProperties(properties);\n  };\n\n  // Optional: Apply filters on input change\n  const handleInputChange = (setter, value) => {\n    setter(value);\n    // To enable real-time filtering, uncomment the line below\n    // setTimeout(handleFilter, 300);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-filter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Find Your Perfect Chalet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Search by Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search chalets...\",\n            value: searchTerm,\n            onChange: e => handleInputChange(setSearchTerm, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: location,\n            onChange: e => handleInputChange(setLocation, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Locations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), uniqueLocations.map((loc, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: loc,\n              children: loc\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Price Range (CHF)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Min\",\n              value: minPrice,\n              onChange: e => handleInputChange(setMinPrice, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"price-separator\",\n              children: \"to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Max\",\n              value: maxPrice,\n              onChange: e => handleInputChange(setMaxPrice, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Min. Bedrooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: bedrooms,\n            onChange: e => handleInputChange(setBedrooms, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Min. Bathrooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: bathrooms,\n            onChange: e => handleInputChange(setBathrooms, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortBy,\n            onChange: e => handleInputChange(setSortBy, e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"default\",\n              children: \"Default\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"price-asc\",\n              children: \"Price: Low to High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"price-desc\",\n              children: \"Price: High to Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"newest\",\n              children: \"Newest First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oldest\",\n              children: \"Oldest First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"most-liked\",\n              children: \"Most Popular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"a-z\",\n              children: \"Name: A to Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"z-a\",\n              children: \"Name: Z to A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button apply\",\n            onClick: handleFilter,\n            children: \"Apply Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"filter-button clear\",\n            onClick: clearFilters,\n            children: \"Clear Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(AdaptiveSearchFilter, \"6FT1UTw81oZcbj2cGakrHHBQiNY=\");\n_c = AdaptiveSearchFilter;\nexport default AdaptiveSearchFilter;\nvar _c;\n$RefreshReg$(_c, \"AdaptiveSearchFilter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdaptiveSearchFilter","properties","setFilteredProperties","_s","searchTerm","setSearchTerm","location","setLocation","minPrice","setMinPrice","maxPrice","setMaxPrice","bedrooms","setBedrooms","bathrooms","setBathrooms","sortBy","setSortBy","fieldNames","setFieldNames","title","price","createdAt","likes","length","sampleProperty","console","log","possibleFieldNames","detectedFields","fieldType","possibleNames","Object","entries","name","undefined","prev","getPropertyValue","property","fieldName","uniqueLocations","Set","map","prop","handleFilter","filtered","filter","toString","toLowerCase","includes","parseFloat","beds","parseInt","baths","sort","a","b","dateA","Date","dateB","likesA","likesB","titleA","titleB","localeCompare","clearFilters","handleInputChange","setter","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","loc","index","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/components/SearchFilter.js"],"sourcesContent":["// AdaptiveSearchFilter.jsx - Works with different property data structures\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../styles/SearchFilter.css';\r\n\r\nconst AdaptiveSearchFilter = ({ properties, setFilteredProperties }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [minPrice, setMinPrice] = useState('');\r\n  const [maxPrice, setMaxPrice] = useState('');\r\n  const [bedrooms, setBedrooms] = useState('');\r\n  const [bathrooms, setBathrooms] = useState('');\r\n  const [sortBy, setSortBy] = useState('default');\r\n  \r\n  // Analyze the property structure on first render\r\n  const [fieldNames, setFieldNames] = useState({\r\n    title: 'title',\r\n    location: 'location',\r\n    price: 'price',\r\n    bedrooms: 'bedrooms',\r\n    bathrooms: 'bathrooms',\r\n    createdAt: 'created_at',\r\n    likes: 'likes'\r\n  });\r\n  \r\n  // Analyze sample property to determine field names\r\n  useEffect(() => {\r\n    if (properties && properties.length > 0) {\r\n      const sampleProperty = properties[0];\r\n      console.log(\"Sample property for field detection:\", sampleProperty);\r\n      \r\n      // Map of possible alternative field names\r\n      const possibleFieldNames = {\r\n        title: ['title', 'name', 'propertyName', 'chaletName', 'property_name', 'chalet_name'],\r\n        location: ['location', 'city', 'town', 'area', 'region', 'address', 'place'],\r\n        price: ['price', 'cost', 'value', 'amount', 'priceValue', 'price_value'],\r\n        bedrooms: ['bedrooms', 'bedroom', 'rooms', 'bed_rooms', 'bed', 'beds'],\r\n        bathrooms: ['bathrooms', 'bathroom', 'bath_rooms', 'bath', 'baths'],\r\n        createdAt: ['created_at', 'createdAt', 'date', 'created', 'creation_date', 'dateCreated'],\r\n        likes: ['likes', 'popularity', 'like_count', 'likeCount', 'favorites', 'favorite_count']\r\n      };\r\n      \r\n      // Detect actual field names from sample property\r\n      const detectedFields = {};\r\n      \r\n      for (const [fieldType, possibleNames] of Object.entries(possibleFieldNames)) {\r\n        for (const name of possibleNames) {\r\n          if (sampleProperty[name] !== undefined) {\r\n            detectedFields[fieldType] = name;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      \r\n      console.log(\"Detected field mappings:\", detectedFields);\r\n      \r\n      // Update field names with detected ones, keeping defaults for any not found\r\n      setFieldNames(prev => ({\r\n        ...prev,\r\n        ...detectedFields\r\n      }));\r\n    }\r\n  }, [properties]);\r\n  \r\n  // Helper function to safely get property values\r\n  const getPropertyValue = (property, fieldType) => {\r\n    const fieldName = fieldNames[fieldType];\r\n    return property[fieldName] !== undefined ? property[fieldName] : '';\r\n  };\r\n  \r\n  // Get unique locations for the dropdown\r\n  const uniqueLocations = properties && properties.length > 0 \r\n    ? [...new Set(properties.map(prop => getPropertyValue(prop, 'location')))]\r\n    : [];\r\n  \r\n  // Filter properties based on current filters\r\n  const handleFilter = () => {\r\n    console.log(\"Applying filters with field mappings:\", fieldNames);\r\n    let filtered = [...properties];\r\n\r\n    // Filter by search term (property name/title)\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(prop => {\r\n        const title = getPropertyValue(prop, 'title');\r\n        return title && title.toString().toLowerCase().includes(searchTerm.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // Filter by location\r\n    if (location) {\r\n      filtered = filtered.filter(prop => getPropertyValue(prop, 'location') === location);\r\n    }\r\n\r\n    // Filter by price range\r\n    if (minPrice) {\r\n      filtered = filtered.filter(prop => {\r\n        const price = getPropertyValue(prop, 'price');\r\n        return price && parseFloat(price) >= parseFloat(minPrice);\r\n      });\r\n    }\r\n    \r\n    if (maxPrice) {\r\n      filtered = filtered.filter(prop => {\r\n        const price = getPropertyValue(prop, 'price');\r\n        return price && parseFloat(price) <= parseFloat(maxPrice);\r\n      });\r\n    }\r\n\r\n    // Filter by number of bedrooms\r\n    if (bedrooms) {\r\n      filtered = filtered.filter(prop => {\r\n        const beds = getPropertyValue(prop, 'bedrooms');\r\n        return beds && parseInt(beds) >= parseInt(bedrooms);\r\n      });\r\n    }\r\n\r\n    // Filter by number of bathrooms\r\n    if (bathrooms) {\r\n      filtered = filtered.filter(prop => {\r\n        const baths = getPropertyValue(prop, 'bathrooms');\r\n        return baths && parseInt(baths) >= parseInt(bathrooms);\r\n      });\r\n    }\r\n\r\n    // Sort filtered properties\r\n    switch (sortBy) {\r\n      case 'price-asc':\r\n        filtered.sort((a, b) => parseFloat(getPropertyValue(a, 'price')) - parseFloat(getPropertyValue(b, 'price')));\r\n        break;\r\n      case 'price-desc':\r\n        filtered.sort((a, b) => parseFloat(getPropertyValue(b, 'price')) - parseFloat(getPropertyValue(a, 'price')));\r\n        break;\r\n      case 'newest':\r\n        filtered.sort((a, b) => {\r\n          const dateA = new Date(getPropertyValue(a, 'createdAt') || 0);\r\n          const dateB = new Date(getPropertyValue(b, 'createdAt') || 0);\r\n          return dateB - dateA;\r\n        });\r\n        break;\r\n      case 'oldest':\r\n        filtered.sort((a, b) => {\r\n          const dateA = new Date(getPropertyValue(a, 'createdAt') || 0);\r\n          const dateB = new Date(getPropertyValue(b, 'createdAt') || 0);\r\n          return dateA - dateB;\r\n        });\r\n        break;\r\n      case 'most-liked':\r\n        filtered.sort((a, b) => {\r\n          const likesA = parseInt(getPropertyValue(a, 'likes') || 0);\r\n          const likesB = parseInt(getPropertyValue(b, 'likes') || 0);\r\n          return likesB - likesA;\r\n        });\r\n        break;\r\n      case 'a-z':\r\n        filtered.sort((a, b) => {\r\n          const titleA = getPropertyValue(a, 'title') || '';\r\n          const titleB = getPropertyValue(b, 'title') || '';\r\n          return titleA.toString().localeCompare(titleB.toString());\r\n        });\r\n        break;\r\n      case 'z-a':\r\n        filtered.sort((a, b) => {\r\n          const titleA = getPropertyValue(a, 'title') || '';\r\n          const titleB = getPropertyValue(b, 'title') || '';\r\n          return titleB.toString().localeCompare(titleA.toString());\r\n        });\r\n        break;\r\n      default:\r\n        // Keep original order or use default sorting\r\n        break;\r\n    }\r\n\r\n    console.log(\"Filtered properties:\", filtered.length);\r\n    setFilteredProperties(filtered);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setLocation('');\r\n    setMinPrice('');\r\n    setMaxPrice('');\r\n    setBedrooms('');\r\n    setBathrooms('');\r\n    setSortBy('default');\r\n    setFilteredProperties(properties);\r\n  };\r\n\r\n  // Optional: Apply filters on input change\r\n  const handleInputChange = (setter, value) => {\r\n    setter(value);\r\n    // To enable real-time filtering, uncomment the line below\r\n    // setTimeout(handleFilter, 300);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-filter\">\r\n      <div className=\"filter-container\">\r\n        <h3>Find Your Perfect Chalet</h3>\r\n        \r\n        <div className=\"filter-row\">\r\n          <div className=\"filter-group\">\r\n            <label>Search by Name</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search chalets...\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleInputChange(setSearchTerm, e.target.value)}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"filter-group\">\r\n            <label>Location</label>\r\n            <select \r\n              value={location} \r\n              onChange={(e) => handleInputChange(setLocation, e.target.value)}\r\n            >\r\n              <option value=\"\">All Locations</option>\r\n              {uniqueLocations.map((loc, index) => (\r\n                <option key={index} value={loc}>{loc}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"filter-row\">\r\n          <div className=\"filter-group\">\r\n            <label>Price Range (CHF)</label>\r\n            <div className=\"price-inputs\">\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Min\"\r\n                value={minPrice}\r\n                onChange={(e) => handleInputChange(setMinPrice, e.target.value)}\r\n              />\r\n              <span className=\"price-separator\">to</span>\r\n              <input\r\n                type=\"number\"\r\n                placeholder=\"Max\"\r\n                value={maxPrice}\r\n                onChange={(e) => handleInputChange(setMaxPrice, e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"filter-group\">\r\n            <label>Min. Bedrooms</label>\r\n            <select \r\n              value={bedrooms} \r\n              onChange={(e) => handleInputChange(setBedrooms, e.target.value)}\r\n            >\r\n              <option value=\"\">Any</option>\r\n              <option value=\"1\">1+</option>\r\n              <option value=\"2\">2+</option>\r\n              <option value=\"3\">3+</option>\r\n              <option value=\"4\">4+</option>\r\n              <option value=\"5\">5+</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"filter-group\">\r\n            <label>Min. Bathrooms</label>\r\n            <select \r\n              value={bathrooms} \r\n              onChange={(e) => handleInputChange(setBathrooms, e.target.value)}\r\n            >\r\n              <option value=\"\">Any</option>\r\n              <option value=\"1\">1+</option>\r\n              <option value=\"2\">2+</option>\r\n              <option value=\"3\">3+</option>\r\n              <option value=\"4\">4+</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"filter-row\">\r\n          <div className=\"filter-group\">\r\n            <label>Sort By</label>\r\n            <select \r\n              value={sortBy} \r\n              onChange={(e) => handleInputChange(setSortBy, e.target.value)}\r\n            >\r\n              <option value=\"default\">Default</option>\r\n              <option value=\"price-asc\">Price: Low to High</option>\r\n              <option value=\"price-desc\">Price: High to Low</option>\r\n              <option value=\"newest\">Newest First</option>\r\n              <option value=\"oldest\">Oldest First</option>\r\n              <option value=\"most-liked\">Most Popular</option>\r\n              <option value=\"a-z\">Name: A to Z</option>\r\n              <option value=\"z-a\">Name: Z to A</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"filter-buttons\">\r\n            <button className=\"filter-button apply\" onClick={handleFilter}>Apply Filters</button>\r\n            <button className=\"filter-button clear\" onClick={clearFilters}>Clear Filters</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdaptiveSearchFilter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}