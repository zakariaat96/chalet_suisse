{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\real_estate_project\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null,\n        loading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SESSION_CHECK':\n      return {\n        ...state,\n        isAuthenticated: action.payload.logged_in,\n        user: action.payload.logged_in ? {\n          id: action.payload.user_id,\n          email: action.payload.email,\n          is_admin: action.payload.is_admin,\n          name: action.payload.name\n        } : null,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  loading: true\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const navigate = useNavigate();\n\n  // Check session status on mount and periodically\n  const checkSessionStatus = async () => {\n    try {\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/check_session_status.php', {\n        method: 'GET',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      console.log('Session status:', data);\n      dispatch({\n        type: 'SESSION_CHECK',\n        payload: data\n      });\n\n      // If user was logged in frontend but session expired on backend\n      if (state.isAuthenticated && !data.logged_in) {\n        console.log('Session expired, logging out...');\n        localStorage.removeItem('user');\n        localStorage.removeItem('favorites'); // Clear favorites too\n      }\n\n      // If session exists but frontend thinks user is logged out\n      if (!state.isAuthenticated && data.logged_in) {\n        console.log('Session found, logging in...');\n        localStorage.setItem('user', JSON.stringify({\n          id: data.user_id,\n          email: data.email,\n          is_admin: data.is_admin,\n          name: data.name\n        }));\n      }\n    } catch (error) {\n      console.error('Session check failed:', error);\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n\n  // Check session on mount\n  useEffect(() => {\n    checkSessionStatus();\n  }, []);\n\n  // Periodic session check every 5 minutes\n  useEffect(() => {\n    const interval = setInterval(checkSessionStatus, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, [state.isAuthenticated]);\n\n  // Also check session when user comes back to the tab\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        checkSessionStatus();\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n  const login = userData => {\n    console.log('Logging in user:', userData);\n\n    // Store in localStorage for persistence\n    localStorage.setItem('user', JSON.stringify(userData));\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n\n    // Navigate based on user role\n    if (userData.is_admin) {\n      navigate('/admin-dashboard');\n    } else {\n      navigate('/user-dashboard');\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout API to destroy server session\n      await fetch('http://localhost/REAL_ESTATE_PROJECT/api/logout.php', {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n    }\n\n    // Clear local storage\n    localStorage.removeItem('user');\n    localStorage.removeItem('favorites');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    navigate('/');\n  };\n\n  // Provide method to manually sync session\n  const syncSession = () => {\n    return checkSessionStatus();\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    syncSession,\n    checkSessionStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"IMw/uPoukg6eDlRX+qvMVU8YQtU=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","isAuthenticated","user","payload","loading","logged_in","id","user_id","email","is_admin","name","initialState","AuthProvider","children","_s","dispatch","navigate","checkSessionStatus","response","fetch","method","credentials","headers","data","json","console","log","localStorage","removeItem","setItem","JSON","stringify","error","interval","setInterval","clearInterval","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","login","userData","logout","syncSession","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/xampp/htdocs/real_estate_project/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        loading: false\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case 'SESSION_CHECK':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload.logged_in,\r\n        user: action.payload.logged_in ? {\r\n          id: action.payload.user_id,\r\n          email: action.payload.email,\r\n          is_admin: action.payload.is_admin,\r\n          name: action.payload.name\r\n        } : null,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  loading: true\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  const navigate = useNavigate();\r\n\r\n  // Check session status on mount and periodically\r\n  const checkSessionStatus = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost/REAL_ESTATE_PROJECT/api/check_session_status.php', {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log('Session status:', data);\r\n      \r\n      dispatch({ type: 'SESSION_CHECK', payload: data });\r\n      \r\n      // If user was logged in frontend but session expired on backend\r\n      if (state.isAuthenticated && !data.logged_in) {\r\n        console.log('Session expired, logging out...');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('favorites'); // Clear favorites too\r\n      }\r\n      \r\n      // If session exists but frontend thinks user is logged out\r\n      if (!state.isAuthenticated && data.logged_in) {\r\n        console.log('Session found, logging in...');\r\n        localStorage.setItem('user', JSON.stringify({\r\n          id: data.user_id,\r\n          email: data.email,\r\n          is_admin: data.is_admin,\r\n          name: data.name\r\n        }));\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Session check failed:', error);\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  // Check session on mount\r\n  useEffect(() => {\r\n    checkSessionStatus();\r\n  }, []);\r\n\r\n  // Periodic session check every 5 minutes\r\n  useEffect(() => {\r\n    const interval = setInterval(checkSessionStatus, 5 * 60 * 1000);\r\n    return () => clearInterval(interval);\r\n  }, [state.isAuthenticated]);\r\n\r\n  // Also check session when user comes back to the tab\r\n  useEffect(() => {\r\n    const handleVisibilityChange = () => {\r\n      if (!document.hidden) {\r\n        checkSessionStatus();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    console.log('Logging in user:', userData);\r\n    \r\n    // Store in localStorage for persistence\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    \r\n    dispatch({ \r\n      type: 'LOGIN', \r\n      payload: userData \r\n    });\r\n\r\n    // Navigate based on user role\r\n    if (userData.is_admin) {\r\n      navigate('/admin-dashboard');\r\n    } else {\r\n      navigate('/user-dashboard');\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Call logout API to destroy server session\r\n      await fetch('http://localhost/REAL_ESTATE_PROJECT/api/logout.php', {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout API call failed:', error);\r\n    }\r\n\r\n    // Clear local storage\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('favorites');\r\n    \r\n    dispatch({ type: 'LOGOUT' });\r\n    navigate('/');\r\n  };\r\n\r\n  // Provide method to manually sync session\r\n  const syncSession = () => {\r\n    return checkSessionStatus();\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    syncSession,\r\n    checkSessionStatus\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}